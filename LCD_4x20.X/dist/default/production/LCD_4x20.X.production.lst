

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Nov 27 00:06:15 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  00DCFA                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _anio
    46  00DCFA  0014               	dw	20
    47                           
    48                           ;initializer for _fin_hora_ilum
    49  00DCFC  17                 	db	23
    50                           
    51                           ;initializer for _fin_hora_riego
    52  00DCFD  17                 	db	23
    53                           
    54                           ;initializer for _fin_min_ilum
    55  00DCFE  3B                 	db	59
    56                           
    57                           ;initializer for _fin_min_riego
    58  00DCFF  3B                 	db	59
    59                           
    60                           ;initializer for _inicio_hora_ilum
    61  00DD00  14                 	db	20
    62                           
    63                           ;initializer for _inicio_hora_riego
    64  00DD01  16                 	db	22
    65                           
    66                           	psect	idataBANK0
    67  00DD7E                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _posicionesUp
    71  00DD7E  0002               	dw	2
    72  00DD80  0005               	dw	5
    73  00DD82  0002               	dw	2
    74  00DD84  0008               	dw	8
    75  00DD86  0002               	dw	2
    76  00DD88  000F               	dw	15
    77  00DD8A  0002               	dw	2
    78  00DD8C  0012               	dw	18
    79  00DD8E  0004               	dw	4
    80  00DD90  0005               	dw	5
    81  00DD92  0004               	dw	4
    82  00DD94  0008               	dw	8
    83  00DD96  0004               	dw	4
    84  00DD98  000F               	dw	15
    85  00DD9A  0004               	dw	4
    86  00DD9C  0012               	dw	18
    87                           
    88                           ;initializer for _posicionesLeft
    89  00DD9E  0002               	dw	2
    90  00DDA0  0000               	dw	0
    91  00DDA2  0003               	dw	3
    92  00DDA4  0000               	dw	0
    93  00DDA6  0003               	dw	3
    94  00DDA8  0003               	dw	3
    95  00DDAA  0003               	dw	3
    96  00DDAC  0006               	dw	6
    97  00DDAE  0004               	dw	4
    98  00DDB0  0000               	dw	0
    99  00DDB2  0004               	dw	4
   100  00DDB4  0003               	dw	3
   101                           
   102                           ;initializer for _Grados
   103  00DDB6  00                 	db	0
   104  00DDB7  A0                 	db	160
   105  00DDB8  41                 	db	65
   106                           
   107                           ;initializer for _Temp_prog
   108  00DDB9  00                 	db	0
   109  00DDBA  B4                 	db	180
   110  00DDBB  41                 	db	65
   111                           
   112                           ;initializer for _dia
   113  00DDBC  0006               	dw	6
   114                           
   115                           ;initializer for _hora
   116  00DDBE  0012               	dw	18
   117                           
   118                           ;initializer for _mes
   119  00DDC0  000B               	dw	11
   120                           
   121                           ;initializer for _minuto
   122  00DDC2  0037               	dw	55
   123                           
   124                           	psect	mediumconst
   125  00FE94                     __pmediumconst:
   126                           	opt stack 0
   127  00FE94  00                 	db	0
   128  00FE95                     _dpowers:
   129                           	opt stack 0
   130  00FE95  0001               	dw	1
   131  00FE97  000A               	dw	10
   132  00FE99  0064               	dw	100
   133  00FE9B  03E8               	dw	1000
   134  00FE9D  2710               	dw	10000
   135  00FE9F                     __end_of_dpowers:
   136                           	opt stack 0
   137  00FE9F                     STR_5:
   138  00FE9F  25                 	db	37
   139  00FEA0  30                 	db	48	;'0'
   140  00FEA1  32                 	db	50	;'2'
   141  00FEA2  75                 	db	117	;'u'
   142  00FEA3  2F                 	db	47
   143  00FEA4  25                 	db	37
   144  00FEA5  30                 	db	48	;'0'
   145  00FEA6  32                 	db	50	;'2'
   146  00FEA7  75                 	db	117	;'u'
   147  00FEA8  2F                 	db	47
   148  00FEA9  25                 	db	37
   149  00FEAA  30                 	db	48	;'0'
   150  00FEAB  32                 	db	50	;'2'
   151  00FEAC  75                 	db	117	;'u'
   152  00FEAD  20                 	db	32
   153  00FEAE  20                 	db	32
   154  00FEAF  20                 	db	32
   155  00FEB0  20                 	db	32
   156  00FEB1  20                 	db	32
   157  00FEB2  20                 	db	32
   158  00FEB3  20                 	db	32
   159  00FEB4  20                 	db	32
   160  00FEB5  20                 	db	32
   161  00FEB6  20                 	db	32
   162  00FEB7  20                 	db	32
   163  00FEB8  20                 	db	32
   164  00FEB9  20                 	db	32
   165  00FEBA  00                 	db	0
   166  00FEBB                     STR_6:
   167  00FEBB  25                 	db	37
   168  00FEBC  30                 	db	48	;'0'
   169  00FEBD  32                 	db	50	;'2'
   170  00FEBE  75                 	db	117	;'u'
   171  00FEBF  3A                 	db	58	;':'
   172  00FEC0  25                 	db	37
   173  00FEC1  30                 	db	48	;'0'
   174  00FEC2  32                 	db	50	;'2'
   175  00FEC3  75                 	db	117	;'u'
   176  00FEC4  3A                 	db	58	;':'
   177  00FEC5  25                 	db	37
   178  00FEC6  30                 	db	48	;'0'
   179  00FEC7  32                 	db	50	;'2'
   180  00FEC8  75                 	db	117	;'u'
   181  00FEC9  20                 	db	32
   182  00FECA  20                 	db	32
   183  00FECB  20                 	db	32
   184  00FECC  20                 	db	32
   185  00FECD  20                 	db	32
   186  00FECE  20                 	db	32
   187  00FECF  20                 	db	32
   188  00FED0  20                 	db	32
   189  00FED1  20                 	db	32
   190  00FED2  20                 	db	32
   191  00FED3  20                 	db	32
   192  00FED4  20                 	db	32
   193  00FED5  20                 	db	32
   194  00FED6  00                 	db	0
   195  00FED7                     STR_4:
   196  00FED7  20                 	db	32
   197  00FED8  20                 	db	32
   198  00FED9  20                 	db	32
   199  00FEDA  20                 	db	32
   200  00FEDB  20                 	db	32
   201  00FEDC  20                 	db	32
   202  00FEDD  20                 	db	32
   203  00FEDE  20                 	db	32
   204  00FEDF  20                 	db	32
   205  00FEE0  20                 	db	32
   206  00FEE1  20                 	db	32
   207  00FEE2  20                 	db	32
   208  00FEE3  20                 	db	32
   209  00FEE4  20                 	db	32
   210  00FEE5  20                 	db	32
   211  00FEE6  20                 	db	32
   212  00FEE7  20                 	db	32
   213  00FEE8  20                 	db	32
   214  00FEE9  20                 	db	32
   215  00FEEA  20                 	db	32
   216  00FEEB  00                 	db	0
   217  00FEEC                     STR_77:
   218  00FEEC  4C                 	db	76	;'L'
   219  00FEED  75                 	db	117	;'u'
   220  00FEEE  6E                 	db	110	;'n'
   221  00FEEF  65                 	db	101	;'e'
   222  00FEF0  73                 	db	115	;'s'
   223  00FEF1  20                 	db	32
   224  00FEF2  20                 	db	32
   225  00FEF3  20                 	db	32
   226  00FEF4  20                 	db	32
   227  00FEF5  20                 	db	32
   228  00FEF6  20                 	db	32
   229  00FEF7  20                 	db	32
   230  00FEF8  20                 	db	32
   231  00FEF9  20                 	db	32
   232  00FEFA  20                 	db	32
   233  00FEFB  20                 	db	32
   234  00FEFC  20                 	db	32
   235  00FEFD  20                 	db	32
   236  00FEFE  20                 	db	32
   237  00FEFF  20                 	db	32
   238  00FF00  00                 	db	0
   239  00FF01                     STR_87:
   240  00FF01  53                 	db	83	;'S'
   241  00FF02  61                 	db	97	;'a'
   242  00FF03  62                 	db	98	;'b'
   243  00FF04  61                 	db	97	;'a'
   244  00FF05  64                 	db	100	;'d'
   245  00FF06  6F                 	db	111	;'o'
   246  00FF07  20                 	db	32
   247  00FF08  20                 	db	32
   248  00FF09  20                 	db	32
   249  00FF0A  20                 	db	32
   250  00FF0B  20                 	db	32
   251  00FF0C  20                 	db	32
   252  00FF0D  20                 	db	32
   253  00FF0E  20                 	db	32
   254  00FF0F  20                 	db	32
   255  00FF10  20                 	db	32
   256  00FF11  20                 	db	32
   257  00FF12  20                 	db	32
   258  00FF13  20                 	db	32
   259  00FF14  20                 	db	32
   260  00FF15  00                 	db	0
   261  00FF16                     STR_79:
   262  00FF16  4D                 	db	77	;'M'
   263  00FF17  61                 	db	97	;'a'
   264  00FF18  72                 	db	114	;'r'
   265  00FF19  74                 	db	116	;'t'
   266  00FF1A  65                 	db	101	;'e'
   267  00FF1B  73                 	db	115	;'s'
   268  00FF1C  20                 	db	32
   269  00FF1D  20                 	db	32
   270  00FF1E  20                 	db	32
   271  00FF1F  20                 	db	32
   272  00FF20  20                 	db	32
   273  00FF21  20                 	db	32
   274  00FF22  20                 	db	32
   275  00FF23  20                 	db	32
   276  00FF24  20                 	db	32
   277  00FF25  20                 	db	32
   278  00FF26  20                 	db	32
   279  00FF27  20                 	db	32
   280  00FF28  20                 	db	32
   281  00FF29  20                 	db	32
   282  00FF2A  00                 	db	0
   283  00FF2B                     STR_83:
   284  00FF2B  4A                 	db	74	;'J'
   285  00FF2C  75                 	db	117	;'u'
   286  00FF2D  65                 	db	101	;'e'
   287  00FF2E  76                 	db	118	;'v'
   288  00FF2F  65                 	db	101	;'e'
   289  00FF30  73                 	db	115	;'s'
   290  00FF31  20                 	db	32
   291  00FF32  20                 	db	32
   292  00FF33  20                 	db	32
   293  00FF34  20                 	db	32
   294  00FF35  20                 	db	32
   295  00FF36  20                 	db	32
   296  00FF37  20                 	db	32
   297  00FF38  20                 	db	32
   298  00FF39  20                 	db	32
   299  00FF3A  20                 	db	32
   300  00FF3B  20                 	db	32
   301  00FF3C  20                 	db	32
   302  00FF3D  20                 	db	32
   303  00FF3E  20                 	db	32
   304  00FF3F  00                 	db	0
   305  00FF40                     STR_75:
   306  00FF40  44                 	db	68	;'D'
   307  00FF41  6F                 	db	111	;'o'
   308  00FF42  6D                 	db	109	;'m'
   309  00FF43  69                 	db	105	;'i'
   310  00FF44  6E                 	db	110	;'n'
   311  00FF45  67                 	db	103	;'g'
   312  00FF46  6F                 	db	111	;'o'
   313  00FF47  20                 	db	32
   314  00FF48  20                 	db	32
   315  00FF49  20                 	db	32
   316  00FF4A  20                 	db	32
   317  00FF4B  20                 	db	32
   318  00FF4C  20                 	db	32
   319  00FF4D  20                 	db	32
   320  00FF4E  20                 	db	32
   321  00FF4F  20                 	db	32
   322  00FF50  20                 	db	32
   323  00FF51  20                 	db	32
   324  00FF52  20                 	db	32
   325  00FF53  20                 	db	32
   326  00FF54  00                 	db	0
   327  00FF55                     STR_85:
   328  00FF55  56                 	db	86	;'V'
   329  00FF56  69                 	db	105	;'i'
   330  00FF57  65                 	db	101	;'e'
   331  00FF58  72                 	db	114	;'r'
   332  00FF59  6E                 	db	110	;'n'
   333  00FF5A  65                 	db	101	;'e'
   334  00FF5B  73                 	db	115	;'s'
   335  00FF5C  20                 	db	32
   336  00FF5D  20                 	db	32
   337  00FF5E  20                 	db	32
   338  00FF5F  20                 	db	32
   339  00FF60  20                 	db	32
   340  00FF61  20                 	db	32
   341  00FF62  20                 	db	32
   342  00FF63  20                 	db	32
   343  00FF64  20                 	db	32
   344  00FF65  20                 	db	32
   345  00FF66  20                 	db	32
   346  00FF67  20                 	db	32
   347  00FF68  20                 	db	32
   348  00FF69  00                 	db	0
   349  00FF6A                     STR_81:
   350  00FF6A  4D                 	db	77	;'M'
   351  00FF6B  69                 	db	105	;'i'
   352  00FF6C  65                 	db	101	;'e'
   353  00FF6D  72                 	db	114	;'r'
   354  00FF6E  63                 	db	99	;'c'
   355  00FF6F  6F                 	db	111	;'o'
   356  00FF70  6C                 	db	108	;'l'
   357  00FF71  65                 	db	101	;'e'
   358  00FF72  73                 	db	115	;'s'
   359  00FF73  20                 	db	32
   360  00FF74  20                 	db	32
   361  00FF75  20                 	db	32
   362  00FF76  20                 	db	32
   363  00FF77  20                 	db	32
   364  00FF78  20                 	db	32
   365  00FF79  20                 	db	32
   366  00FF7A  20                 	db	32
   367  00FF7B  20                 	db	32
   368  00FF7C  20                 	db	32
   369  00FF7D  20                 	db	32
   370  00FF7E  00                 	db	0
   371  00FF7F                     STR_3:
   372  00FF7F  43                 	db	67	;'C'
   373  00FF80  45                 	db	69	;'E'
   374  00FF81  4E                 	db	78	;'N'
   375  00FF82  54                 	db	84	;'T'
   376  00FF83  45                 	db	69	;'E'
   377  00FF84  52                 	db	82	;'R'
   378  00FF85  20                 	db	32
   379  00FF86  20                 	db	32
   380  00FF87  20                 	db	32
   381  00FF88  20                 	db	32
   382  00FF89  20                 	db	32
   383  00FF8A  20                 	db	32
   384  00FF8B  20                 	db	32
   385  00FF8C  20                 	db	32
   386  00FF8D  20                 	db	32
   387  00FF8E  20                 	db	32
   388  00FF8F  20                 	db	32
   389  00FF90  20                 	db	32
   390  00FF91  20                 	db	32
   391  00FF92  00                 	db	0
   392  00FF93                     STR_2:
   393  00FF93  52                 	db	82	;'R'
   394  00FF94  49                 	db	73	;'I'
   395  00FF95  47                 	db	71	;'G'
   396  00FF96  48                 	db	72	;'H'
   397  00FF97  54                 	db	84	;'T'
   398  00FF98  20                 	db	32
   399  00FF99  20                 	db	32
   400  00FF9A  20                 	db	32
   401  00FF9B  20                 	db	32
   402  00FF9C  20                 	db	32
   403  00FF9D  20                 	db	32
   404  00FF9E  20                 	db	32
   405  00FF9F  20                 	db	32
   406  00FFA0  20                 	db	32
   407  00FFA1  20                 	db	32
   408  00FFA2  20                 	db	32
   409  00FFA3  20                 	db	32
   410  00FFA4  20                 	db	32
   411  00FFA5  00                 	db	0
   412  00FFA6                     STR_7:
   413  00FFA6  50                 	db	80	;'P'
   414  00FFA7  72                 	db	114	;'r'
   415  00FFA8  6F                 	db	111	;'o'
   416  00FFA9  67                 	db	103	;'g'
   417  00FFAA  72                 	db	114	;'r'
   418  00FFAB  61                 	db	97	;'a'
   419  00FFAC  6D                 	db	109	;'m'
   420  00FFAD  20                 	db	32
   421  00FFAE  64                 	db	100	;'d'
   422  00FFAF  65                 	db	101	;'e'
   423  00FFB0  6C                 	db	108	;'l'
   424  00FFB1  20                 	db	32
   425  00FFB2  72                 	db	114	;'r'
   426  00FFB3  65                 	db	101	;'e'
   427  00FFB4  6C                 	db	108	;'l'
   428  00FFB5  6F                 	db	111	;'o'
   429  00FFB6  6A                 	db	106	;'j'
   430  00FFB7  00                 	db	0
   431  00FFB8                     STR_34:
   432  00FFB8  49                 	db	73	;'I'
   433  00FFB9  6E                 	db	110	;'n'
   434  00FFBA  69                 	db	105	;'i'
   435  00FFBB  63                 	db	99	;'c'
   436  00FFBC  20                 	db	32
   437  00FFBD  25                 	db	37
   438  00FFBE  30                 	db	48	;'0'
   439  00FFBF  32                 	db	50	;'2'
   440  00FFC0  75                 	db	117	;'u'
   441  00FFC1  3A                 	db	58	;':'
   442  00FFC2  25                 	db	37
   443  00FFC3  30                 	db	48	;'0'
   444  00FFC4  32                 	db	50	;'2'
   445  00FFC5  75                 	db	117	;'u'
   446  00FFC6  00                 	db	0
   447  00FFC7                     STR_35:
   448  00FFC7  46                 	db	70	;'F'
   449  00FFC8  69                 	db	105	;'i'
   450  00FFC9  6E                 	db	110	;'n'
   451  00FFCA  20                 	db	32
   452  00FFCB  25                 	db	37
   453  00FFCC  30                 	db	48	;'0'
   454  00FFCD  32                 	db	50	;'2'
   455  00FFCE  75                 	db	117	;'u'
   456  00FFCF  3A                 	db	58	;':'
   457  00FFD0  25                 	db	37
   458  00FFD1  30                 	db	48	;'0'
   459  00FFD2  32                 	db	50	;'2'
   460  00FFD3  75                 	db	117	;'u'
   461  00FFD4  00                 	db	0
   462  00FFD5                     STR_36:
   463  00FFD5  49                 	db	73	;'I'
   464  00FFD6  6C                 	db	108	;'l'
   465  00FFD7  75                 	db	117	;'u'
   466  00FFD8  6D                 	db	109	;'m'
   467  00FFD9  69                 	db	105	;'i'
   468  00FFDA  6E                 	db	110	;'n'
   469  00FFDB  61                 	db	97	;'a'
   470  00FFDC  63                 	db	99	;'c'
   471  00FFDD  69                 	db	105	;'i'
   472  00FFDE  6F                 	db	111	;'o'
   473  00FFDF  6E                 	db	110	;'n'
   474  00FFE0  00                 	db	0
   475  00FFE1                     STR_88:
   476  00FFE1  28                 	db	40
   477  00FFE2  6E                 	db	110	;'n'
   478  00FFE3  75                 	db	117	;'u'
   479  00FFE4  6C                 	db	108	;'l'
   480  00FFE5  6C                 	db	108	;'l'
   481  00FFE6  29                 	db	41
   482  00FFE7  00                 	db	0
   483  00FFE8                     STR_33:
   484  00FFE8  52                 	db	82	;'R'
   485  00FFE9  69                 	db	105	;'i'
   486  00FFEA  65                 	db	101	;'e'
   487  00FFEB  67                 	db	103	;'g'
   488  00FFEC  6F                 	db	111	;'o'
   489  00FFED  00                 	db	0
   490  00FFEE                     STR_1:
   491  00FFEE  25                 	db	37
   492  00FFEF  30                 	db	48	;'0'
   493  00FFF0  33                 	db	51	;'3'
   494  00FFF1  75                 	db	117	;'u'
   495  00FFF2  00                 	db	0
   496  00FFF3                     STR_74:
   497  00FFF3  25                 	db	37
   498  00FFF4  73                 	db	115	;'s'
   499  00FFF5  00                 	db	0
   500  0000                     
   501                           ; #config settings
   502  00FFF6  00                 	db	0	; dummy byte at the end
   503  0000                     
   504                           	psect	nvBANK0
   505  0000E8                     __pnvBANK0:
   506                           	opt stack 0
   507  0000E8                     _anio_d:
   508                           	opt stack 0
   509  0000E8                     	ds	1
   510  0000E9                     _anio_u:
   511                           	opt stack 0
   512  0000E9                     	ds	1
   513  0000EA                     _dia_semana:
   514                           	opt stack 0
   515  0000EA                     	ds	1
   516  0000EB                     _fecha_d:
   517                           	opt stack 0
   518  0000EB                     	ds	1
   519  0000EC                     _fecha_u:
   520                           	opt stack 0
   521  0000EC                     	ds	1
   522  0000ED                     _hora_d:
   523                           	opt stack 0
   524  0000ED                     	ds	1
   525  0000EE                     _hora_u:
   526                           	opt stack 0
   527  0000EE                     	ds	1
   528  0000EF                     _mes_d:
   529                           	opt stack 0
   530  0000EF                     	ds	1
   531  0000F0                     _mes_u:
   532                           	opt stack 0
   533  0000F0                     	ds	1
   534  0000F1                     _minuto_d:
   535                           	opt stack 0
   536  0000F1                     	ds	1
   537  0000F2                     _minuto_u:
   538                           	opt stack 0
   539  0000F2                     	ds	1
   540  0000F3                     _segundo_d:
   541                           	opt stack 0
   542  0000F3                     	ds	1
   543  0000F4                     _segundo_u:
   544                           	opt stack 0
   545  0000F4                     	ds	1
   546  0000                     _ANCON0	set	3912
   547  0000                     _ANCON1	set	3913
   548  0000                     _RTCCFG	set	3903
   549  0000                     _RTCCFGbits	set	3903
   550  0000                     _ADCON0	set	4034
   551  0000                     _ADCON0bits	set	4034
   552  0000                     _ADCON1	set	4033
   553  0000                     _ADRESH	set	4036
   554  0000                     _ALRMCFGbits	set	3985
   555  0000                     _EECON2	set	4007
   556  0000                     _INTCONbits	set	4082
   557  0000                     _LATAbits	set	3977
   558  0000                     _LATBbits	set	3978
   559  0000                     _OSCCONbits	set	4051
   560  0000                     _OSCTUNEbits	set	3995
   561  0000                     _PIE3bits	set	4003
   562  0000                     _PORTAbits	set	3968
   563  0000                     _PORTCbits	set	3970
   564  0000                     _RTCVALH	set	3993
   565  0000                     _RTCVALL	set	3992
   566  0000                     _T1CONbits	set	4045
   567  0000                     _TRISA	set	3986
   568  0000                     _TRISB	set	3987
   569  0000                     _TRISBbits	set	3987
   570  0000                     _TRISC	set	3988
   571                           
   572                           	psect	cinit
   573  00DE6C                     __pcinit:
   574                           	opt stack 0
   575  00DE6C                     start_initialization:
   576                           	opt stack 0
   577  00DE6C                     __initialization:
   578                           	opt stack 0
   579                           
   580                           ; Clear objects allocated to BANK0 (66 bytes)
   581  00DE6C  EE00  F0A6         	lfsr	0,__pbssBANK0
   582  00DE70  0E42               	movlw	66
   583  00DE72                     clear_0:
   584  00DE72  6AEE               	clrf	postinc0,c
   585  00DE74  06E8               	decf	wreg,f,c
   586  00DE76  E1FD               	bnz	clear_0
   587                           
   588                           ; Clear objects allocated to COMRAM (6 bytes)
   589  00DE78  6A5F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   590  00DE7A  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   591  00DE7C  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   592  00DE7E  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   593  00DE80  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   594  00DE82  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   595                           
   596                           ; Initialize objects allocated to BANK0 (70 bytes)
   597                           ; load TBLPTR registers with __pidataBANK0
   598  00DE84  0E7E               	movlw	low __pidataBANK0
   599  00DE86  6EF6               	movwf	tblptrl,c
   600  00DE88  0EDD               	movlw	high __pidataBANK0
   601  00DE8A  6EF7               	movwf	tblptrh,c
   602  00DE8C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   603  00DE8E  6EF8               	movwf	tblptru,c
   604  00DE90  EE00  F060         	lfsr	0,__pdataBANK0
   605  00DE94  EE10 F046          	lfsr	1,70
   606  00DE98                     copy_data0:
   607  00DE98  0009               	tblrd		*+
   608  00DE9A  CFF5 FFEE          	movff	tablat,postinc0
   609  00DE9E  50E5               	movf	postdec1,w,c
   610  00DEA0  50E1               	movf	fsr1l,w,c
   611  00DEA2  E1FA               	bnz	copy_data0
   612                           
   613                           ; Initialize objects allocated to COMRAM (8 bytes)
   614                           ; load TBLPTR registers with __pidataCOMRAM
   615  00DEA4  0EFA               	movlw	low __pidataCOMRAM
   616  00DEA6  6EF6               	movwf	tblptrl,c
   617  00DEA8  0EDC               	movlw	high __pidataCOMRAM
   618  00DEAA  6EF7               	movwf	tblptrh,c
   619  00DEAC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   620  00DEAE  6EF8               	movwf	tblptru,c
   621  00DEB0  EE00  F052         	lfsr	0,__pdataCOMRAM
   622  00DEB4  EE10 F008          	lfsr	1,8
   623  00DEB8                     copy_data1:
   624  00DEB8  0009               	tblrd		*+
   625  00DEBA  CFF5 FFEE          	movff	tablat,postinc0
   626  00DEBE  50E5               	movf	postdec1,w,c
   627  00DEC0  50E1               	movf	fsr1l,w,c
   628  00DEC2  E1FA               	bnz	copy_data1
   629  00DEC4                     end_of_initialization:
   630                           	opt stack 0
   631  00DEC4                     __end_of__initialization:
   632                           	opt stack 0
   633  00DEC4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   634  00DEC6  6EF8               	movwf	tblptru,c
   635  00DEC8  0100               	movlb	0
   636  00DECA  EFA7  F075         	goto	_main	;jump to C main() function
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           postinc0	equ	0xFEE
   642                           wreg	equ	0xFE8
   643                           postdec1	equ	0xFE5
   644                           fsr1l	equ	0xFE1
   645                           
   646                           	psect	bssCOMRAM
   647  00005A                     __pbssCOMRAM:
   648                           	opt stack 0
   649  00005A                     _inicio_min_ilum:
   650                           	opt stack 0
   651  00005A                     	ds	1
   652  00005B                     _inicio_min_riego:
   653                           	opt stack 0
   654  00005B                     	ds	1
   655  00005C                     _RtccDate:
   656                           	opt stack 0
   657  00005C                     	ds	4
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           postinc0	equ	0xFEE
   663                           wreg	equ	0xFE8
   664                           postdec1	equ	0xFE5
   665                           fsr1l	equ	0xFE1
   666                           
   667                           	psect	dataCOMRAM
   668  000052                     __pdataCOMRAM:
   669                           	opt stack 0
   670  000052                     _anio:
   671                           	opt stack 0
   672  000052                     	ds	2
   673  000054                     _fin_hora_ilum:
   674                           	opt stack 0
   675  000054                     	ds	1
   676  000055                     _fin_hora_riego:
   677                           	opt stack 0
   678  000055                     	ds	1
   679  000056                     _fin_min_ilum:
   680                           	opt stack 0
   681  000056                     	ds	1
   682  000057                     _fin_min_riego:
   683                           	opt stack 0
   684  000057                     	ds	1
   685  000058                     _inicio_hora_ilum:
   686                           	opt stack 0
   687  000058                     	ds	1
   688  000059                     _inicio_hora_riego:
   689                           	opt stack 0
   690  000059                     	ds	1
   691                           tblptru	equ	0xFF8
   692                           tblptrh	equ	0xFF7
   693                           tblptrl	equ	0xFF6
   694                           tablat	equ	0xFF5
   695                           postinc0	equ	0xFEE
   696                           wreg	equ	0xFE8
   697                           postdec1	equ	0xFE5
   698                           fsr1l	equ	0xFE1
   699                           
   700                           	psect	bssBANK0
   701  0000A6                     __pbssBANK0:
   702                           	opt stack 0
   703  0000A6                     _RtccAlrmTimeDate:
   704                           	opt stack 0
   705  0000A6                     	ds	8
   706  0000AE                     _RtccTimeDate:
   707                           	opt stack 0
   708  0000AE                     	ds	8
   709  0000B6                     _Rtcc_read_TimeDate:
   710                           	opt stack 0
   711  0000B6                     	ds	8
   712  0000BE                     _RtccTimeVal:
   713                           	opt stack 0
   714  0000BE                     	ds	4
   715  0000C2                     _diasem:
   716                           	opt stack 0
   717  0000C2                     	ds	2
   718  0000C4                     _i:
   719                           	opt stack 0
   720  0000C4                     	ds	2
   721  0000C6                     _segundo:
   722                           	opt stack 0
   723  0000C6                     	ds	2
   724  0000C8                     _CuentamSeg:
   725                           	opt stack 0
   726  0000C8                     	ds	1
   727  0000C9                     _Flag_1:
   728                           	opt stack 0
   729  0000C9                     	ds	1
   730  0000CA                     _Sw_Center:
   731                           	opt stack 0
   732  0000CA                     	ds	1
   733  0000CB                     _Sw_Down:
   734                           	opt stack 0
   735  0000CB                     	ds	1
   736  0000CC                     _Sw_Left:
   737                           	opt stack 0
   738  0000CC                     	ds	1
   739  0000CD                     _Sw_Right:
   740                           	opt stack 0
   741  0000CD                     	ds	1
   742  0000CE                     _Sw_Up:
   743                           	opt stack 0
   744  0000CE                     	ds	1
   745  0000CF                     _lectura:
   746                           	opt stack 0
   747  0000CF                     	ds	1
   748  0000D0                     _buffer1:
   749                           	opt stack 0
   750  0000D0                     	ds	20
   751  0000E4                     _RtccTime:
   752                           	opt stack 0
   753  0000E4                     	ds	4
   754                           tblptru	equ	0xFF8
   755                           tblptrh	equ	0xFF7
   756                           tblptrl	equ	0xFF6
   757                           tablat	equ	0xFF5
   758                           postinc0	equ	0xFEE
   759                           wreg	equ	0xFE8
   760                           postdec1	equ	0xFE5
   761                           fsr1l	equ	0xFE1
   762                           
   763                           	psect	dataBANK0
   764  000060                     __pdataBANK0:
   765                           	opt stack 0
   766  000060                     _posicionesUp:
   767                           	opt stack 0
   768  000060                     	ds	32
   769  000080                     _posicionesLeft:
   770                           	opt stack 0
   771  000080                     	ds	24
   772  000098                     _Grados:
   773                           	opt stack 0
   774  000098                     	ds	3
   775  00009B                     _Temp_prog:
   776                           	opt stack 0
   777  00009B                     	ds	3
   778  00009E                     _dia:
   779                           	opt stack 0
   780  00009E                     	ds	2
   781  0000A0                     _hora:
   782                           	opt stack 0
   783  0000A0                     	ds	2
   784  0000A2                     _mes:
   785                           	opt stack 0
   786  0000A2                     	ds	2
   787  0000A4                     _minuto:
   788                           	opt stack 0
   789  0000A4                     	ds	2
   790                           tblptru	equ	0xFF8
   791                           tblptrh	equ	0xFF7
   792                           tblptrl	equ	0xFF6
   793                           tablat	equ	0xFF5
   794                           postinc0	equ	0xFEE
   795                           wreg	equ	0xFE8
   796                           postdec1	equ	0xFE5
   797                           fsr1l	equ	0xFE1
   798                           
   799                           	psect	cstackCOMRAM
   800  000001                     __pcstackCOMRAM:
   801                           	opt stack 0
   802  000001                     ??_Lcd_Cmd:
   803  000001                     ??_Lcd_Chr_CP:
   804  000001                     ??_lee_temperatura:
   805  000001                     ??_isdigit:
   806  000001                     ?___wmul:
   807                           	opt stack 0
   808  000001                     ?___awdiv:
   809                           	opt stack 0
   810  000001                     ?___lwdiv:
   811                           	opt stack 0
   812  000001                     RtccReadDate@pDt:
   813                           	opt stack 0
   814  000001                     RtccReadTime@pTm:
   815                           	opt stack 0
   816  000001                     RtccWriteDate@pDt:
   817                           	opt stack 0
   818  000001                     RtccWriteTime@pTm:
   819                           	opt stack 0
   820  000001                     ___wmul@multiplier:
   821                           	opt stack 0
   822  000001                     ___awdiv@dividend:
   823                           	opt stack 0
   824  000001                     ___lwdiv@dividend:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x0
   828  000001                     	ds	1
   829  000002                     _isdigit$2159:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x1
   833  000002                     	ds	1
   834  000003                     Lcd_Chr_CP@data:
   835                           	opt stack 0
   836  000003                     Lcd_Cmd@data:
   837                           	opt stack 0
   838  000003                     RtccWriteDate@di:
   839                           	opt stack 0
   840  000003                     RtccWriteTime@di:
   841                           	opt stack 0
   842  000003                     isdigit@c:
   843                           	opt stack 0
   844  000003                     ___wmul@multiplicand:
   845                           	opt stack 0
   846  000003                     ___awdiv@divisor:
   847                           	opt stack 0
   848  000003                     ___lwdiv@divisor:
   849                           	opt stack 0
   850  000003                     RtccReadDate@rTD1:
   851                           	opt stack 0
   852  000003                     RtccReadTime@rTD1:
   853                           	opt stack 0
   854                           
   855                           ; 8 bytes @ 0x2
   856  000003                     	ds	1
   857  000004                     ??_Lcd_Init:
   858                           
   859                           ; 0 bytes @ 0x3
   860  000004                     	ds	1
   861  000005                     Lcd_Init@data:
   862                           	opt stack 0
   863  000005                     RtccWriteDate@wasOn:
   864                           	opt stack 0
   865  000005                     RtccWriteTime@wasOn:
   866                           	opt stack 0
   867  000005                     ___awdiv@counter:
   868                           	opt stack 0
   869  000005                     ___wmul@product:
   870                           	opt stack 0
   871  000005                     ___lwdiv@quotient:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x4
   875  000005                     	ds	1
   876  000006                     RtccWriteDate@wasAlrm:
   877                           	opt stack 0
   878  000006                     RtccWriteTime@wasAlrm:
   879                           	opt stack 0
   880  000006                     ___awdiv@sign:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0x5
   884  000006                     	ds	1
   885  000007                     RtccWriteTime@wasWrEn:
   886                           	opt stack 0
   887  000007                     ___lwdiv@counter:
   888                           	opt stack 0
   889  000007                     RtccWriteDate@tempYear:
   890                           	opt stack 0
   891  000007                     ___awdiv@quotient:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0x6
   895  000007                     	ds	1
   896  000008                     ?___lwmod:
   897                           	opt stack 0
   898  000008                     RtccWriteTime@tempMinSec:
   899                           	opt stack 0
   900  000008                     ___lwmod@dividend:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x7
   904  000008                     	ds	1
   905  000009                     RtccWriteDate@wasWrEn:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x8
   909  000009                     	ds	1
   910  00000A                     RtccWriteDate@tempDayMonth:
   911                           	opt stack 0
   912  00000A                     RtccWriteTime@tempHourWDay:
   913                           	opt stack 0
   914  00000A                     ___lwmod@divisor:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x9
   918  00000A                     	ds	1
   919  00000B                     RtccReadDate@rTD0:
   920                           	opt stack 0
   921  00000B                     RtccReadTime@rTD0:
   922                           	opt stack 0
   923                           
   924                           ; 8 bytes @ 0xA
   925  00000B                     	ds	1
   926  00000C                     ___lwmod@counter:
   927                           	opt stack 0
   928  00000C                     RtccWriteDate@tempHourWDay:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0xB
   932  00000C                     	ds	1
   933  00000D                     ?_sprintf:
   934                           	opt stack 0
   935  00000D                     sprintf@sp:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0xC
   939  00000D                     	ds	1
   940  00000E                     
   941                           ; 0 bytes @ 0xD
   942  00000E                     	ds	1
   943  00000F                     sprintf@f:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0xE
   947  00000F                     	ds	4
   948  000013                     
   949                           ; 0 bytes @ 0x12
   950  000013                     	ds	4
   951  000017                     ??_sprintf:
   952                           
   953                           ; 0 bytes @ 0x16
   954  000017                     	ds	4
   955  00001B                     sprintf@flag:
   956                           	opt stack 0
   957                           
   958                           ; 1 bytes @ 0x1A
   959  00001B                     	ds	1
   960  00001C                     sprintf@val:
   961                           	opt stack 0
   962                           
   963                           ; 2 bytes @ 0x1B
   964  00001C                     	ds	2
   965  00001E                     sprintf@prec:
   966                           	opt stack 0
   967                           
   968                           ; 1 bytes @ 0x1D
   969  00001E                     	ds	1
   970  00001F                     sprintf@ap:
   971                           	opt stack 0
   972                           
   973                           ; 2 bytes @ 0x1E
   974  00001F                     	ds	2
   975  000021                     sprintf@cp:
   976                           	opt stack 0
   977                           
   978                           ; 2 bytes @ 0x20
   979  000021                     	ds	2
   980  000023                     sprintf@len:
   981                           	opt stack 0
   982                           
   983                           ; 2 bytes @ 0x22
   984  000023                     	ds	2
   985  000025                     sprintf@width:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0x24
   989  000025                     	ds	2
   990  000027                     sprintf@c:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x26
   994  000027                     	ds	1
   995  000028                     ?_Convert_diasem:
   996                           	opt stack 0
   997  000028                     Convert_diasem@dia:
   998                           	opt stack 0
   999                           
  1000                           ; 2 bytes @ 0x27
  1001  000028                     	ds	2
  1002  00002A                     ??_Convert_diasem:
  1003                           
  1004                           ; 0 bytes @ 0x29
  1005  00002A                     	ds	2
  1006  00002C                     Convert_diasem@buffer_dia:
  1007                           	opt stack 0
  1008                           
  1009                           ; 20 bytes @ 0x2B
  1010  00002C                     	ds	20
  1011  000040                     Lcd_Out@x:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x3F
  1015  000040                     	ds	1
  1016  000041                     Lcd_Out@buffer:
  1017                           	opt stack 0
  1018                           
  1019                           ; 2 bytes @ 0x40
  1020  000041                     	ds	2
  1021  000043                     Lcd_Out@y:
  1022                           	opt stack 0
  1023                           
  1024                           ; 1 bytes @ 0x42
  1025  000043                     	ds	1
  1026  000044                     Lcd_Out@data:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x43
  1030  000044                     	ds	1
  1031  000045                     ??_V_ProgReloj:
  1032  000045                     ??_V_ProgRiegoIlum:
  1033  000045                     V_Principal@cte:
  1034                           	opt stack 0
  1035                           
  1036                           ; 2 bytes @ 0x44
  1037  000045                     	ds	2
  1038  000047                     V_ProgReloj@diasem_tr:
  1039                           	opt stack 0
  1040  000047                     V_ProgRiegoIlum@i_hora_ilum_tr:
  1041                           	opt stack 0
  1042                           
  1043                           ; 1 bytes @ 0x46
  1044  000047                     	ds	1
  1045  000048                     V_ProgReloj@dia_tr:
  1046                           	opt stack 0
  1047  000048                     V_ProgRiegoIlum@i_min_ilum_tr:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0x47
  1051  000048                     	ds	1
  1052  000049                     V_ProgReloj@mes_tr:
  1053                           	opt stack 0
  1054  000049                     V_ProgRiegoIlum@f_hora_ilum_tr:
  1055                           	opt stack 0
  1056                           
  1057                           ; 1 bytes @ 0x48
  1058  000049                     	ds	1
  1059  00004A                     V_ProgReloj@anio_tr:
  1060                           	opt stack 0
  1061  00004A                     V_ProgRiegoIlum@f_min_ilum_tr:
  1062                           	opt stack 0
  1063                           
  1064                           ; 1 bytes @ 0x49
  1065  00004A                     	ds	1
  1066  00004B                     V_ProgReloj@hora_tr:
  1067                           	opt stack 0
  1068  00004B                     V_ProgRiegoIlum@i_hora_riego_tr:
  1069                           	opt stack 0
  1070                           
  1071                           ; 1 bytes @ 0x4A
  1072  00004B                     	ds	1
  1073  00004C                     V_ProgReloj@minuto_tr:
  1074                           	opt stack 0
  1075  00004C                     V_ProgRiegoIlum@i_min_riego_tr:
  1076                           	opt stack 0
  1077                           
  1078                           ; 1 bytes @ 0x4B
  1079  00004C                     	ds	1
  1080  00004D                     V_ProgRiegoIlum@f_hora_riego_tr:
  1081                           	opt stack 0
  1082  00004D                     V_ProgReloj@posicion:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x4C
  1086  00004D                     	ds	1
  1087  00004E                     V_ProgRiegoIlum@f_min_riego_tr:
  1088                           	opt stack 0
  1089                           
  1090                           ; 1 bytes @ 0x4D
  1091  00004E                     	ds	1
  1092  00004F                     V_ProgRiegoIlum@posicion:
  1093                           	opt stack 0
  1094                           
  1095                           ; 2 bytes @ 0x4E
  1096  00004F                     	ds	2
  1097  000051                     ??_main:
  1098                           
  1099                           ; 0 bytes @ 0x50
  1100  000051                     	ds	1
  1101                           tblptru	equ	0xFF8
  1102                           tblptrh	equ	0xFF7
  1103                           tblptrl	equ	0xFF6
  1104                           tablat	equ	0xFF5
  1105                           postinc0	equ	0xFEE
  1106                           wreg	equ	0xFE8
  1107                           postdec1	equ	0xFE5
  1108                           fsr1l	equ	0xFE1
  1109                           
  1110 ;;
  1111 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1112 ;;
  1113 ;; *************** function _main *****************
  1114 ;; Defined at:
  1115 ;;		line 139 in file "../main.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;		None               void
  1122 ;; Registers used:
  1123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1133 ;;Total ram usage:        1 bytes
  1134 ;; Hardware stack levels required when called:    4
  1135 ;; This function calls:
  1136 ;;		_Lcd_Cmd
  1137 ;;		_Lcd_Init
  1138 ;;		_Lcd_Out
  1139 ;;		_V_Principal
  1140 ;;		_V_ProgReloj
  1141 ;;		_V_ProgRiegoIlum
  1142 ;;		_Write_RTC
  1143 ;;		_sprintf
  1144 ;; This function is called by:
  1145 ;;		Startup code after reset
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text0
  1150  00EB4E                     __ptext0:
  1151                           	opt stack 0
  1152  00EB4E                     _main:
  1153                           	opt stack 27
  1154                           
  1155                           ;main.c: 141: OSCTUNEbits.INTSRC=1;
  1156                           
  1157                           ;incstack = 0
  1158  00EB4E  8E9B               	bsf	3995,7,c	;volatile
  1159                           
  1160                           ;main.c: 142: OSCTUNEbits.PLLEN=0;
  1161  00EB50  9C9B               	bcf	3995,6,c	;volatile
  1162                           
  1163                           ;main.c: 143: OSCCONbits.IRCF0=1;
  1164  00EB52  88D3               	bsf	4051,4,c	;volatile
  1165                           
  1166                           ;main.c: 144: OSCCONbits.IRCF1=1;
  1167  00EB54  8AD3               	bsf	4051,5,c	;volatile
  1168                           
  1169                           ;main.c: 145: OSCCONbits.IRCF2=1;
  1170  00EB56  8CD3               	bsf	4051,6,c	;volatile
  1171                           
  1172                           ;main.c: 146: OSCCONbits.SCS0=0;
  1173  00EB58  90D3               	bcf	4051,0,c	;volatile
  1174                           
  1175                           ;main.c: 147: OSCCONbits.SCS1=0;
  1176  00EB5A  92D3               	bcf	4051,1,c	;volatile
  1177                           
  1178                           ;main.c: 149: RTCCFGbits.RTCEN=1;
  1179  00EB5C  010F               	movlb	15	; () banked
  1180  00EB5E  8F3F               	bsf	63,7,b	;volatile
  1181                           
  1182                           ;main.c: 150: RTCCFGbits.RTCWREN=1;
  1183  00EB60  010F               	movlb	15	; () banked
  1184  00EB62  8B3F               	bsf	63,5,b	;volatile
  1185                           
  1186                           ;main.c: 151: T1CONbits.T1OSCEN=1;
  1187  00EB64  86CD               	bsf	4045,3,c	;volatile
  1188                           
  1189                           ; BSR set to: 15
  1190                           ;main.c: 153: TRISA = 0b11111101;
  1191  00EB66  0EFD               	movlw	253
  1192  00EB68  6E92               	movwf	3986,c	;volatile
  1193                           
  1194                           ;main.c: 154: TRISB = 0;
  1195  00EB6A  0E00               	movlw	0
  1196  00EB6C  6E93               	movwf	3987,c	;volatile
  1197                           
  1198                           ; BSR set to: 15
  1199                           ;main.c: 155: TRISC = 0b11111111;
  1200  00EB6E  6894               	setf	3988,c	;volatile
  1201                           
  1202                           ; BSR set to: 15
  1203                           ;main.c: 156: ANCON0 = 0b11111111;
  1204  00EB70  010F               	movlb	15	; () banked
  1205  00EB72  6948               	setf	72,b	;volatile
  1206                           
  1207                           ;main.c: 157: ANCON1 = 0b11110111;
  1208  00EB74  0EF7               	movlw	247
  1209  00EB76  010F               	movlb	15	; () banked
  1210  00EB78  6F49               	movwf	73,b	;volatile
  1211                           
  1212                           ;main.c: 158: ADCON0 = 0b00101111;
  1213  00EB7A  0E2F               	movlw	47
  1214  00EB7C  6EC2               	movwf	4034,c	;volatile
  1215                           
  1216                           ;main.c: 159: ADCON1 = 0b00111001;
  1217  00EB7E  0E39               	movlw	57
  1218  00EB80  6EC1               	movwf	4033,c	;volatile
  1219                           
  1220                           ; BSR set to: 15
  1221                           ;main.c: 161: Write_RTC();
  1222  00EB82  ECDD  F074         	call	_Write_RTC	;wreg free
  1223                           
  1224                           ;main.c: 162: Lcd_Init();
  1225  00EB86  EC5F  F071         	call	_Lcd_Init	;wreg free
  1226                           
  1227                           ;main.c: 163: Lcd_Cmd(1);
  1228  00EB8A  0E01               	movlw	1
  1229  00EB8C  EC7B  F072         	call	_Lcd_Cmd
  1230                           
  1231                           ;main.c: 164: Lcd_Cmd(12);
  1232  00EB90  0E0C               	movlw	12
  1233  00EB92  EC7B  F072         	call	_Lcd_Cmd
  1234                           
  1235                           ;main.c: 167: _delay((unsigned long)((98)*(8000000/4000.0)));_delay((unsigned long)((98)
      +                          *(8000000/4000.0)));_delay((unsigned long)((98)*(8000000/4000.0)));_delay((unsigned long
      +                          )((98)*(8000000/4000.0)));_delay((unsigned long)((98)*(8000000/4000.0)));_delay((unsigne
  1236  00EB96  0EFF               	movlw	255
  1237  00EB98  6E51               	movwf	??_main& (0+255),c
  1238  00EB9A  0E8A               	movlw	138
  1239  00EB9C                     u3637:
  1240  00EB9C  2EE8               	decfsz	wreg,f,c
  1241  00EB9E  D7FE               	goto	u3637
  1242  00EBA0  2E51               	decfsz	??_main& (0+255),f,c
  1243  00EBA2  D7FC               	goto	u3637
  1244  00EBA4  D000               	nop2	
  1245  00EBA6  0EFF               	movlw	255
  1246  00EBA8  6E51               	movwf	??_main& (0+255),c
  1247  00EBAA  0E8A               	movlw	138
  1248  00EBAC                     u3647:
  1249  00EBAC  2EE8               	decfsz	wreg,f,c
  1250  00EBAE  D7FE               	goto	u3647
  1251  00EBB0  2E51               	decfsz	??_main& (0+255),f,c
  1252  00EBB2  D7FC               	goto	u3647
  1253  00EBB4  D000               	nop2	
  1254  00EBB6  0EFF               	movlw	255
  1255  00EBB8  6E51               	movwf	??_main& (0+255),c
  1256  00EBBA  0E8A               	movlw	138
  1257  00EBBC                     u3657:
  1258  00EBBC  2EE8               	decfsz	wreg,f,c
  1259  00EBBE  D7FE               	goto	u3657
  1260  00EBC0  2E51               	decfsz	??_main& (0+255),f,c
  1261  00EBC2  D7FC               	goto	u3657
  1262  00EBC4  D000               	nop2	
  1263  00EBC6  0EFF               	movlw	255
  1264  00EBC8  6E51               	movwf	??_main& (0+255),c
  1265  00EBCA  0E8A               	movlw	138
  1266  00EBCC                     u3667:
  1267  00EBCC  2EE8               	decfsz	wreg,f,c
  1268  00EBCE  D7FE               	goto	u3667
  1269  00EBD0  2E51               	decfsz	??_main& (0+255),f,c
  1270  00EBD2  D7FC               	goto	u3667
  1271  00EBD4  D000               	nop2	
  1272  00EBD6  0EFF               	movlw	255
  1273  00EBD8  6E51               	movwf	??_main& (0+255),c
  1274  00EBDA  0E8A               	movlw	138
  1275  00EBDC                     u3677:
  1276  00EBDC  2EE8               	decfsz	wreg,f,c
  1277  00EBDE  D7FE               	goto	u3677
  1278  00EBE0  2E51               	decfsz	??_main& (0+255),f,c
  1279  00EBE2  D7FC               	goto	u3677
  1280  00EBE4  D000               	nop2	
  1281  00EBE6  0EFF               	movlw	255
  1282  00EBE8  6E51               	movwf	??_main& (0+255),c
  1283  00EBEA  0E8A               	movlw	138
  1284  00EBEC                     u3687:
  1285  00EBEC  2EE8               	decfsz	wreg,f,c
  1286  00EBEE  D7FE               	goto	u3687
  1287  00EBF0  2E51               	decfsz	??_main& (0+255),f,c
  1288  00EBF2  D7FC               	goto	u3687
  1289  00EBF4  D000               	nop2	
  1290  00EBF6  0EFF               	movlw	255
  1291  00EBF8  6E51               	movwf	??_main& (0+255),c
  1292  00EBFA  0E8A               	movlw	138
  1293  00EBFC                     u3697:
  1294  00EBFC  2EE8               	decfsz	wreg,f,c
  1295  00EBFE  D7FE               	goto	u3697
  1296  00EC00  2E51               	decfsz	??_main& (0+255),f,c
  1297  00EC02  D7FC               	goto	u3697
  1298  00EC04  D000               	nop2	
  1299  00EC06  0EFF               	movlw	255
  1300  00EC08  6E51               	movwf	??_main& (0+255),c
  1301  00EC0A  0E8A               	movlw	138
  1302  00EC0C                     u3707:
  1303  00EC0C  2EE8               	decfsz	wreg,f,c
  1304  00EC0E  D7FE               	goto	u3707
  1305  00EC10  2E51               	decfsz	??_main& (0+255),f,c
  1306  00EC12  D7FC               	goto	u3707
  1307  00EC14  D000               	nop2	
  1308                           
  1309                           ;main.c: 168: Lcd_Cmd(1);
  1310  00EC16  0E01               	movlw	1
  1311  00EC18  EC7B  F072         	call	_Lcd_Cmd
  1312  00EC1C  D000               	goto	l3630
  1313  00EC1E                     l3630:
  1314                           
  1315                           ;main.c: 174: V_Principal();
  1316  00EC1E  EC7A  F070         	call	_V_Principal	;wreg free
  1317                           
  1318                           ;main.c: 175: if(Sw_Left = PORTAbits.RA0 == 0){
  1319  00EC22  B080               	btfsc	3968,0,c	;volatile
  1320  00EC24  D002               	goto	u3480
  1321  00EC26  0E01               	movlw	1
  1322  00EC28  D001               	goto	u3490
  1323  00EC2A                     u3480:
  1324  00EC2A  0E00               	movlw	0
  1325  00EC2C                     u3490:
  1326  00EC2C  0100               	movlb	0	; () banked
  1327  00EC2E  6FCC               	movwf	_Sw_Left& (0+255),b
  1328  00EC30  0100               	movlb	0	; () banked
  1329  00EC32  51CC               	movf	_Sw_Left& (0+255),w,b
  1330  00EC34  B4D8               	btfsc	status,2,c
  1331  00EC36  D003               	goto	l3636
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;main.c: 177: V_ProgReloj();
  1335  00EC38  EC32  F078         	call	_V_ProgReloj	;wreg free
  1336  00EC3C  D000               	goto	l3636
  1337  00EC3E                     l3636:
  1338                           
  1339                           ;main.c: 178: }
  1340                           ;main.c: 180: if(Sw_Down = PORTCbits.RC4 == 0){
  1341  00EC3E  B882               	btfsc	3970,4,c	;volatile
  1342  00EC40  D002               	goto	u3510
  1343  00EC42  0E01               	movlw	1
  1344  00EC44  D001               	goto	u3520
  1345  00EC46                     u3510:
  1346  00EC46  0E00               	movlw	0
  1347  00EC48                     u3520:
  1348  00EC48  0100               	movlb	0	; () banked
  1349  00EC4A  6FCB               	movwf	_Sw_Down& (0+255),b
  1350  00EC4C  0100               	movlb	0	; () banked
  1351  00EC4E  51CB               	movf	_Sw_Down& (0+255),w,b
  1352  00EC50  B4D8               	btfsc	status,2,c
  1353  00EC52  D017               	goto	l3642
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;main.c: 181: sprintf(buffer1,"%03u",lectura);
  1357  00EC54  0ED0               	movlw	low _buffer1
  1358  00EC56  6E0D               	movwf	sprintf@sp,c
  1359  00EC58  0E00               	movlw	high _buffer1
  1360  00EC5A  6E0E               	movwf	sprintf@sp+1,c
  1361  00EC5C  0EEE               	movlw	low STR_1
  1362  00EC5E  6E0F               	movwf	sprintf@f,c
  1363  00EC60  0EFF               	movlw	high STR_1
  1364  00EC62  6E10               	movwf	sprintf@f+1,c
  1365  00EC64  C0CF  F011         	movff	_lectura,?_sprintf+4
  1366  00EC68  6A12               	clrf	?_sprintf+5,c
  1367  00EC6A  EC95  F076         	call	_sprintf	;wreg free
  1368                           
  1369                           ;main.c: 182: Lcd_Out(4,0,buffer1);
  1370  00EC6E  0E00               	movlw	0
  1371  00EC70  6E40               	movwf	Lcd_Out@x,c
  1372  00EC72  0ED0               	movlw	low _buffer1
  1373  00EC74  6E41               	movwf	Lcd_Out@buffer,c
  1374  00EC76  0E00               	movlw	high _buffer1
  1375  00EC78  6E42               	movwf	Lcd_Out@buffer+1,c
  1376  00EC7A  0E04               	movlw	4
  1377  00EC7C  ECE5  F06F         	call	_Lcd_Out
  1378  00EC80  D000               	goto	l3642
  1379  00EC82                     l3642:
  1380                           
  1381                           ;main.c: 183: }
  1382                           ;main.c: 185: if(Sw_Right = PORTAbits.RA2 == 0){
  1383  00EC82  B480               	btfsc	3968,2,c	;volatile
  1384  00EC84  D002               	goto	u3540
  1385  00EC86  0E01               	movlw	1
  1386  00EC88  D001               	goto	u3550
  1387  00EC8A                     u3540:
  1388  00EC8A  0E00               	movlw	0
  1389  00EC8C                     u3550:
  1390  00EC8C  0100               	movlb	0	; () banked
  1391  00EC8E  6FCD               	movwf	_Sw_Right& (0+255),b
  1392  00EC90  0100               	movlb	0	; () banked
  1393  00EC92  51CD               	movf	_Sw_Right& (0+255),w,b
  1394  00EC94  B4D8               	btfsc	status,2,c
  1395  00EC96  D00A               	goto	l3646
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;main.c: 186: Lcd_Out(3, 0, "RIGHT             ");
  1399  00EC98  0E00               	movlw	0
  1400  00EC9A  6E40               	movwf	Lcd_Out@x,c
  1401  00EC9C  0E93               	movlw	low STR_2
  1402  00EC9E  6E41               	movwf	Lcd_Out@buffer,c
  1403  00ECA0  0EFF               	movlw	high STR_2
  1404  00ECA2  6E42               	movwf	Lcd_Out@buffer+1,c
  1405  00ECA4  0E03               	movlw	3
  1406  00ECA6  ECE5  F06F         	call	_Lcd_Out
  1407  00ECAA  D000               	goto	l3646
  1408  00ECAC                     l3646:
  1409                           
  1410                           ;main.c: 187: }
  1411                           ;main.c: 189: if(Sw_Up = PORTAbits.RA3 == 0){
  1412  00ECAC  B680               	btfsc	3968,3,c	;volatile
  1413  00ECAE  D002               	goto	u3570
  1414  00ECB0  0E01               	movlw	1
  1415  00ECB2  D001               	goto	u3580
  1416  00ECB4                     u3570:
  1417  00ECB4  0E00               	movlw	0
  1418  00ECB6                     u3580:
  1419  00ECB6  0100               	movlb	0	; () banked
  1420  00ECB8  6FCE               	movwf	_Sw_Up& (0+255),b
  1421  00ECBA  0100               	movlb	0	; () banked
  1422  00ECBC  51CE               	movf	_Sw_Up& (0+255),w,b
  1423  00ECBE  B4D8               	btfsc	status,2,c
  1424  00ECC0  D003               	goto	l3650
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;main.c: 190: V_ProgRiegoIlum();
  1428  00ECC2  EC2D  F07B         	call	_V_ProgRiegoIlum	;wreg free
  1429  00ECC6  D000               	goto	l3650
  1430  00ECC8                     l3650:
  1431                           
  1432                           ;main.c: 191: }
  1433                           ;main.c: 193: if(Sw_Center = PORTAbits.RA5 == 0){
  1434  00ECC8  BA80               	btfsc	3968,5,c	;volatile
  1435  00ECCA  D002               	goto	u3600
  1436  00ECCC  0E01               	movlw	1
  1437  00ECCE  D001               	goto	u3610
  1438  00ECD0                     u3600:
  1439  00ECD0  0E00               	movlw	0
  1440  00ECD2                     u3610:
  1441  00ECD2  0100               	movlb	0	; () banked
  1442  00ECD4  6FCA               	movwf	_Sw_Center& (0+255),b
  1443  00ECD6  0100               	movlb	0	; () banked
  1444  00ECD8  51CA               	movf	_Sw_Center& (0+255),w,b
  1445  00ECDA  B4D8               	btfsc	status,2,c
  1446  00ECDC  D00D               	goto	l3656
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;main.c: 194: Lcd_Cmd(1);
  1450  00ECDE  0E01               	movlw	1
  1451  00ECE0  EC7B  F072         	call	_Lcd_Cmd
  1452                           
  1453                           ;main.c: 195: Lcd_Out(2, 0, "CENTER             ");
  1454  00ECE4  0E00               	movlw	0
  1455  00ECE6  6E40               	movwf	Lcd_Out@x,c
  1456  00ECE8  0E7F               	movlw	low STR_3
  1457  00ECEA  6E41               	movwf	Lcd_Out@buffer,c
  1458  00ECEC  0EFF               	movlw	high STR_3
  1459  00ECEE  6E42               	movwf	Lcd_Out@buffer+1,c
  1460  00ECF0  0E02               	movlw	2
  1461  00ECF2  ECE5  F06F         	call	_Lcd_Out
  1462  00ECF6  D000               	goto	l3656
  1463  00ECF8                     l3656:
  1464                           
  1465                           ;main.c: 196: }
  1466                           ;main.c: 198: LATBbits.LATB7 = 1;
  1467  00ECF8  8E8A               	bsf	3978,7,c	;volatile
  1468                           
  1469                           ;main.c: 199: LATBbits.LATB6 = 1;
  1470  00ECFA  8C8A               	bsf	3978,6,c	;volatile
  1471                           
  1472                           ;main.c: 200: LATAbits.LA1 = 1;
  1473  00ECFC  8289               	bsf	3977,1,c	;volatile
  1474                           
  1475                           ;main.c: 201: _delay((unsigned long)((10)*(8000000/4000.0)));
  1476  00ECFE  0E1A               	movlw	26
  1477  00ED00  6E51               	movwf	??_main& (0+255),c
  1478  00ED02  0EF8               	movlw	248
  1479  00ED04                     u3717:
  1480  00ED04  2EE8               	decfsz	wreg,f,c
  1481  00ED06  D7FE               	goto	u3717
  1482  00ED08  2E51               	decfsz	??_main& (0+255),f,c
  1483  00ED0A  D7FC               	goto	u3717
  1484  00ED0C  D000               	nop2	
  1485                           
  1486                           ;main.c: 202: LATBbits.LATB7 = 0;
  1487  00ED0E  9E8A               	bcf	3978,7,c	;volatile
  1488                           
  1489                           ;main.c: 203: LATBbits.LATB6 = 0;
  1490  00ED10  9C8A               	bcf	3978,6,c	;volatile
  1491                           
  1492                           ;main.c: 204: LATAbits.LA1 = 0;
  1493  00ED12  9289               	bcf	3977,1,c	;volatile
  1494                           
  1495                           ;main.c: 205: _delay((unsigned long)((10)*(8000000/4000.0)));
  1496  00ED14  0E1A               	movlw	26
  1497  00ED16  6E51               	movwf	??_main& (0+255),c
  1498  00ED18  0EF8               	movlw	248
  1499  00ED1A                     u3727:
  1500  00ED1A  2EE8               	decfsz	wreg,f,c
  1501  00ED1C  D7FE               	goto	u3727
  1502  00ED1E  2E51               	decfsz	??_main& (0+255),f,c
  1503  00ED20  D7FC               	goto	u3727
  1504  00ED22  D000               	nop2	
  1505  00ED24  D77C               	goto	l3630
  1506  00ED26  EF00  F000         	goto	start
  1507  00ED2A                     __end_of_main:
  1508                           	opt stack 0
  1509                           tblptru	equ	0xFF8
  1510                           tblptrh	equ	0xFF7
  1511                           tblptrl	equ	0xFF6
  1512                           tablat	equ	0xFF5
  1513                           postinc0	equ	0xFEE
  1514                           wreg	equ	0xFE8
  1515                           postdec1	equ	0xFE5
  1516                           fsr1l	equ	0xFE1
  1517                           status	equ	0xFD8
  1518                           
  1519 ;; *************** function _V_ProgRiegoIlum *****************
  1520 ;; Defined at:
  1521 ;;		line 350 in file "../main.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  posicion        2   78[COMRAM] int 
  1526 ;;  f_min_riego_    1   77[COMRAM] unsigned char 
  1527 ;;  f_hora_riego    1   76[COMRAM] unsigned char 
  1528 ;;  i_min_riego_    1   75[COMRAM] unsigned char 
  1529 ;;  i_hora_riego    1   74[COMRAM] unsigned char 
  1530 ;;  f_min_ilum_t    1   73[COMRAM] unsigned char 
  1531 ;;  f_hora_ilum_    1   72[COMRAM] unsigned char 
  1532 ;;  i_min_ilum_t    1   71[COMRAM] unsigned char 
  1533 ;;  i_hora_ilum_    1   70[COMRAM] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;		None               void
  1536 ;; Registers used:
  1537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1544 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1546 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;Total ram usage:       12 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    3
  1550 ;; This function calls:
  1551 ;;		_Lcd_Cmd
  1552 ;;		_Lcd_Out
  1553 ;;		_Write_RTC
  1554 ;;		_sprintf
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text1
  1561  00F65A                     __ptext1:
  1562                           	opt stack 0
  1563  00F65A                     _V_ProgRiegoIlum:
  1564                           	opt stack 27
  1565                           
  1566                           ;main.c: 352: Lcd_Out(1, 0, "Riego");
  1567                           
  1568                           ;incstack = 0
  1569  00F65A  0E00               	movlw	0
  1570  00F65C  6E40               	movwf	Lcd_Out@x,c
  1571  00F65E  0EE8               	movlw	low STR_33
  1572  00F660  6E41               	movwf	Lcd_Out@buffer,c
  1573  00F662  0EFF               	movlw	high STR_33
  1574  00F664  6E42               	movwf	Lcd_Out@buffer+1,c
  1575  00F666  0E01               	movlw	1
  1576  00F668  ECE5  F06F         	call	_Lcd_Out
  1577                           
  1578                           ;main.c: 353: sprintf(buffer1,"Inic %02u:%02u",inicio_hora_riego,inicio_min_riego);
  1579  00F66C  0ED0               	movlw	low _buffer1
  1580  00F66E  6E0D               	movwf	sprintf@sp,c
  1581  00F670  0E00               	movlw	high _buffer1
  1582  00F672  6E0E               	movwf	sprintf@sp+1,c
  1583  00F674  0EB8               	movlw	low STR_34
  1584  00F676  6E0F               	movwf	sprintf@f,c
  1585  00F678  0EFF               	movlw	high STR_34
  1586  00F67A  6E10               	movwf	sprintf@f+1,c
  1587  00F67C  C059  F011         	movff	_inicio_hora_riego,?_sprintf+4
  1588  00F680  6A12               	clrf	?_sprintf+5,c
  1589  00F682  C05B  F013         	movff	_inicio_min_riego,?_sprintf+6
  1590  00F686  6A14               	clrf	?_sprintf+7,c
  1591  00F688  EC95  F076         	call	_sprintf	;wreg free
  1592                           
  1593                           ;main.c: 354: Lcd_Out(2,0,buffer1);
  1594  00F68C  0E00               	movlw	0
  1595  00F68E  6E40               	movwf	Lcd_Out@x,c
  1596  00F690  0ED0               	movlw	low _buffer1
  1597  00F692  6E41               	movwf	Lcd_Out@buffer,c
  1598  00F694  0E00               	movlw	high _buffer1
  1599  00F696  6E42               	movwf	Lcd_Out@buffer+1,c
  1600  00F698  0E02               	movlw	2
  1601  00F69A  ECE5  F06F         	call	_Lcd_Out
  1602                           
  1603                           ;main.c: 355: sprintf(buffer1,"Fin %02u:%02u",fin_hora_riego,fin_min_riego);
  1604  00F69E  0ED0               	movlw	low _buffer1
  1605  00F6A0  6E0D               	movwf	sprintf@sp,c
  1606  00F6A2  0E00               	movlw	high _buffer1
  1607  00F6A4  6E0E               	movwf	sprintf@sp+1,c
  1608  00F6A6  0EC7               	movlw	low STR_35
  1609  00F6A8  6E0F               	movwf	sprintf@f,c
  1610  00F6AA  0EFF               	movlw	high STR_35
  1611  00F6AC  6E10               	movwf	sprintf@f+1,c
  1612  00F6AE  C055  F011         	movff	_fin_hora_riego,?_sprintf+4
  1613  00F6B2  6A12               	clrf	?_sprintf+5,c
  1614  00F6B4  C057  F013         	movff	_fin_min_riego,?_sprintf+6
  1615  00F6B8  6A14               	clrf	?_sprintf+7,c
  1616  00F6BA  EC95  F076         	call	_sprintf	;wreg free
  1617                           
  1618                           ;main.c: 356: Lcd_Out(2,11,buffer1);
  1619  00F6BE  0E0B               	movlw	11
  1620  00F6C0  6E40               	movwf	Lcd_Out@x,c
  1621  00F6C2  0ED0               	movlw	low _buffer1
  1622  00F6C4  6E41               	movwf	Lcd_Out@buffer,c
  1623  00F6C6  0E00               	movlw	high _buffer1
  1624  00F6C8  6E42               	movwf	Lcd_Out@buffer+1,c
  1625  00F6CA  0E02               	movlw	2
  1626  00F6CC  ECE5  F06F         	call	_Lcd_Out
  1627                           
  1628                           ;main.c: 357: Lcd_Out(3, 0, "Iluminacion");
  1629  00F6D0  0E00               	movlw	0
  1630  00F6D2  6E40               	movwf	Lcd_Out@x,c
  1631  00F6D4  0ED5               	movlw	low STR_36
  1632  00F6D6  6E41               	movwf	Lcd_Out@buffer,c
  1633  00F6D8  0EFF               	movlw	high STR_36
  1634  00F6DA  6E42               	movwf	Lcd_Out@buffer+1,c
  1635  00F6DC  0E03               	movlw	3
  1636  00F6DE  ECE5  F06F         	call	_Lcd_Out
  1637                           
  1638                           ;main.c: 358: sprintf(buffer1,"Inic %02u:%02u",inicio_hora_ilum,inicio_min_ilum);
  1639  00F6E2  0ED0               	movlw	low _buffer1
  1640  00F6E4  6E0D               	movwf	sprintf@sp,c
  1641  00F6E6  0E00               	movlw	high _buffer1
  1642  00F6E8  6E0E               	movwf	sprintf@sp+1,c
  1643  00F6EA  0EB8               	movlw	low STR_34
  1644  00F6EC  6E0F               	movwf	sprintf@f,c
  1645  00F6EE  0EFF               	movlw	high STR_34
  1646  00F6F0  6E10               	movwf	sprintf@f+1,c
  1647  00F6F2  C058  F011         	movff	_inicio_hora_ilum,?_sprintf+4
  1648  00F6F6  6A12               	clrf	?_sprintf+5,c
  1649  00F6F8  C05A  F013         	movff	_inicio_min_ilum,?_sprintf+6
  1650  00F6FC  6A14               	clrf	?_sprintf+7,c
  1651  00F6FE  EC95  F076         	call	_sprintf	;wreg free
  1652                           
  1653                           ;main.c: 359: Lcd_Out(4,0,buffer1);
  1654  00F702  0E00               	movlw	0
  1655  00F704  6E40               	movwf	Lcd_Out@x,c
  1656  00F706  0ED0               	movlw	low _buffer1
  1657  00F708  6E41               	movwf	Lcd_Out@buffer,c
  1658  00F70A  0E00               	movlw	high _buffer1
  1659  00F70C  6E42               	movwf	Lcd_Out@buffer+1,c
  1660  00F70E  0E04               	movlw	4
  1661  00F710  ECE5  F06F         	call	_Lcd_Out
  1662                           
  1663                           ;main.c: 360: sprintf(buffer1,"Fin %02u:%02u",fin_hora_ilum,fin_min_ilum);
  1664  00F714  0ED0               	movlw	low _buffer1
  1665  00F716  6E0D               	movwf	sprintf@sp,c
  1666  00F718  0E00               	movlw	high _buffer1
  1667  00F71A  6E0E               	movwf	sprintf@sp+1,c
  1668  00F71C  0EC7               	movlw	low STR_35
  1669  00F71E  6E0F               	movwf	sprintf@f,c
  1670  00F720  0EFF               	movlw	high STR_35
  1671  00F722  6E10               	movwf	sprintf@f+1,c
  1672  00F724  C054  F011         	movff	_fin_hora_ilum,?_sprintf+4
  1673  00F728  6A12               	clrf	?_sprintf+5,c
  1674  00F72A  C056  F013         	movff	_fin_min_ilum,?_sprintf+6
  1675  00F72E  6A14               	clrf	?_sprintf+7,c
  1676  00F730  EC95  F076         	call	_sprintf	;wreg free
  1677                           
  1678                           ;main.c: 361: Lcd_Out(4,11,buffer1);
  1679  00F734  0E0B               	movlw	11
  1680  00F736  6E40               	movwf	Lcd_Out@x,c
  1681  00F738  0ED0               	movlw	low _buffer1
  1682  00F73A  6E41               	movwf	Lcd_Out@buffer,c
  1683  00F73C  0E00               	movlw	high _buffer1
  1684  00F73E  6E42               	movwf	Lcd_Out@buffer+1,c
  1685  00F740  0E04               	movlw	4
  1686  00F742  ECE5  F06F         	call	_Lcd_Out
  1687                           
  1688                           ;main.c: 363: char i_hora_ilum_tr = inicio_hora_ilum;
  1689  00F746  C058  F047         	movff	_inicio_hora_ilum,V_ProgRiegoIlum@i_hora_ilum_tr
  1690                           
  1691                           ;main.c: 364: char i_min_ilum_tr = inicio_min_ilum;
  1692  00F74A  C05A  F048         	movff	_inicio_min_ilum,V_ProgRiegoIlum@i_min_ilum_tr
  1693                           
  1694                           ;main.c: 365: char f_hora_ilum_tr = fin_hora_ilum;
  1695  00F74E  C054  F049         	movff	_fin_hora_ilum,V_ProgRiegoIlum@f_hora_ilum_tr
  1696                           
  1697                           ;main.c: 366: char f_min_ilum_tr = fin_min_ilum;
  1698  00F752  C056  F04A         	movff	_fin_min_ilum,V_ProgRiegoIlum@f_min_ilum_tr
  1699                           
  1700                           ;main.c: 367: char i_hora_riego_tr = inicio_hora_riego;
  1701  00F756  C059  F04B         	movff	_inicio_hora_riego,V_ProgRiegoIlum@i_hora_riego_tr
  1702                           
  1703                           ;main.c: 368: char i_min_riego_tr = inicio_min_riego;
  1704  00F75A  C05B  F04C         	movff	_inicio_min_riego,V_ProgRiegoIlum@i_min_riego_tr
  1705                           
  1706                           ;main.c: 369: char f_hora_riego_tr = fin_hora_riego;
  1707  00F75E  C055  F04D         	movff	_fin_hora_riego,V_ProgRiegoIlum@f_hora_riego_tr
  1708                           
  1709                           ;main.c: 370: char f_min_riego_tr = fin_min_riego;
  1710  00F762  C057  F04E         	movff	_fin_min_riego,V_ProgRiegoIlum@f_min_riego_tr
  1711                           
  1712                           ;main.c: 371: int posicion = 0;
  1713  00F766  0E00               	movlw	0
  1714  00F768  6E50               	movwf	V_ProgRiegoIlum@posicion+1,c
  1715  00F76A  0E00               	movlw	0
  1716  00F76C  6E4F               	movwf	V_ProgRiegoIlum@posicion,c
  1717                           
  1718                           ;main.c: 372: Lcd_Cmd(14);
  1719  00F76E  0E0E               	movlw	14
  1720  00F770  EC7B  F072         	call	_Lcd_Cmd
  1721                           
  1722                           ;main.c: 373: Lcd_Out(2, 5, "" );
  1723  00F774  0E05               	movlw	5
  1724  00F776  6E40               	movwf	Lcd_Out@x,c
  1725  00F778  0EEB               	movlw	low (STR_4+20)
  1726  00F77A  6E41               	movwf	Lcd_Out@buffer,c
  1727  00F77C  0EFE               	movlw	high (STR_4+20)
  1728  00F77E  6E42               	movwf	Lcd_Out@buffer+1,c
  1729  00F780  0E02               	movlw	2
  1730  00F782  ECE5  F06F         	call	_Lcd_Out
  1731                           
  1732                           ;main.c: 375: for(i=0 ;i<30;i++){
  1733  00F786  0E00               	movlw	0
  1734  00F788  0100               	movlb	0	; () banked
  1735  00F78A  6FC5               	movwf	(_i+1)& (0+255),b
  1736  00F78C  0E00               	movlw	0
  1737  00F78E  6FC4               	movwf	_i& (0+255),b
  1738                           
  1739                           ; BSR set to: 0
  1740  00F790  0100               	movlb	0	; () banked
  1741  00F792  BFC5               	btfsc	(_i+1)& (0+255),7,b
  1742  00F794  D00A               	goto	l3340
  1743  00F796  0100               	movlb	0	; () banked
  1744  00F798  51C5               	movf	(_i+1)& (0+255),w,b
  1745  00F79A  E106               	bnz	u2960
  1746  00F79C  0E1E               	movlw	30
  1747  00F79E  0100               	movlb	0	; () banked
  1748  00F7A0  5DC4               	subwf	_i& (0+255),w,b
  1749  00F7A2  B0D8               	btfsc	status,0,c
  1750  00F7A4  D373               	goto	l3572
  1751  00F7A6  D001               	goto	l3340
  1752  00F7A8                     u2960:
  1753                           
  1754                           ; BSR set to: 0
  1755  00F7A8  D371               	goto	l3572
  1756  00F7AA                     l3340:
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;main.c: 376: _delay((unsigned long)((90)*(8000000/4000.0)));
  1760  00F7AA  0EEA               	movlw	234
  1761  00F7AC  6E45               	movwf	??_V_ProgRiegoIlum& (0+255),c
  1762  00F7AE  0EC3               	movlw	195
  1763  00F7B0                     u3737:
  1764  00F7B0  2EE8               	decfsz	wreg,f,c
  1765  00F7B2  D7FE               	goto	u3737
  1766  00F7B4  2E45               	decfsz	??_V_ProgRiegoIlum& (0+255),f,c
  1767  00F7B6  D7FC               	goto	u3737
  1768  00F7B8  F000               	nop	
  1769                           
  1770                           ;main.c: 378: if(Sw_Up = PORTAbits.RA3 == 0){
  1771  00F7BA  B680               	btfsc	3968,3,c	;volatile
  1772  00F7BC  D002               	goto	u2970
  1773  00F7BE  0E01               	movlw	1
  1774  00F7C0  D001               	goto	u2980
  1775  00F7C2                     u2970:
  1776  00F7C2  0E00               	movlw	0
  1777  00F7C4                     u2980:
  1778  00F7C4  0100               	movlb	0	; () banked
  1779  00F7C6  6FCE               	movwf	_Sw_Up& (0+255),b
  1780  00F7C8  0100               	movlb	0	; () banked
  1781  00F7CA  51CE               	movf	_Sw_Up& (0+255),w,b
  1782  00F7CC  B4D8               	btfsc	status,2,c
  1783  00F7CE  D154               	goto	l3442
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;main.c: 379: i=0;
  1787  00F7D0  0E00               	movlw	0
  1788  00F7D2  0100               	movlb	0	; () banked
  1789  00F7D4  6FC5               	movwf	(_i+1)& (0+255),b
  1790  00F7D6  0E00               	movlw	0
  1791  00F7D8  6FC4               	movwf	_i& (0+255),b
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;main.c: 380: if(posicion == 0){
  1795  00F7DA  504F               	movf	V_ProgRiegoIlum@posicion,w,c
  1796  00F7DC  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  1797  00F7DE  A4D8               	btfss	status,2,c
  1798  00F7E0  D025               	goto	l3358
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;main.c: 381: if(i_hora_riego_tr<23){i_hora_riego_tr++;}
  1802  00F7E2  0E17               	movlw	23
  1803  00F7E4  604B               	cpfslt	V_ProgRiegoIlum@i_hora_riego_tr,c
  1804  00F7E6  D002               	goto	l3352
  1805                           
  1806                           ; BSR set to: 0
  1807  00F7E8  2A4B               	incf	V_ProgRiegoIlum@i_hora_riego_tr,f,c
  1808  00F7EA  D000               	goto	l3352
  1809  00F7EC                     l3352:
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;main.c: 382: sprintf(buffer1,"%02u",i_hora_riego_tr);
  1813  00F7EC  0ED0               	movlw	low _buffer1
  1814  00F7EE  6E0D               	movwf	sprintf@sp,c
  1815  00F7F0  0E00               	movlw	high _buffer1
  1816  00F7F2  6E0E               	movwf	sprintf@sp+1,c
  1817  00F7F4  0EC2               	movlw	low (STR_34+10)
  1818  00F7F6  6E0F               	movwf	sprintf@f,c
  1819  00F7F8  0EFF               	movlw	high (STR_34+10)
  1820  00F7FA  6E10               	movwf	sprintf@f+1,c
  1821  00F7FC  C04B  F011         	movff	V_ProgRiegoIlum@i_hora_riego_tr,?_sprintf+4
  1822  00F800  6A12               	clrf	?_sprintf+5,c
  1823  00F802  EC95  F076         	call	_sprintf	;wreg free
  1824                           
  1825                           ;main.c: 383: Lcd_Out(2, 5, buffer1);
  1826  00F806  0E05               	movlw	5
  1827  00F808  6E40               	movwf	Lcd_Out@x,c
  1828  00F80A  0ED0               	movlw	low _buffer1
  1829  00F80C  6E41               	movwf	Lcd_Out@buffer,c
  1830  00F80E  0E00               	movlw	high _buffer1
  1831  00F810  6E42               	movwf	Lcd_Out@buffer+1,c
  1832  00F812  0E02               	movlw	2
  1833  00F814  ECE5  F06F         	call	_Lcd_Out
  1834                           
  1835                           ;main.c: 384: Lcd_Out(2, 5, "" );
  1836  00F818  0E05               	movlw	5
  1837  00F81A  6E40               	movwf	Lcd_Out@x,c
  1838  00F81C  0EEB               	movlw	low (STR_4+20)
  1839  00F81E  6E41               	movwf	Lcd_Out@buffer,c
  1840  00F820  0EFE               	movlw	high (STR_4+20)
  1841  00F822  6E42               	movwf	Lcd_Out@buffer+1,c
  1842  00F824  0E02               	movlw	2
  1843  00F826  ECE5  F06F         	call	_Lcd_Out
  1844                           
  1845                           ;main.c: 385: }else if(posicion == 2){
  1846  00F82A  D126               	goto	l3442
  1847  00F82C                     l3358:
  1848  00F82C  0E02               	movlw	2
  1849  00F82E  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  1850  00F830  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  1851  00F832  A4D8               	btfss	status,2,c
  1852  00F834  D025               	goto	l3370
  1853                           
  1854                           ;main.c: 386: if(i_min_riego_tr<59){i_min_riego_tr++;}
  1855  00F836  0E3B               	movlw	59
  1856  00F838  604C               	cpfslt	V_ProgRiegoIlum@i_min_riego_tr,c
  1857  00F83A  D002               	goto	l3364
  1858  00F83C  2A4C               	incf	V_ProgRiegoIlum@i_min_riego_tr,f,c
  1859  00F83E  D000               	goto	l3364
  1860  00F840                     l3364:
  1861                           
  1862                           ;main.c: 387: sprintf(buffer1,"%02u",i_min_riego_tr);
  1863  00F840  0ED0               	movlw	low _buffer1
  1864  00F842  6E0D               	movwf	sprintf@sp,c
  1865  00F844  0E00               	movlw	high _buffer1
  1866  00F846  6E0E               	movwf	sprintf@sp+1,c
  1867  00F848  0EC2               	movlw	low (STR_34+10)
  1868  00F84A  6E0F               	movwf	sprintf@f,c
  1869  00F84C  0EFF               	movlw	high (STR_34+10)
  1870  00F84E  6E10               	movwf	sprintf@f+1,c
  1871  00F850  C04C  F011         	movff	V_ProgRiegoIlum@i_min_riego_tr,?_sprintf+4
  1872  00F854  6A12               	clrf	?_sprintf+5,c
  1873  00F856  EC95  F076         	call	_sprintf	;wreg free
  1874                           
  1875                           ;main.c: 388: Lcd_Out(2, 8, buffer1);
  1876  00F85A  0E08               	movlw	8
  1877  00F85C  6E40               	movwf	Lcd_Out@x,c
  1878  00F85E  0ED0               	movlw	low _buffer1
  1879  00F860  6E41               	movwf	Lcd_Out@buffer,c
  1880  00F862  0E00               	movlw	high _buffer1
  1881  00F864  6E42               	movwf	Lcd_Out@buffer+1,c
  1882  00F866  0E02               	movlw	2
  1883  00F868  ECE5  F06F         	call	_Lcd_Out
  1884                           
  1885                           ;main.c: 389: Lcd_Out(2, 8, "" );
  1886  00F86C  0E08               	movlw	8
  1887  00F86E  6E40               	movwf	Lcd_Out@x,c
  1888  00F870  0EEB               	movlw	low (STR_4+20)
  1889  00F872  6E41               	movwf	Lcd_Out@buffer,c
  1890  00F874  0EFE               	movlw	high (STR_4+20)
  1891  00F876  6E42               	movwf	Lcd_Out@buffer+1,c
  1892  00F878  0E02               	movlw	2
  1893  00F87A  ECE5  F06F         	call	_Lcd_Out
  1894                           
  1895                           ;main.c: 390: }else if(posicion == 4){
  1896  00F87E  D0FC               	goto	l3442
  1897  00F880                     l3370:
  1898  00F880  0E04               	movlw	4
  1899  00F882  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  1900  00F884  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  1901  00F886  A4D8               	btfss	status,2,c
  1902  00F888  D025               	goto	l3382
  1903                           
  1904                           ;main.c: 391: if(f_hora_riego_tr<23){f_hora_riego_tr++;}
  1905  00F88A  0E17               	movlw	23
  1906  00F88C  604D               	cpfslt	V_ProgRiegoIlum@f_hora_riego_tr,c
  1907  00F88E  D002               	goto	l3376
  1908  00F890  2A4D               	incf	V_ProgRiegoIlum@f_hora_riego_tr,f,c
  1909  00F892  D000               	goto	l3376
  1910  00F894                     l3376:
  1911                           
  1912                           ;main.c: 392: sprintf(buffer1,"%02u",f_hora_riego_tr);
  1913  00F894  0ED0               	movlw	low _buffer1
  1914  00F896  6E0D               	movwf	sprintf@sp,c
  1915  00F898  0E00               	movlw	high _buffer1
  1916  00F89A  6E0E               	movwf	sprintf@sp+1,c
  1917  00F89C  0EC2               	movlw	low (STR_34+10)
  1918  00F89E  6E0F               	movwf	sprintf@f,c
  1919  00F8A0  0EFF               	movlw	high (STR_34+10)
  1920  00F8A2  6E10               	movwf	sprintf@f+1,c
  1921  00F8A4  C04D  F011         	movff	V_ProgRiegoIlum@f_hora_riego_tr,?_sprintf+4
  1922  00F8A8  6A12               	clrf	?_sprintf+5,c
  1923  00F8AA  EC95  F076         	call	_sprintf	;wreg free
  1924                           
  1925                           ;main.c: 393: Lcd_Out(2, 15, buffer1);
  1926  00F8AE  0E0F               	movlw	15
  1927  00F8B0  6E40               	movwf	Lcd_Out@x,c
  1928  00F8B2  0ED0               	movlw	low _buffer1
  1929  00F8B4  6E41               	movwf	Lcd_Out@buffer,c
  1930  00F8B6  0E00               	movlw	high _buffer1
  1931  00F8B8  6E42               	movwf	Lcd_Out@buffer+1,c
  1932  00F8BA  0E02               	movlw	2
  1933  00F8BC  ECE5  F06F         	call	_Lcd_Out
  1934                           
  1935                           ;main.c: 394: Lcd_Out(2, 15, "" );
  1936  00F8C0  0E0F               	movlw	15
  1937  00F8C2  6E40               	movwf	Lcd_Out@x,c
  1938  00F8C4  0EEB               	movlw	low (STR_4+20)
  1939  00F8C6  6E41               	movwf	Lcd_Out@buffer,c
  1940  00F8C8  0EFE               	movlw	high (STR_4+20)
  1941  00F8CA  6E42               	movwf	Lcd_Out@buffer+1,c
  1942  00F8CC  0E02               	movlw	2
  1943  00F8CE  ECE5  F06F         	call	_Lcd_Out
  1944                           
  1945                           ;main.c: 395: }else if(posicion == 6){
  1946  00F8D2  D0D2               	goto	l3442
  1947  00F8D4                     l3382:
  1948  00F8D4  0E06               	movlw	6
  1949  00F8D6  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  1950  00F8D8  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  1951  00F8DA  A4D8               	btfss	status,2,c
  1952  00F8DC  D025               	goto	l3394
  1953                           
  1954                           ;main.c: 396: if(f_min_riego_tr<59){f_min_riego_tr++;}
  1955  00F8DE  0E3B               	movlw	59
  1956  00F8E0  604E               	cpfslt	V_ProgRiegoIlum@f_min_riego_tr,c
  1957  00F8E2  D002               	goto	l3388
  1958  00F8E4  2A4E               	incf	V_ProgRiegoIlum@f_min_riego_tr,f,c
  1959  00F8E6  D000               	goto	l3388
  1960  00F8E8                     l3388:
  1961                           
  1962                           ;main.c: 397: sprintf(buffer1,"%02u",f_min_riego_tr);
  1963  00F8E8  0ED0               	movlw	low _buffer1
  1964  00F8EA  6E0D               	movwf	sprintf@sp,c
  1965  00F8EC  0E00               	movlw	high _buffer1
  1966  00F8EE  6E0E               	movwf	sprintf@sp+1,c
  1967  00F8F0  0EC2               	movlw	low (STR_34+10)
  1968  00F8F2  6E0F               	movwf	sprintf@f,c
  1969  00F8F4  0EFF               	movlw	high (STR_34+10)
  1970  00F8F6  6E10               	movwf	sprintf@f+1,c
  1971  00F8F8  C04E  F011         	movff	V_ProgRiegoIlum@f_min_riego_tr,?_sprintf+4
  1972  00F8FC  6A12               	clrf	?_sprintf+5,c
  1973  00F8FE  EC95  F076         	call	_sprintf	;wreg free
  1974                           
  1975                           ;main.c: 398: Lcd_Out(2, 18, buffer1);
  1976  00F902  0E12               	movlw	18
  1977  00F904  6E40               	movwf	Lcd_Out@x,c
  1978  00F906  0ED0               	movlw	low _buffer1
  1979  00F908  6E41               	movwf	Lcd_Out@buffer,c
  1980  00F90A  0E00               	movlw	high _buffer1
  1981  00F90C  6E42               	movwf	Lcd_Out@buffer+1,c
  1982  00F90E  0E02               	movlw	2
  1983  00F910  ECE5  F06F         	call	_Lcd_Out
  1984                           
  1985                           ;main.c: 399: Lcd_Out(2, 18, "" );
  1986  00F914  0E12               	movlw	18
  1987  00F916  6E40               	movwf	Lcd_Out@x,c
  1988  00F918  0EEB               	movlw	low (STR_4+20)
  1989  00F91A  6E41               	movwf	Lcd_Out@buffer,c
  1990  00F91C  0EFE               	movlw	high (STR_4+20)
  1991  00F91E  6E42               	movwf	Lcd_Out@buffer+1,c
  1992  00F920  0E02               	movlw	2
  1993  00F922  ECE5  F06F         	call	_Lcd_Out
  1994                           
  1995                           ;main.c: 400: }else if(posicion == 8){
  1996  00F926  D0A8               	goto	l3442
  1997  00F928                     l3394:
  1998  00F928  0E08               	movlw	8
  1999  00F92A  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2000  00F92C  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2001  00F92E  A4D8               	btfss	status,2,c
  2002  00F930  D025               	goto	l3406
  2003                           
  2004                           ;main.c: 401: if(i_hora_ilum_tr<23){i_hora_ilum_tr++;}
  2005  00F932  0E17               	movlw	23
  2006  00F934  6047               	cpfslt	V_ProgRiegoIlum@i_hora_ilum_tr,c
  2007  00F936  D002               	goto	l3400
  2008  00F938  2A47               	incf	V_ProgRiegoIlum@i_hora_ilum_tr,f,c
  2009  00F93A  D000               	goto	l3400
  2010  00F93C                     l3400:
  2011                           
  2012                           ;main.c: 402: sprintf(buffer1,"%02u",i_hora_ilum_tr);
  2013  00F93C  0ED0               	movlw	low _buffer1
  2014  00F93E  6E0D               	movwf	sprintf@sp,c
  2015  00F940  0E00               	movlw	high _buffer1
  2016  00F942  6E0E               	movwf	sprintf@sp+1,c
  2017  00F944  0EC2               	movlw	low (STR_34+10)
  2018  00F946  6E0F               	movwf	sprintf@f,c
  2019  00F948  0EFF               	movlw	high (STR_34+10)
  2020  00F94A  6E10               	movwf	sprintf@f+1,c
  2021  00F94C  C047  F011         	movff	V_ProgRiegoIlum@i_hora_ilum_tr,?_sprintf+4
  2022  00F950  6A12               	clrf	?_sprintf+5,c
  2023  00F952  EC95  F076         	call	_sprintf	;wreg free
  2024                           
  2025                           ;main.c: 403: Lcd_Out(4, 5, buffer1);
  2026  00F956  0E05               	movlw	5
  2027  00F958  6E40               	movwf	Lcd_Out@x,c
  2028  00F95A  0ED0               	movlw	low _buffer1
  2029  00F95C  6E41               	movwf	Lcd_Out@buffer,c
  2030  00F95E  0E00               	movlw	high _buffer1
  2031  00F960  6E42               	movwf	Lcd_Out@buffer+1,c
  2032  00F962  0E04               	movlw	4
  2033  00F964  ECE5  F06F         	call	_Lcd_Out
  2034                           
  2035                           ;main.c: 404: Lcd_Out(4, 5, "" );
  2036  00F968  0E05               	movlw	5
  2037  00F96A  6E40               	movwf	Lcd_Out@x,c
  2038  00F96C  0EEB               	movlw	low (STR_4+20)
  2039  00F96E  6E41               	movwf	Lcd_Out@buffer,c
  2040  00F970  0EFE               	movlw	high (STR_4+20)
  2041  00F972  6E42               	movwf	Lcd_Out@buffer+1,c
  2042  00F974  0E04               	movlw	4
  2043  00F976  ECE5  F06F         	call	_Lcd_Out
  2044                           
  2045                           ;main.c: 405: }else if(posicion == 10){
  2046  00F97A  D07E               	goto	l3442
  2047  00F97C                     l3406:
  2048  00F97C  0E0A               	movlw	10
  2049  00F97E  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2050  00F980  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2051  00F982  A4D8               	btfss	status,2,c
  2052  00F984  D025               	goto	l3418
  2053                           
  2054                           ;main.c: 406: if(i_min_ilum_tr<59){i_min_ilum_tr++;}
  2055  00F986  0E3B               	movlw	59
  2056  00F988  6048               	cpfslt	V_ProgRiegoIlum@i_min_ilum_tr,c
  2057  00F98A  D002               	goto	l3412
  2058  00F98C  2A48               	incf	V_ProgRiegoIlum@i_min_ilum_tr,f,c
  2059  00F98E  D000               	goto	l3412
  2060  00F990                     l3412:
  2061                           
  2062                           ;main.c: 407: sprintf(buffer1,"%02u",i_min_ilum_tr);
  2063  00F990  0ED0               	movlw	low _buffer1
  2064  00F992  6E0D               	movwf	sprintf@sp,c
  2065  00F994  0E00               	movlw	high _buffer1
  2066  00F996  6E0E               	movwf	sprintf@sp+1,c
  2067  00F998  0EC2               	movlw	low (STR_34+10)
  2068  00F99A  6E0F               	movwf	sprintf@f,c
  2069  00F99C  0EFF               	movlw	high (STR_34+10)
  2070  00F99E  6E10               	movwf	sprintf@f+1,c
  2071  00F9A0  C048  F011         	movff	V_ProgRiegoIlum@i_min_ilum_tr,?_sprintf+4
  2072  00F9A4  6A12               	clrf	?_sprintf+5,c
  2073  00F9A6  EC95  F076         	call	_sprintf	;wreg free
  2074                           
  2075                           ;main.c: 408: Lcd_Out(4, 8, buffer1);
  2076  00F9AA  0E08               	movlw	8
  2077  00F9AC  6E40               	movwf	Lcd_Out@x,c
  2078  00F9AE  0ED0               	movlw	low _buffer1
  2079  00F9B0  6E41               	movwf	Lcd_Out@buffer,c
  2080  00F9B2  0E00               	movlw	high _buffer1
  2081  00F9B4  6E42               	movwf	Lcd_Out@buffer+1,c
  2082  00F9B6  0E04               	movlw	4
  2083  00F9B8  ECE5  F06F         	call	_Lcd_Out
  2084                           
  2085                           ;main.c: 409: Lcd_Out(4, 8, "" );
  2086  00F9BC  0E08               	movlw	8
  2087  00F9BE  6E40               	movwf	Lcd_Out@x,c
  2088  00F9C0  0EEB               	movlw	low (STR_4+20)
  2089  00F9C2  6E41               	movwf	Lcd_Out@buffer,c
  2090  00F9C4  0EFE               	movlw	high (STR_4+20)
  2091  00F9C6  6E42               	movwf	Lcd_Out@buffer+1,c
  2092  00F9C8  0E04               	movlw	4
  2093  00F9CA  ECE5  F06F         	call	_Lcd_Out
  2094                           
  2095                           ;main.c: 410: }else if(posicion == 12){
  2096  00F9CE  D054               	goto	l3442
  2097  00F9D0                     l3418:
  2098  00F9D0  0E0C               	movlw	12
  2099  00F9D2  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2100  00F9D4  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2101  00F9D6  A4D8               	btfss	status,2,c
  2102  00F9D8  D025               	goto	l3430
  2103                           
  2104                           ;main.c: 411: if(f_hora_ilum_tr<23){f_hora_ilum_tr++;}
  2105  00F9DA  0E17               	movlw	23
  2106  00F9DC  6049               	cpfslt	V_ProgRiegoIlum@f_hora_ilum_tr,c
  2107  00F9DE  D002               	goto	l3424
  2108  00F9E0  2A49               	incf	V_ProgRiegoIlum@f_hora_ilum_tr,f,c
  2109  00F9E2  D000               	goto	l3424
  2110  00F9E4                     l3424:
  2111                           
  2112                           ;main.c: 412: sprintf(buffer1,"%02u",f_hora_ilum_tr);
  2113  00F9E4  0ED0               	movlw	low _buffer1
  2114  00F9E6  6E0D               	movwf	sprintf@sp,c
  2115  00F9E8  0E00               	movlw	high _buffer1
  2116  00F9EA  6E0E               	movwf	sprintf@sp+1,c
  2117  00F9EC  0EC2               	movlw	low (STR_34+10)
  2118  00F9EE  6E0F               	movwf	sprintf@f,c
  2119  00F9F0  0EFF               	movlw	high (STR_34+10)
  2120  00F9F2  6E10               	movwf	sprintf@f+1,c
  2121  00F9F4  C049  F011         	movff	V_ProgRiegoIlum@f_hora_ilum_tr,?_sprintf+4
  2122  00F9F8  6A12               	clrf	?_sprintf+5,c
  2123  00F9FA  EC95  F076         	call	_sprintf	;wreg free
  2124                           
  2125                           ;main.c: 413: Lcd_Out(4, 15, buffer1);
  2126  00F9FE  0E0F               	movlw	15
  2127  00FA00  6E40               	movwf	Lcd_Out@x,c
  2128  00FA02  0ED0               	movlw	low _buffer1
  2129  00FA04  6E41               	movwf	Lcd_Out@buffer,c
  2130  00FA06  0E00               	movlw	high _buffer1
  2131  00FA08  6E42               	movwf	Lcd_Out@buffer+1,c
  2132  00FA0A  0E04               	movlw	4
  2133  00FA0C  ECE5  F06F         	call	_Lcd_Out
  2134                           
  2135                           ;main.c: 414: Lcd_Out(4, 15, "" );
  2136  00FA10  0E0F               	movlw	15
  2137  00FA12  6E40               	movwf	Lcd_Out@x,c
  2138  00FA14  0EEB               	movlw	low (STR_4+20)
  2139  00FA16  6E41               	movwf	Lcd_Out@buffer,c
  2140  00FA18  0EFE               	movlw	high (STR_4+20)
  2141  00FA1A  6E42               	movwf	Lcd_Out@buffer+1,c
  2142  00FA1C  0E04               	movlw	4
  2143  00FA1E  ECE5  F06F         	call	_Lcd_Out
  2144                           
  2145                           ;main.c: 415: }else if(posicion == 14){
  2146  00FA22  D02A               	goto	l3442
  2147  00FA24                     l3430:
  2148  00FA24  0E0E               	movlw	14
  2149  00FA26  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2150  00FA28  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2151  00FA2A  A4D8               	btfss	status,2,c
  2152  00FA2C  D025               	goto	l3442
  2153                           
  2154                           ;main.c: 416: if(f_min_ilum_tr<59){f_min_ilum_tr++;}
  2155  00FA2E  0E3B               	movlw	59
  2156  00FA30  604A               	cpfslt	V_ProgRiegoIlum@f_min_ilum_tr,c
  2157  00FA32  D002               	goto	l3436
  2158  00FA34  2A4A               	incf	V_ProgRiegoIlum@f_min_ilum_tr,f,c
  2159  00FA36  D000               	goto	l3436
  2160  00FA38                     l3436:
  2161                           
  2162                           ;main.c: 417: sprintf(buffer1,"%02u",f_min_ilum_tr);
  2163  00FA38  0ED0               	movlw	low _buffer1
  2164  00FA3A  6E0D               	movwf	sprintf@sp,c
  2165  00FA3C  0E00               	movlw	high _buffer1
  2166  00FA3E  6E0E               	movwf	sprintf@sp+1,c
  2167  00FA40  0EC2               	movlw	low (STR_34+10)
  2168  00FA42  6E0F               	movwf	sprintf@f,c
  2169  00FA44  0EFF               	movlw	high (STR_34+10)
  2170  00FA46  6E10               	movwf	sprintf@f+1,c
  2171  00FA48  C04A  F011         	movff	V_ProgRiegoIlum@f_min_ilum_tr,?_sprintf+4
  2172  00FA4C  6A12               	clrf	?_sprintf+5,c
  2173  00FA4E  EC95  F076         	call	_sprintf	;wreg free
  2174                           
  2175                           ;main.c: 418: Lcd_Out(4, 18, buffer1);
  2176  00FA52  0E12               	movlw	18
  2177  00FA54  6E40               	movwf	Lcd_Out@x,c
  2178  00FA56  0ED0               	movlw	low _buffer1
  2179  00FA58  6E41               	movwf	Lcd_Out@buffer,c
  2180  00FA5A  0E00               	movlw	high _buffer1
  2181  00FA5C  6E42               	movwf	Lcd_Out@buffer+1,c
  2182  00FA5E  0E04               	movlw	4
  2183  00FA60  ECE5  F06F         	call	_Lcd_Out
  2184                           
  2185                           ;main.c: 419: Lcd_Out(4, 18, "" );
  2186  00FA64  0E12               	movlw	18
  2187  00FA66  6E40               	movwf	Lcd_Out@x,c
  2188  00FA68  0EEB               	movlw	low (STR_4+20)
  2189  00FA6A  6E41               	movwf	Lcd_Out@buffer,c
  2190  00FA6C  0EFE               	movlw	high (STR_4+20)
  2191  00FA6E  6E42               	movwf	Lcd_Out@buffer+1,c
  2192  00FA70  0E04               	movlw	4
  2193  00FA72  ECE5  F06F         	call	_Lcd_Out
  2194  00FA76  D000               	goto	l3442
  2195  00FA78                     l3442:
  2196                           
  2197                           ;main.c: 420: }
  2198                           ;main.c: 421: }
  2199                           ;main.c: 423: if(Sw_Right = PORTAbits.RA2 == 0){
  2200  00FA78  B480               	btfsc	3968,2,c	;volatile
  2201  00FA7A  D002               	goto	u3160
  2202  00FA7C  0E01               	movlw	1
  2203  00FA7E  D001               	goto	u3170
  2204  00FA80                     u3160:
  2205  00FA80  0E00               	movlw	0
  2206  00FA82                     u3170:
  2207  00FA82  0100               	movlb	0	; () banked
  2208  00FA84  6FCD               	movwf	_Sw_Right& (0+255),b
  2209  00FA86  0100               	movlb	0	; () banked
  2210  00FA88  51CD               	movf	_Sw_Right& (0+255),w,b
  2211  00FA8A  B4D8               	btfsc	status,2,c
  2212  00FA8C  D036               	goto	l3452
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;main.c: 424: if(posicion<=13){posicion+=2;}
  2216  00FA8E  BE50               	btfsc	V_ProgRiegoIlum@posicion+1,7,c
  2217  00FA90  D006               	goto	l3446
  2218  00FA92  5050               	movf	V_ProgRiegoIlum@posicion+1,w,c
  2219  00FA94  E109               	bnz	l3448
  2220  00FA96  0E0E               	movlw	14
  2221  00FA98  5C4F               	subwf	V_ProgRiegoIlum@posicion,w,c
  2222  00FA9A  B0D8               	btfsc	status,0,c
  2223  00FA9C  D005               	goto	l3448
  2224  00FA9E                     l3446:
  2225                           
  2226                           ; BSR set to: 0
  2227  00FA9E  0E02               	movlw	2
  2228  00FAA0  264F               	addwf	V_ProgRiegoIlum@posicion,f,c
  2229  00FAA2  0E00               	movlw	0
  2230  00FAA4  2250               	addwfc	V_ProgRiegoIlum@posicion+1,f,c
  2231  00FAA6  D000               	goto	l3448
  2232  00FAA8                     l3448:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;main.c: 425: i=0;
  2236  00FAA8  0E00               	movlw	0
  2237  00FAAA  0100               	movlb	0	; () banked
  2238  00FAAC  6FC5               	movwf	(_i+1)& (0+255),b
  2239  00FAAE  0E00               	movlw	0
  2240  00FAB0  6FC4               	movwf	_i& (0+255),b
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;main.c: 426: Lcd_Out(posicionesUp[posicion], posicionesUp[posicion+1], "" );
  2244  00FAB2  C04F  F045         	movff	V_ProgRiegoIlum@posicion,??_V_ProgRiegoIlum
  2245  00FAB6  C050  F046         	movff	V_ProgRiegoIlum@posicion+1,??_V_ProgRiegoIlum+1
  2246  00FABA  90D8               	bcf	status,0,c
  2247  00FABC  3645               	rlcf	??_V_ProgRiegoIlum,f,c
  2248  00FABE  3646               	rlcf	??_V_ProgRiegoIlum+1,f,c
  2249  00FAC0  0E02               	movlw	2
  2250  00FAC2  2645               	addwf	??_V_ProgRiegoIlum,f,c
  2251  00FAC4  0E00               	movlw	0
  2252  00FAC6  2246               	addwfc	??_V_ProgRiegoIlum+1,f,c
  2253  00FAC8  0E60               	movlw	low _posicionesUp
  2254  00FACA  2445               	addwf	??_V_ProgRiegoIlum,w,c
  2255  00FACC  6ED9               	movwf	fsr2l,c
  2256  00FACE  0E00               	movlw	high _posicionesUp
  2257  00FAD0  2046               	addwfc	??_V_ProgRiegoIlum+1,w,c
  2258  00FAD2  6EDA               	movwf	fsr2h,c
  2259  00FAD4  50DF               	movf	indf2,w,c
  2260  00FAD6  6E40               	movwf	Lcd_Out@x,c
  2261  00FAD8  0EEB               	movlw	low (STR_4+20)
  2262  00FADA  6E41               	movwf	Lcd_Out@buffer,c
  2263  00FADC  0EFE               	movlw	high (STR_4+20)
  2264  00FADE  6E42               	movwf	Lcd_Out@buffer+1,c
  2265  00FAE0  90D8               	bcf	status,0,c
  2266  00FAE2  344F               	rlcf	V_ProgRiegoIlum@posicion,w,c
  2267  00FAE4  6ED9               	movwf	fsr2l,c
  2268  00FAE6  3450               	rlcf	V_ProgRiegoIlum@posicion+1,w,c
  2269  00FAE8  6EDA               	movwf	fsr2h,c
  2270  00FAEA  0E60               	movlw	low _posicionesUp
  2271  00FAEC  26D9               	addwf	fsr2l,f,c
  2272  00FAEE  0E00               	movlw	high _posicionesUp
  2273  00FAF0  22DA               	addwfc	fsr2h,f,c
  2274  00FAF2  50DF               	movf	indf2,w,c
  2275  00FAF4  ECE5  F06F         	call	_Lcd_Out
  2276  00FAF8  D000               	goto	l3452
  2277  00FAFA                     l3452:
  2278                           
  2279                           ;main.c: 427: }
  2280                           ;main.c: 429: if(Sw_Left = PORTAbits.RA0 == 0){
  2281  00FAFA  B080               	btfsc	3968,0,c	;volatile
  2282  00FAFC  D002               	goto	u3200
  2283  00FAFE  0E01               	movlw	1
  2284  00FB00  D001               	goto	u3210
  2285  00FB02                     u3200:
  2286  00FB02  0E00               	movlw	0
  2287  00FB04                     u3210:
  2288  00FB04  0100               	movlb	0	; () banked
  2289  00FB06  6FCC               	movwf	_Sw_Left& (0+255),b
  2290  00FB08  0100               	movlb	0	; () banked
  2291  00FB0A  51CC               	movf	_Sw_Left& (0+255),w,b
  2292  00FB0C  B4D8               	btfsc	status,2,c
  2293  00FB0E  D036               	goto	l3462
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;main.c: 430: if(posicion>=2){posicion-=2;}
  2297  00FB10  BE50               	btfsc	V_ProgRiegoIlum@posicion+1,7,c
  2298  00FB12  D00B               	goto	l3458
  2299  00FB14  5050               	movf	V_ProgRiegoIlum@posicion+1,w,c
  2300  00FB16  E104               	bnz	u3230
  2301  00FB18  0E02               	movlw	2
  2302  00FB1A  5C4F               	subwf	V_ProgRiegoIlum@posicion,w,c
  2303  00FB1C  A0D8               	btfss	status,0,c
  2304  00FB1E  D005               	goto	l3458
  2305  00FB20                     u3230:
  2306                           
  2307                           ; BSR set to: 0
  2308  00FB20  0EFE               	movlw	254
  2309  00FB22  264F               	addwf	V_ProgRiegoIlum@posicion,f,c
  2310  00FB24  0EFF               	movlw	255
  2311  00FB26  2250               	addwfc	V_ProgRiegoIlum@posicion+1,f,c
  2312  00FB28  D000               	goto	l3458
  2313  00FB2A                     l3458:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;main.c: 431: i=0;
  2317  00FB2A  0E00               	movlw	0
  2318  00FB2C  0100               	movlb	0	; () banked
  2319  00FB2E  6FC5               	movwf	(_i+1)& (0+255),b
  2320  00FB30  0E00               	movlw	0
  2321  00FB32  6FC4               	movwf	_i& (0+255),b
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;main.c: 432: Lcd_Out(posicionesUp[posicion], posicionesUp[posicion+1], "" );
  2325  00FB34  C04F  F045         	movff	V_ProgRiegoIlum@posicion,??_V_ProgRiegoIlum
  2326  00FB38  C050  F046         	movff	V_ProgRiegoIlum@posicion+1,??_V_ProgRiegoIlum+1
  2327  00FB3C  90D8               	bcf	status,0,c
  2328  00FB3E  3645               	rlcf	??_V_ProgRiegoIlum,f,c
  2329  00FB40  3646               	rlcf	??_V_ProgRiegoIlum+1,f,c
  2330  00FB42  0E02               	movlw	2
  2331  00FB44  2645               	addwf	??_V_ProgRiegoIlum,f,c
  2332  00FB46  0E00               	movlw	0
  2333  00FB48  2246               	addwfc	??_V_ProgRiegoIlum+1,f,c
  2334  00FB4A  0E60               	movlw	low _posicionesUp
  2335  00FB4C  2445               	addwf	??_V_ProgRiegoIlum,w,c
  2336  00FB4E  6ED9               	movwf	fsr2l,c
  2337  00FB50  0E00               	movlw	high _posicionesUp
  2338  00FB52  2046               	addwfc	??_V_ProgRiegoIlum+1,w,c
  2339  00FB54  6EDA               	movwf	fsr2h,c
  2340  00FB56  50DF               	movf	indf2,w,c
  2341  00FB58  6E40               	movwf	Lcd_Out@x,c
  2342  00FB5A  0EEB               	movlw	low (STR_4+20)
  2343  00FB5C  6E41               	movwf	Lcd_Out@buffer,c
  2344  00FB5E  0EFE               	movlw	high (STR_4+20)
  2345  00FB60  6E42               	movwf	Lcd_Out@buffer+1,c
  2346  00FB62  90D8               	bcf	status,0,c
  2347  00FB64  344F               	rlcf	V_ProgRiegoIlum@posicion,w,c
  2348  00FB66  6ED9               	movwf	fsr2l,c
  2349  00FB68  3450               	rlcf	V_ProgRiegoIlum@posicion+1,w,c
  2350  00FB6A  6EDA               	movwf	fsr2h,c
  2351  00FB6C  0E60               	movlw	low _posicionesUp
  2352  00FB6E  26D9               	addwf	fsr2l,f,c
  2353  00FB70  0E00               	movlw	high _posicionesUp
  2354  00FB72  22DA               	addwfc	fsr2h,f,c
  2355  00FB74  50DF               	movf	indf2,w,c
  2356  00FB76  ECE5  F06F         	call	_Lcd_Out
  2357  00FB7A  D000               	goto	l3462
  2358  00FB7C                     l3462:
  2359                           
  2360                           ;main.c: 433: }
  2361                           ;main.c: 435: if(Sw_Down = PORTCbits.RC4 == 0){
  2362  00FB7C  B882               	btfsc	3970,4,c	;volatile
  2363  00FB7E  D002               	goto	u3240
  2364  00FB80  0E01               	movlw	1
  2365  00FB82  D001               	goto	u3250
  2366  00FB84                     u3240:
  2367  00FB84  0E00               	movlw	0
  2368  00FB86                     u3250:
  2369  00FB86  0100               	movlb	0	; () banked
  2370  00FB88  6FCB               	movwf	_Sw_Down& (0+255),b
  2371  00FB8A  0100               	movlb	0	; () banked
  2372  00FB8C  51CB               	movf	_Sw_Down& (0+255),w,b
  2373  00FB8E  B4D8               	btfsc	status,2,c
  2374  00FB90  D154               	goto	l3562
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;main.c: 436: i=0;
  2378  00FB92  0E00               	movlw	0
  2379  00FB94  0100               	movlb	0	; () banked
  2380  00FB96  6FC5               	movwf	(_i+1)& (0+255),b
  2381  00FB98  0E00               	movlw	0
  2382  00FB9A  6FC4               	movwf	_i& (0+255),b
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;main.c: 437: if(posicion == 0){
  2386  00FB9C  504F               	movf	V_ProgRiegoIlum@posicion,w,c
  2387  00FB9E  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2388  00FBA0  A4D8               	btfss	status,2,c
  2389  00FBA2  D025               	goto	l3478
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;main.c: 438: if(i_hora_riego_tr>0){i_hora_riego_tr--;}
  2393  00FBA4  504B               	movf	V_ProgRiegoIlum@i_hora_riego_tr,w,c
  2394  00FBA6  B4D8               	btfsc	status,2,c
  2395  00FBA8  D002               	goto	l3472
  2396                           
  2397                           ; BSR set to: 0
  2398  00FBAA  064B               	decf	V_ProgRiegoIlum@i_hora_riego_tr,f,c
  2399  00FBAC  D000               	goto	l3472
  2400  00FBAE                     l3472:
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;main.c: 439: sprintf(buffer1,"%02u",i_hora_riego_tr);
  2404  00FBAE  0ED0               	movlw	low _buffer1
  2405  00FBB0  6E0D               	movwf	sprintf@sp,c
  2406  00FBB2  0E00               	movlw	high _buffer1
  2407  00FBB4  6E0E               	movwf	sprintf@sp+1,c
  2408  00FBB6  0EC2               	movlw	low (STR_34+10)
  2409  00FBB8  6E0F               	movwf	sprintf@f,c
  2410  00FBBA  0EFF               	movlw	high (STR_34+10)
  2411  00FBBC  6E10               	movwf	sprintf@f+1,c
  2412  00FBBE  C04B  F011         	movff	V_ProgRiegoIlum@i_hora_riego_tr,?_sprintf+4
  2413  00FBC2  6A12               	clrf	?_sprintf+5,c
  2414  00FBC4  EC95  F076         	call	_sprintf	;wreg free
  2415                           
  2416                           ;main.c: 440: Lcd_Out(2, 5, buffer1);
  2417  00FBC8  0E05               	movlw	5
  2418  00FBCA  6E40               	movwf	Lcd_Out@x,c
  2419  00FBCC  0ED0               	movlw	low _buffer1
  2420  00FBCE  6E41               	movwf	Lcd_Out@buffer,c
  2421  00FBD0  0E00               	movlw	high _buffer1
  2422  00FBD2  6E42               	movwf	Lcd_Out@buffer+1,c
  2423  00FBD4  0E02               	movlw	2
  2424  00FBD6  ECE5  F06F         	call	_Lcd_Out
  2425                           
  2426                           ;main.c: 441: Lcd_Out(2, 5, "" );
  2427  00FBDA  0E05               	movlw	5
  2428  00FBDC  6E40               	movwf	Lcd_Out@x,c
  2429  00FBDE  0EEB               	movlw	low (STR_4+20)
  2430  00FBE0  6E41               	movwf	Lcd_Out@buffer,c
  2431  00FBE2  0EFE               	movlw	high (STR_4+20)
  2432  00FBE4  6E42               	movwf	Lcd_Out@buffer+1,c
  2433  00FBE6  0E02               	movlw	2
  2434  00FBE8  ECE5  F06F         	call	_Lcd_Out
  2435                           
  2436                           ;main.c: 442: }else if(posicion == 2){
  2437  00FBEC  D126               	goto	l3562
  2438  00FBEE                     l3478:
  2439  00FBEE  0E02               	movlw	2
  2440  00FBF0  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2441  00FBF2  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2442  00FBF4  A4D8               	btfss	status,2,c
  2443  00FBF6  D025               	goto	l3490
  2444                           
  2445                           ;main.c: 443: if(i_min_riego_tr>0){i_min_riego_tr--;}
  2446  00FBF8  504C               	movf	V_ProgRiegoIlum@i_min_riego_tr,w,c
  2447  00FBFA  B4D8               	btfsc	status,2,c
  2448  00FBFC  D002               	goto	l3484
  2449  00FBFE  064C               	decf	V_ProgRiegoIlum@i_min_riego_tr,f,c
  2450  00FC00  D000               	goto	l3484
  2451  00FC02                     l3484:
  2452                           
  2453                           ;main.c: 444: sprintf(buffer1,"%02u",i_min_riego_tr);
  2454  00FC02  0ED0               	movlw	low _buffer1
  2455  00FC04  6E0D               	movwf	sprintf@sp,c
  2456  00FC06  0E00               	movlw	high _buffer1
  2457  00FC08  6E0E               	movwf	sprintf@sp+1,c
  2458  00FC0A  0EC2               	movlw	low (STR_34+10)
  2459  00FC0C  6E0F               	movwf	sprintf@f,c
  2460  00FC0E  0EFF               	movlw	high (STR_34+10)
  2461  00FC10  6E10               	movwf	sprintf@f+1,c
  2462  00FC12  C04C  F011         	movff	V_ProgRiegoIlum@i_min_riego_tr,?_sprintf+4
  2463  00FC16  6A12               	clrf	?_sprintf+5,c
  2464  00FC18  EC95  F076         	call	_sprintf	;wreg free
  2465                           
  2466                           ;main.c: 445: Lcd_Out(2, 8, buffer1);
  2467  00FC1C  0E08               	movlw	8
  2468  00FC1E  6E40               	movwf	Lcd_Out@x,c
  2469  00FC20  0ED0               	movlw	low _buffer1
  2470  00FC22  6E41               	movwf	Lcd_Out@buffer,c
  2471  00FC24  0E00               	movlw	high _buffer1
  2472  00FC26  6E42               	movwf	Lcd_Out@buffer+1,c
  2473  00FC28  0E02               	movlw	2
  2474  00FC2A  ECE5  F06F         	call	_Lcd_Out
  2475                           
  2476                           ;main.c: 446: Lcd_Out(2, 8, "" );
  2477  00FC2E  0E08               	movlw	8
  2478  00FC30  6E40               	movwf	Lcd_Out@x,c
  2479  00FC32  0EEB               	movlw	low (STR_4+20)
  2480  00FC34  6E41               	movwf	Lcd_Out@buffer,c
  2481  00FC36  0EFE               	movlw	high (STR_4+20)
  2482  00FC38  6E42               	movwf	Lcd_Out@buffer+1,c
  2483  00FC3A  0E02               	movlw	2
  2484  00FC3C  ECE5  F06F         	call	_Lcd_Out
  2485                           
  2486                           ;main.c: 447: }else if(posicion == 4){
  2487  00FC40  D0FC               	goto	l3562
  2488  00FC42                     l3490:
  2489  00FC42  0E04               	movlw	4
  2490  00FC44  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2491  00FC46  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2492  00FC48  A4D8               	btfss	status,2,c
  2493  00FC4A  D025               	goto	l3502
  2494                           
  2495                           ;main.c: 448: if(f_hora_riego_tr>0){f_hora_riego_tr--;}
  2496  00FC4C  504D               	movf	V_ProgRiegoIlum@f_hora_riego_tr,w,c
  2497  00FC4E  B4D8               	btfsc	status,2,c
  2498  00FC50  D002               	goto	l3496
  2499  00FC52  064D               	decf	V_ProgRiegoIlum@f_hora_riego_tr,f,c
  2500  00FC54  D000               	goto	l3496
  2501  00FC56                     l3496:
  2502                           
  2503                           ;main.c: 449: sprintf(buffer1,"%02u",f_hora_riego_tr);
  2504  00FC56  0ED0               	movlw	low _buffer1
  2505  00FC58  6E0D               	movwf	sprintf@sp,c
  2506  00FC5A  0E00               	movlw	high _buffer1
  2507  00FC5C  6E0E               	movwf	sprintf@sp+1,c
  2508  00FC5E  0EC2               	movlw	low (STR_34+10)
  2509  00FC60  6E0F               	movwf	sprintf@f,c
  2510  00FC62  0EFF               	movlw	high (STR_34+10)
  2511  00FC64  6E10               	movwf	sprintf@f+1,c
  2512  00FC66  C04D  F011         	movff	V_ProgRiegoIlum@f_hora_riego_tr,?_sprintf+4
  2513  00FC6A  6A12               	clrf	?_sprintf+5,c
  2514  00FC6C  EC95  F076         	call	_sprintf	;wreg free
  2515                           
  2516                           ;main.c: 450: Lcd_Out(2, 15, buffer1);
  2517  00FC70  0E0F               	movlw	15
  2518  00FC72  6E40               	movwf	Lcd_Out@x,c
  2519  00FC74  0ED0               	movlw	low _buffer1
  2520  00FC76  6E41               	movwf	Lcd_Out@buffer,c
  2521  00FC78  0E00               	movlw	high _buffer1
  2522  00FC7A  6E42               	movwf	Lcd_Out@buffer+1,c
  2523  00FC7C  0E02               	movlw	2
  2524  00FC7E  ECE5  F06F         	call	_Lcd_Out
  2525                           
  2526                           ;main.c: 451: Lcd_Out(2, 15, "" );
  2527  00FC82  0E0F               	movlw	15
  2528  00FC84  6E40               	movwf	Lcd_Out@x,c
  2529  00FC86  0EEB               	movlw	low (STR_4+20)
  2530  00FC88  6E41               	movwf	Lcd_Out@buffer,c
  2531  00FC8A  0EFE               	movlw	high (STR_4+20)
  2532  00FC8C  6E42               	movwf	Lcd_Out@buffer+1,c
  2533  00FC8E  0E02               	movlw	2
  2534  00FC90  ECE5  F06F         	call	_Lcd_Out
  2535                           
  2536                           ;main.c: 452: }else if(posicion == 6){
  2537  00FC94  D0D2               	goto	l3562
  2538  00FC96                     l3502:
  2539  00FC96  0E06               	movlw	6
  2540  00FC98  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2541  00FC9A  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2542  00FC9C  A4D8               	btfss	status,2,c
  2543  00FC9E  D025               	goto	l3514
  2544                           
  2545                           ;main.c: 453: if(f_min_riego_tr>0){f_min_riego_tr--;}
  2546  00FCA0  504E               	movf	V_ProgRiegoIlum@f_min_riego_tr,w,c
  2547  00FCA2  B4D8               	btfsc	status,2,c
  2548  00FCA4  D002               	goto	l3508
  2549  00FCA6  064E               	decf	V_ProgRiegoIlum@f_min_riego_tr,f,c
  2550  00FCA8  D000               	goto	l3508
  2551  00FCAA                     l3508:
  2552                           
  2553                           ;main.c: 454: sprintf(buffer1,"%02u",f_min_riego_tr);
  2554  00FCAA  0ED0               	movlw	low _buffer1
  2555  00FCAC  6E0D               	movwf	sprintf@sp,c
  2556  00FCAE  0E00               	movlw	high _buffer1
  2557  00FCB0  6E0E               	movwf	sprintf@sp+1,c
  2558  00FCB2  0EC2               	movlw	low (STR_34+10)
  2559  00FCB4  6E0F               	movwf	sprintf@f,c
  2560  00FCB6  0EFF               	movlw	high (STR_34+10)
  2561  00FCB8  6E10               	movwf	sprintf@f+1,c
  2562  00FCBA  C04E  F011         	movff	V_ProgRiegoIlum@f_min_riego_tr,?_sprintf+4
  2563  00FCBE  6A12               	clrf	?_sprintf+5,c
  2564  00FCC0  EC95  F076         	call	_sprintf	;wreg free
  2565                           
  2566                           ;main.c: 455: Lcd_Out(2, 18, buffer1);
  2567  00FCC4  0E12               	movlw	18
  2568  00FCC6  6E40               	movwf	Lcd_Out@x,c
  2569  00FCC8  0ED0               	movlw	low _buffer1
  2570  00FCCA  6E41               	movwf	Lcd_Out@buffer,c
  2571  00FCCC  0E00               	movlw	high _buffer1
  2572  00FCCE  6E42               	movwf	Lcd_Out@buffer+1,c
  2573  00FCD0  0E02               	movlw	2
  2574  00FCD2  ECE5  F06F         	call	_Lcd_Out
  2575                           
  2576                           ;main.c: 456: Lcd_Out(2, 18, "" );
  2577  00FCD6  0E12               	movlw	18
  2578  00FCD8  6E40               	movwf	Lcd_Out@x,c
  2579  00FCDA  0EEB               	movlw	low (STR_4+20)
  2580  00FCDC  6E41               	movwf	Lcd_Out@buffer,c
  2581  00FCDE  0EFE               	movlw	high (STR_4+20)
  2582  00FCE0  6E42               	movwf	Lcd_Out@buffer+1,c
  2583  00FCE2  0E02               	movlw	2
  2584  00FCE4  ECE5  F06F         	call	_Lcd_Out
  2585                           
  2586                           ;main.c: 457: }else if(posicion == 8){
  2587  00FCE8  D0A8               	goto	l3562
  2588  00FCEA                     l3514:
  2589  00FCEA  0E08               	movlw	8
  2590  00FCEC  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2591  00FCEE  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2592  00FCF0  A4D8               	btfss	status,2,c
  2593  00FCF2  D025               	goto	l3526
  2594                           
  2595                           ;main.c: 458: if(i_hora_ilum_tr>0){i_hora_ilum_tr--;}
  2596  00FCF4  5047               	movf	V_ProgRiegoIlum@i_hora_ilum_tr,w,c
  2597  00FCF6  B4D8               	btfsc	status,2,c
  2598  00FCF8  D002               	goto	l3520
  2599  00FCFA  0647               	decf	V_ProgRiegoIlum@i_hora_ilum_tr,f,c
  2600  00FCFC  D000               	goto	l3520
  2601  00FCFE                     l3520:
  2602                           
  2603                           ;main.c: 459: sprintf(buffer1,"%02u",i_hora_ilum_tr);
  2604  00FCFE  0ED0               	movlw	low _buffer1
  2605  00FD00  6E0D               	movwf	sprintf@sp,c
  2606  00FD02  0E00               	movlw	high _buffer1
  2607  00FD04  6E0E               	movwf	sprintf@sp+1,c
  2608  00FD06  0EC2               	movlw	low (STR_34+10)
  2609  00FD08  6E0F               	movwf	sprintf@f,c
  2610  00FD0A  0EFF               	movlw	high (STR_34+10)
  2611  00FD0C  6E10               	movwf	sprintf@f+1,c
  2612  00FD0E  C047  F011         	movff	V_ProgRiegoIlum@i_hora_ilum_tr,?_sprintf+4
  2613  00FD12  6A12               	clrf	?_sprintf+5,c
  2614  00FD14  EC95  F076         	call	_sprintf	;wreg free
  2615                           
  2616                           ;main.c: 460: Lcd_Out(4, 5, buffer1);
  2617  00FD18  0E05               	movlw	5
  2618  00FD1A  6E40               	movwf	Lcd_Out@x,c
  2619  00FD1C  0ED0               	movlw	low _buffer1
  2620  00FD1E  6E41               	movwf	Lcd_Out@buffer,c
  2621  00FD20  0E00               	movlw	high _buffer1
  2622  00FD22  6E42               	movwf	Lcd_Out@buffer+1,c
  2623  00FD24  0E04               	movlw	4
  2624  00FD26  ECE5  F06F         	call	_Lcd_Out
  2625                           
  2626                           ;main.c: 461: Lcd_Out(4, 5, "" );
  2627  00FD2A  0E05               	movlw	5
  2628  00FD2C  6E40               	movwf	Lcd_Out@x,c
  2629  00FD2E  0EEB               	movlw	low (STR_4+20)
  2630  00FD30  6E41               	movwf	Lcd_Out@buffer,c
  2631  00FD32  0EFE               	movlw	high (STR_4+20)
  2632  00FD34  6E42               	movwf	Lcd_Out@buffer+1,c
  2633  00FD36  0E04               	movlw	4
  2634  00FD38  ECE5  F06F         	call	_Lcd_Out
  2635                           
  2636                           ;main.c: 462: }else if(posicion == 10){
  2637  00FD3C  D07E               	goto	l3562
  2638  00FD3E                     l3526:
  2639  00FD3E  0E0A               	movlw	10
  2640  00FD40  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2641  00FD42  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2642  00FD44  A4D8               	btfss	status,2,c
  2643  00FD46  D025               	goto	l3538
  2644                           
  2645                           ;main.c: 463: if(i_min_ilum_tr>0){i_min_ilum_tr--;}
  2646  00FD48  5048               	movf	V_ProgRiegoIlum@i_min_ilum_tr,w,c
  2647  00FD4A  B4D8               	btfsc	status,2,c
  2648  00FD4C  D002               	goto	l3532
  2649  00FD4E  0648               	decf	V_ProgRiegoIlum@i_min_ilum_tr,f,c
  2650  00FD50  D000               	goto	l3532
  2651  00FD52                     l3532:
  2652                           
  2653                           ;main.c: 464: sprintf(buffer1,"%02u",i_min_ilum_tr);
  2654  00FD52  0ED0               	movlw	low _buffer1
  2655  00FD54  6E0D               	movwf	sprintf@sp,c
  2656  00FD56  0E00               	movlw	high _buffer1
  2657  00FD58  6E0E               	movwf	sprintf@sp+1,c
  2658  00FD5A  0EC2               	movlw	low (STR_34+10)
  2659  00FD5C  6E0F               	movwf	sprintf@f,c
  2660  00FD5E  0EFF               	movlw	high (STR_34+10)
  2661  00FD60  6E10               	movwf	sprintf@f+1,c
  2662  00FD62  C048  F011         	movff	V_ProgRiegoIlum@i_min_ilum_tr,?_sprintf+4
  2663  00FD66  6A12               	clrf	?_sprintf+5,c
  2664  00FD68  EC95  F076         	call	_sprintf	;wreg free
  2665                           
  2666                           ;main.c: 465: Lcd_Out(4, 8, buffer1);
  2667  00FD6C  0E08               	movlw	8
  2668  00FD6E  6E40               	movwf	Lcd_Out@x,c
  2669  00FD70  0ED0               	movlw	low _buffer1
  2670  00FD72  6E41               	movwf	Lcd_Out@buffer,c
  2671  00FD74  0E00               	movlw	high _buffer1
  2672  00FD76  6E42               	movwf	Lcd_Out@buffer+1,c
  2673  00FD78  0E04               	movlw	4
  2674  00FD7A  ECE5  F06F         	call	_Lcd_Out
  2675                           
  2676                           ;main.c: 466: Lcd_Out(4, 8, "" );
  2677  00FD7E  0E08               	movlw	8
  2678  00FD80  6E40               	movwf	Lcd_Out@x,c
  2679  00FD82  0EEB               	movlw	low (STR_4+20)
  2680  00FD84  6E41               	movwf	Lcd_Out@buffer,c
  2681  00FD86  0EFE               	movlw	high (STR_4+20)
  2682  00FD88  6E42               	movwf	Lcd_Out@buffer+1,c
  2683  00FD8A  0E04               	movlw	4
  2684  00FD8C  ECE5  F06F         	call	_Lcd_Out
  2685                           
  2686                           ;main.c: 467: }else if(posicion == 12){
  2687  00FD90  D054               	goto	l3562
  2688  00FD92                     l3538:
  2689  00FD92  0E0C               	movlw	12
  2690  00FD94  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2691  00FD96  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2692  00FD98  A4D8               	btfss	status,2,c
  2693  00FD9A  D025               	goto	l3550
  2694                           
  2695                           ;main.c: 468: if(f_hora_ilum_tr>0){f_hora_ilum_tr--;}
  2696  00FD9C  5049               	movf	V_ProgRiegoIlum@f_hora_ilum_tr,w,c
  2697  00FD9E  B4D8               	btfsc	status,2,c
  2698  00FDA0  D002               	goto	l3544
  2699  00FDA2  0649               	decf	V_ProgRiegoIlum@f_hora_ilum_tr,f,c
  2700  00FDA4  D000               	goto	l3544
  2701  00FDA6                     l3544:
  2702                           
  2703                           ;main.c: 469: sprintf(buffer1,"%02u",f_hora_ilum_tr);
  2704  00FDA6  0ED0               	movlw	low _buffer1
  2705  00FDA8  6E0D               	movwf	sprintf@sp,c
  2706  00FDAA  0E00               	movlw	high _buffer1
  2707  00FDAC  6E0E               	movwf	sprintf@sp+1,c
  2708  00FDAE  0EC2               	movlw	low (STR_34+10)
  2709  00FDB0  6E0F               	movwf	sprintf@f,c
  2710  00FDB2  0EFF               	movlw	high (STR_34+10)
  2711  00FDB4  6E10               	movwf	sprintf@f+1,c
  2712  00FDB6  C049  F011         	movff	V_ProgRiegoIlum@f_hora_ilum_tr,?_sprintf+4
  2713  00FDBA  6A12               	clrf	?_sprintf+5,c
  2714  00FDBC  EC95  F076         	call	_sprintf	;wreg free
  2715                           
  2716                           ;main.c: 470: Lcd_Out(4, 15, buffer1);
  2717  00FDC0  0E0F               	movlw	15
  2718  00FDC2  6E40               	movwf	Lcd_Out@x,c
  2719  00FDC4  0ED0               	movlw	low _buffer1
  2720  00FDC6  6E41               	movwf	Lcd_Out@buffer,c
  2721  00FDC8  0E00               	movlw	high _buffer1
  2722  00FDCA  6E42               	movwf	Lcd_Out@buffer+1,c
  2723  00FDCC  0E04               	movlw	4
  2724  00FDCE  ECE5  F06F         	call	_Lcd_Out
  2725                           
  2726                           ;main.c: 471: Lcd_Out(4, 15, "" );
  2727  00FDD2  0E0F               	movlw	15
  2728  00FDD4  6E40               	movwf	Lcd_Out@x,c
  2729  00FDD6  0EEB               	movlw	low (STR_4+20)
  2730  00FDD8  6E41               	movwf	Lcd_Out@buffer,c
  2731  00FDDA  0EFE               	movlw	high (STR_4+20)
  2732  00FDDC  6E42               	movwf	Lcd_Out@buffer+1,c
  2733  00FDDE  0E04               	movlw	4
  2734  00FDE0  ECE5  F06F         	call	_Lcd_Out
  2735                           
  2736                           ;main.c: 472: }else if(posicion == 14){
  2737  00FDE4  D02A               	goto	l3562
  2738  00FDE6                     l3550:
  2739  00FDE6  0E0E               	movlw	14
  2740  00FDE8  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2741  00FDEA  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2742  00FDEC  A4D8               	btfss	status,2,c
  2743  00FDEE  D025               	goto	l3562
  2744                           
  2745                           ;main.c: 473: if(f_min_ilum_tr>0){f_min_ilum_tr--;}
  2746  00FDF0  504A               	movf	V_ProgRiegoIlum@f_min_ilum_tr,w,c
  2747  00FDF2  B4D8               	btfsc	status,2,c
  2748  00FDF4  D002               	goto	l3556
  2749  00FDF6  064A               	decf	V_ProgRiegoIlum@f_min_ilum_tr,f,c
  2750  00FDF8  D000               	goto	l3556
  2751  00FDFA                     l3556:
  2752                           
  2753                           ;main.c: 474: sprintf(buffer1,"%02u",f_min_ilum_tr);
  2754  00FDFA  0ED0               	movlw	low _buffer1
  2755  00FDFC  6E0D               	movwf	sprintf@sp,c
  2756  00FDFE  0E00               	movlw	high _buffer1
  2757  00FE00  6E0E               	movwf	sprintf@sp+1,c
  2758  00FE02  0EC2               	movlw	low (STR_34+10)
  2759  00FE04  6E0F               	movwf	sprintf@f,c
  2760  00FE06  0EFF               	movlw	high (STR_34+10)
  2761  00FE08  6E10               	movwf	sprintf@f+1,c
  2762  00FE0A  C04A  F011         	movff	V_ProgRiegoIlum@f_min_ilum_tr,?_sprintf+4
  2763  00FE0E  6A12               	clrf	?_sprintf+5,c
  2764  00FE10  EC95  F076         	call	_sprintf	;wreg free
  2765                           
  2766                           ;main.c: 475: Lcd_Out(4, 18, buffer1);
  2767  00FE14  0E12               	movlw	18
  2768  00FE16  6E40               	movwf	Lcd_Out@x,c
  2769  00FE18  0ED0               	movlw	low _buffer1
  2770  00FE1A  6E41               	movwf	Lcd_Out@buffer,c
  2771  00FE1C  0E00               	movlw	high _buffer1
  2772  00FE1E  6E42               	movwf	Lcd_Out@buffer+1,c
  2773  00FE20  0E04               	movlw	4
  2774  00FE22  ECE5  F06F         	call	_Lcd_Out
  2775                           
  2776                           ;main.c: 476: Lcd_Out(4, 18, "" );
  2777  00FE26  0E12               	movlw	18
  2778  00FE28  6E40               	movwf	Lcd_Out@x,c
  2779  00FE2A  0EEB               	movlw	low (STR_4+20)
  2780  00FE2C  6E41               	movwf	Lcd_Out@buffer,c
  2781  00FE2E  0EFE               	movlw	high (STR_4+20)
  2782  00FE30  6E42               	movwf	Lcd_Out@buffer+1,c
  2783  00FE32  0E04               	movlw	4
  2784  00FE34  ECE5  F06F         	call	_Lcd_Out
  2785  00FE38  D000               	goto	l3562
  2786  00FE3A                     l3562:
  2787                           
  2788                           ;main.c: 477: }
  2789                           ;main.c: 478: }
  2790                           ;main.c: 481: if(Sw_Center = PORTAbits.RA5 == 0){
  2791  00FE3A  BA80               	btfsc	3968,5,c	;volatile
  2792  00FE3C  D002               	goto	u3430
  2793  00FE3E  0E01               	movlw	1
  2794  00FE40  D001               	goto	u3440
  2795  00FE42                     u3430:
  2796  00FE42  0E00               	movlw	0
  2797  00FE44                     u3440:
  2798  00FE44  0100               	movlb	0	; () banked
  2799  00FE46  6FCA               	movwf	_Sw_Center& (0+255),b
  2800  00FE48  0100               	movlb	0	; () banked
  2801  00FE4A  51CA               	movf	_Sw_Center& (0+255),w,b
  2802  00FE4C  B4D8               	btfsc	status,2,c
  2803  00FE4E  D013               	goto	l3568
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;main.c: 482: inicio_hora_ilum = i_hora_ilum_tr;
  2807  00FE50  C047  F058         	movff	V_ProgRiegoIlum@i_hora_ilum_tr,_inicio_hora_ilum
  2808                           
  2809                           ;main.c: 483: inicio_min_ilum = i_min_ilum_tr;
  2810  00FE54  C048  F05A         	movff	V_ProgRiegoIlum@i_min_ilum_tr,_inicio_min_ilum
  2811                           
  2812                           ;main.c: 484: fin_hora_ilum = f_hora_ilum_tr;
  2813  00FE58  C049  F054         	movff	V_ProgRiegoIlum@f_hora_ilum_tr,_fin_hora_ilum
  2814                           
  2815                           ;main.c: 485: fin_min_ilum = f_min_ilum_tr;
  2816  00FE5C  C04A  F056         	movff	V_ProgRiegoIlum@f_min_ilum_tr,_fin_min_ilum
  2817                           
  2818                           ;main.c: 486: inicio_hora_riego = i_hora_riego_tr;
  2819  00FE60  C04B  F059         	movff	V_ProgRiegoIlum@i_hora_riego_tr,_inicio_hora_riego
  2820                           
  2821                           ;main.c: 487: inicio_min_riego = i_min_riego_tr;
  2822  00FE64  C04C  F05B         	movff	V_ProgRiegoIlum@i_min_riego_tr,_inicio_min_riego
  2823                           
  2824                           ;main.c: 488: fin_hora_riego = f_hora_riego_tr;
  2825  00FE68  C04D  F055         	movff	V_ProgRiegoIlum@f_hora_riego_tr,_fin_hora_riego
  2826                           
  2827                           ;main.c: 489: fin_min_riego = f_min_riego_tr;
  2828  00FE6C  C04E  F057         	movff	V_ProgRiegoIlum@f_min_riego_tr,_fin_min_riego
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;main.c: 490: Write_RTC();
  2832  00FE70  ECDD  F074         	call	_Write_RTC	;wreg free
  2833                           
  2834                           ;main.c: 491: break;
  2835  00FE74  D00B               	goto	l3572
  2836  00FE76                     l3568:
  2837  00FE76  0100               	movlb	0	; () banked
  2838  00FE78  4BC4               	infsnz	_i& (0+255),f,b
  2839  00FE7A  2BC5               	incf	(_i+1)& (0+255),f,b
  2840                           
  2841                           ; BSR set to: 0
  2842  00FE7C  0100               	movlb	0	; () banked
  2843  00FE7E  BFC5               	btfsc	(_i+1)& (0+255),7,b
  2844  00FE80  D494               	goto	l3340
  2845  00FE82  0100               	movlb	0	; () banked
  2846  00FE84  51C5               	movf	(_i+1)& (0+255),w,b
  2847  00FE86  E102               	bnz	l3572
  2848  00FE88  D489               	goto	L1
  2849  00FE8A  D000               	goto	l3572
  2850  00FE8C                     l3572:
  2851                           
  2852                           ;main.c: 492: }
  2853                           ;main.c: 493: }
  2854                           ;main.c: 494: Lcd_Cmd(12);
  2855  00FE8C  0E0C               	movlw	12
  2856  00FE8E  EC7B  F072         	call	_Lcd_Cmd
  2857  00FE92  0012               	return		;funcret
  2858  00FE94                     __end_of_V_ProgRiegoIlum:
  2859                           	opt stack 0
  2860                           tblptru	equ	0xFF8
  2861                           tblptrh	equ	0xFF7
  2862                           tblptrl	equ	0xFF6
  2863                           tablat	equ	0xFF5
  2864                           postinc0	equ	0xFEE
  2865                           wreg	equ	0xFE8
  2866                           postdec1	equ	0xFE5
  2867                           fsr1l	equ	0xFE1
  2868                           indf2	equ	0xFDF
  2869                           fsr2h	equ	0xFDA
  2870                           fsr2l	equ	0xFD9
  2871                           status	equ	0xFD8
  2872                           
  2873 ;; *************** function _V_ProgReloj *****************
  2874 ;; Defined at:
  2875 ;;		line 233 in file "../main.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  posicion        2   76[COMRAM] int 
  2880 ;;  minuto_tr       1   75[COMRAM] unsigned char 
  2881 ;;  hora_tr         1   74[COMRAM] unsigned char 
  2882 ;;  anio_tr         1   73[COMRAM] unsigned char 
  2883 ;;  mes_tr          1   72[COMRAM] unsigned char 
  2884 ;;  dia_tr          1   71[COMRAM] unsigned char 
  2885 ;;  diasem_tr       1   70[COMRAM] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;		None               void
  2888 ;; Registers used:
  2889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2896 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2898 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2899 ;;Total ram usage:       10 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    3
  2902 ;; This function calls:
  2903 ;;		_Convert_diasem
  2904 ;;		_Lcd_Cmd
  2905 ;;		_Lcd_Out
  2906 ;;		_Write_RTC
  2907 ;;		_sprintf
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text2
  2914  00F064                     __ptext2:
  2915                           	opt stack 0
  2916  00F064                     _V_ProgReloj:
  2917                           	opt stack 27
  2918                           
  2919                           ;main.c: 234: Lcd_Out(1, 0, "Program del reloj");
  2920                           
  2921                           ;incstack = 0
  2922  00F064  0E00               	movlw	0
  2923  00F066  6E40               	movwf	Lcd_Out@x,c
  2924  00F068  0EA6               	movlw	low STR_7
  2925  00F06A  6E41               	movwf	Lcd_Out@buffer,c
  2926  00F06C  0EFF               	movlw	high STR_7
  2927  00F06E  6E42               	movwf	Lcd_Out@buffer+1,c
  2928  00F070  0E01               	movlw	1
  2929  00F072  ECE5  F06F         	call	_Lcd_Out
  2930                           
  2931                           ;main.c: 236: char diasem_tr = diasem;
  2932  00F076  C0C2  F047         	movff	_diasem,V_ProgReloj@diasem_tr
  2933                           
  2934                           ;main.c: 237: char dia_tr = dia;
  2935  00F07A  C09E  F048         	movff	_dia,V_ProgReloj@dia_tr
  2936                           
  2937                           ;main.c: 238: char mes_tr = mes;
  2938  00F07E  C0A2  F049         	movff	_mes,V_ProgReloj@mes_tr
  2939                           
  2940                           ;main.c: 239: char anio_tr = anio;
  2941  00F082  C052  F04A         	movff	_anio,V_ProgReloj@anio_tr
  2942                           
  2943                           ;main.c: 240: char hora_tr = hora;
  2944  00F086  C0A0  F04B         	movff	_hora,V_ProgReloj@hora_tr
  2945                           
  2946                           ;main.c: 241: char minuto_tr = minuto;
  2947  00F08A  C0A4  F04C         	movff	_minuto,V_ProgReloj@minuto_tr
  2948                           
  2949                           ;main.c: 242: int posicion = 0;
  2950  00F08E  0E00               	movlw	0
  2951  00F090  6E4E               	movwf	V_ProgReloj@posicion+1,c
  2952  00F092  0E00               	movlw	0
  2953  00F094  6E4D               	movwf	V_ProgReloj@posicion,c
  2954                           
  2955                           ;main.c: 243: Lcd_Cmd(14);
  2956  00F096  0E0E               	movlw	14
  2957  00F098  EC7B  F072         	call	_Lcd_Cmd
  2958                           
  2959                           ;main.c: 244: Lcd_Out(2, 0, "" );
  2960  00F09C  0E00               	movlw	0
  2961  00F09E  6E40               	movwf	Lcd_Out@x,c
  2962  00F0A0  0EEB               	movlw	low (STR_4+20)
  2963  00F0A2  6E41               	movwf	Lcd_Out@buffer,c
  2964  00F0A4  0EFE               	movlw	high (STR_4+20)
  2965  00F0A6  6E42               	movwf	Lcd_Out@buffer+1,c
  2966  00F0A8  0E02               	movlw	2
  2967  00F0AA  ECE5  F06F         	call	_Lcd_Out
  2968                           
  2969                           ;main.c: 246: for(i=0 ;i<30;i++){
  2970  00F0AE  0E00               	movlw	0
  2971  00F0B0  0100               	movlb	0	; () banked
  2972  00F0B2  6FC5               	movwf	(_i+1)& (0+255),b
  2973  00F0B4  0E00               	movlw	0
  2974  00F0B6  6FC4               	movwf	_i& (0+255),b
  2975                           
  2976                           ; BSR set to: 0
  2977  00F0B8  0100               	movlb	0	; () banked
  2978  00F0BA  BFC5               	btfsc	(_i+1)& (0+255),7,b
  2979  00F0BC  D00A               	goto	l3116
  2980  00F0BE  0100               	movlb	0	; () banked
  2981  00F0C0  51C5               	movf	(_i+1)& (0+255),w,b
  2982  00F0C2  E106               	bnz	u2530
  2983  00F0C4  0E1E               	movlw	30
  2984  00F0C6  0100               	movlb	0	; () banked
  2985  00F0C8  5DC4               	subwf	_i& (0+255),w,b
  2986  00F0CA  B0D8               	btfsc	status,0,c
  2987  00F0CC  D2C2               	goto	l3296
  2988  00F0CE  D001               	goto	l3116
  2989  00F0D0                     u2530:
  2990                           
  2991                           ; BSR set to: 0
  2992  00F0D0  D2C0               	goto	l3296
  2993  00F0D2                     l3116:
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;main.c: 247: _delay((unsigned long)((90)*(8000000/4000.0)));
  2997  00F0D2  0EEA               	movlw	234
  2998  00F0D4  6E45               	movwf	??_V_ProgReloj& (0+255),c
  2999  00F0D6  0EC3               	movlw	195
  3000  00F0D8                     u3747:
  3001  00F0D8  2EE8               	decfsz	wreg,f,c
  3002  00F0DA  D7FE               	goto	u3747
  3003  00F0DC  2E45               	decfsz	??_V_ProgReloj& (0+255),f,c
  3004  00F0DE  D7FC               	goto	u3747
  3005  00F0E0  F000               	nop	
  3006                           
  3007                           ;main.c: 249: if(Sw_Up = PORTAbits.RA3 == 0){
  3008  00F0E2  B680               	btfsc	3968,3,c	;volatile
  3009  00F0E4  D002               	goto	u2540
  3010  00F0E6  0E01               	movlw	1
  3011  00F0E8  D001               	goto	u2550
  3012  00F0EA                     u2540:
  3013  00F0EA  0E00               	movlw	0
  3014  00F0EC                     u2550:
  3015  00F0EC  0100               	movlb	0	; () banked
  3016  00F0EE  6FCE               	movwf	_Sw_Up& (0+255),b
  3017  00F0F0  0100               	movlb	0	; () banked
  3018  00F0F2  51CE               	movf	_Sw_Up& (0+255),w,b
  3019  00F0F4  B4D8               	btfsc	status,2,c
  3020  00F0F6  D0F8               	goto	l3192
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;main.c: 250: i=0;
  3024  00F0F8  0E00               	movlw	0
  3025  00F0FA  0100               	movlb	0	; () banked
  3026  00F0FC  6FC5               	movwf	(_i+1)& (0+255),b
  3027  00F0FE  0E00               	movlw	0
  3028  00F100  6FC4               	movwf	_i& (0+255),b
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;main.c: 251: if(posicion == 0){
  3032  00F102  504D               	movf	V_ProgReloj@posicion,w,c
  3033  00F104  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3034  00F106  A4D8               	btfss	status,2,c
  3035  00F108  D01D               	goto	l3132
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;main.c: 252: if(diasem_tr<6){diasem_tr++;}
  3039  00F10A  0E06               	movlw	6
  3040  00F10C  6047               	cpfslt	V_ProgReloj@diasem_tr,c
  3041  00F10E  D002               	goto	l3128
  3042                           
  3043                           ; BSR set to: 0
  3044  00F110  2A47               	incf	V_ProgReloj@diasem_tr,f,c
  3045  00F112  D000               	goto	l3128
  3046  00F114                     l3128:
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;main.c: 253: Lcd_Out(2, 0, Convert_diasem(diasem_tr) );
  3050  00F114  0E00               	movlw	0
  3051  00F116  6E40               	movwf	Lcd_Out@x,c
  3052  00F118  C047  F028         	movff	V_ProgReloj@diasem_tr,Convert_diasem@dia
  3053  00F11C  6A29               	clrf	Convert_diasem@dia+1,c
  3054  00F11E  ECEC  F071         	call	_Convert_diasem	;wreg free
  3055  00F122  C028  F041         	movff	?_Convert_diasem,Lcd_Out@buffer
  3056  00F126  C029  F042         	movff	?_Convert_diasem+1,Lcd_Out@buffer+1
  3057  00F12A  0E02               	movlw	2
  3058  00F12C  ECE5  F06F         	call	_Lcd_Out
  3059                           
  3060                           ;main.c: 254: Lcd_Out(2, 0, "" );
  3061  00F130  0E00               	movlw	0
  3062  00F132  6E40               	movwf	Lcd_Out@x,c
  3063  00F134  0EEB               	movlw	low (STR_4+20)
  3064  00F136  6E41               	movwf	Lcd_Out@buffer,c
  3065  00F138  0EFE               	movlw	high (STR_4+20)
  3066  00F13A  6E42               	movwf	Lcd_Out@buffer+1,c
  3067  00F13C  0E02               	movlw	2
  3068  00F13E  ECE5  F06F         	call	_Lcd_Out
  3069                           
  3070                           ;main.c: 255: }else if(posicion == 2){
  3071  00F142  D0D2               	goto	l3192
  3072  00F144                     l3132:
  3073  00F144  0E02               	movlw	2
  3074  00F146  184D               	xorwf	V_ProgReloj@posicion,w,c
  3075  00F148  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3076  00F14A  A4D8               	btfss	status,2,c
  3077  00F14C  D025               	goto	l3144
  3078                           
  3079                           ;main.c: 256: if(dia_tr<31){dia_tr++;}
  3080  00F14E  0E1F               	movlw	31
  3081  00F150  6048               	cpfslt	V_ProgReloj@dia_tr,c
  3082  00F152  D002               	goto	l3138
  3083  00F154  2A48               	incf	V_ProgReloj@dia_tr,f,c
  3084  00F156  D000               	goto	l3138
  3085  00F158                     l3138:
  3086                           
  3087                           ;main.c: 257: sprintf(buffer1,"%02u",dia_tr);
  3088  00F158  0ED0               	movlw	low _buffer1
  3089  00F15A  6E0D               	movwf	sprintf@sp,c
  3090  00F15C  0E00               	movlw	high _buffer1
  3091  00F15E  6E0E               	movwf	sprintf@sp+1,c
  3092  00F160  0EC2               	movlw	low (STR_34+10)
  3093  00F162  6E0F               	movwf	sprintf@f,c
  3094  00F164  0EFF               	movlw	high (STR_34+10)
  3095  00F166  6E10               	movwf	sprintf@f+1,c
  3096  00F168  C048  F011         	movff	V_ProgReloj@dia_tr,?_sprintf+4
  3097  00F16C  6A12               	clrf	?_sprintf+5,c
  3098  00F16E  EC95  F076         	call	_sprintf	;wreg free
  3099                           
  3100                           ;main.c: 258: Lcd_Out(3, 0, buffer1);
  3101  00F172  0E00               	movlw	0
  3102  00F174  6E40               	movwf	Lcd_Out@x,c
  3103  00F176  0ED0               	movlw	low _buffer1
  3104  00F178  6E41               	movwf	Lcd_Out@buffer,c
  3105  00F17A  0E00               	movlw	high _buffer1
  3106  00F17C  6E42               	movwf	Lcd_Out@buffer+1,c
  3107  00F17E  0E03               	movlw	3
  3108  00F180  ECE5  F06F         	call	_Lcd_Out
  3109                           
  3110                           ;main.c: 259: Lcd_Out(3, 0, "" );
  3111  00F184  0E00               	movlw	0
  3112  00F186  6E40               	movwf	Lcd_Out@x,c
  3113  00F188  0EEB               	movlw	low (STR_4+20)
  3114  00F18A  6E41               	movwf	Lcd_Out@buffer,c
  3115  00F18C  0EFE               	movlw	high (STR_4+20)
  3116  00F18E  6E42               	movwf	Lcd_Out@buffer+1,c
  3117  00F190  0E03               	movlw	3
  3118  00F192  ECE5  F06F         	call	_Lcd_Out
  3119                           
  3120                           ;main.c: 260: }else if(posicion == 4){
  3121  00F196  D0A8               	goto	l3192
  3122  00F198                     l3144:
  3123  00F198  0E04               	movlw	4
  3124  00F19A  184D               	xorwf	V_ProgReloj@posicion,w,c
  3125  00F19C  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3126  00F19E  A4D8               	btfss	status,2,c
  3127  00F1A0  D025               	goto	l3156
  3128                           
  3129                           ;main.c: 261: if(mes_tr<12){mes_tr++;}
  3130  00F1A2  0E0C               	movlw	12
  3131  00F1A4  6049               	cpfslt	V_ProgReloj@mes_tr,c
  3132  00F1A6  D002               	goto	l3150
  3133  00F1A8  2A49               	incf	V_ProgReloj@mes_tr,f,c
  3134  00F1AA  D000               	goto	l3150
  3135  00F1AC                     l3150:
  3136                           
  3137                           ;main.c: 262: sprintf(buffer1,"%02u",mes_tr);
  3138  00F1AC  0ED0               	movlw	low _buffer1
  3139  00F1AE  6E0D               	movwf	sprintf@sp,c
  3140  00F1B0  0E00               	movlw	high _buffer1
  3141  00F1B2  6E0E               	movwf	sprintf@sp+1,c
  3142  00F1B4  0EC2               	movlw	low (STR_34+10)
  3143  00F1B6  6E0F               	movwf	sprintf@f,c
  3144  00F1B8  0EFF               	movlw	high (STR_34+10)
  3145  00F1BA  6E10               	movwf	sprintf@f+1,c
  3146  00F1BC  C049  F011         	movff	V_ProgReloj@mes_tr,?_sprintf+4
  3147  00F1C0  6A12               	clrf	?_sprintf+5,c
  3148  00F1C2  EC95  F076         	call	_sprintf	;wreg free
  3149                           
  3150                           ;main.c: 263: Lcd_Out(3, 3, buffer1);
  3151  00F1C6  0E03               	movlw	3
  3152  00F1C8  6E40               	movwf	Lcd_Out@x,c
  3153  00F1CA  0ED0               	movlw	low _buffer1
  3154  00F1CC  6E41               	movwf	Lcd_Out@buffer,c
  3155  00F1CE  0E00               	movlw	high _buffer1
  3156  00F1D0  6E42               	movwf	Lcd_Out@buffer+1,c
  3157  00F1D2  0E03               	movlw	3
  3158  00F1D4  ECE5  F06F         	call	_Lcd_Out
  3159                           
  3160                           ;main.c: 264: Lcd_Out(3, 3, "" );
  3161  00F1D8  0E03               	movlw	3
  3162  00F1DA  6E40               	movwf	Lcd_Out@x,c
  3163  00F1DC  0EEB               	movlw	low (STR_4+20)
  3164  00F1DE  6E41               	movwf	Lcd_Out@buffer,c
  3165  00F1E0  0EFE               	movlw	high (STR_4+20)
  3166  00F1E2  6E42               	movwf	Lcd_Out@buffer+1,c
  3167  00F1E4  0E03               	movlw	3
  3168  00F1E6  ECE5  F06F         	call	_Lcd_Out
  3169                           
  3170                           ;main.c: 265: }else if(posicion == 6){
  3171  00F1EA  D07E               	goto	l3192
  3172  00F1EC                     l3156:
  3173  00F1EC  0E06               	movlw	6
  3174  00F1EE  184D               	xorwf	V_ProgReloj@posicion,w,c
  3175  00F1F0  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3176  00F1F2  A4D8               	btfss	status,2,c
  3177  00F1F4  D025               	goto	l3168
  3178                           
  3179                           ;main.c: 266: if(anio_tr<99){anio_tr++;}
  3180  00F1F6  0E63               	movlw	99
  3181  00F1F8  604A               	cpfslt	V_ProgReloj@anio_tr,c
  3182  00F1FA  D002               	goto	l3162
  3183  00F1FC  2A4A               	incf	V_ProgReloj@anio_tr,f,c
  3184  00F1FE  D000               	goto	l3162
  3185  00F200                     l3162:
  3186                           
  3187                           ;main.c: 267: sprintf(buffer1,"%02u",anio_tr);
  3188  00F200  0ED0               	movlw	low _buffer1
  3189  00F202  6E0D               	movwf	sprintf@sp,c
  3190  00F204  0E00               	movlw	high _buffer1
  3191  00F206  6E0E               	movwf	sprintf@sp+1,c
  3192  00F208  0EC2               	movlw	low (STR_34+10)
  3193  00F20A  6E0F               	movwf	sprintf@f,c
  3194  00F20C  0EFF               	movlw	high (STR_34+10)
  3195  00F20E  6E10               	movwf	sprintf@f+1,c
  3196  00F210  C04A  F011         	movff	V_ProgReloj@anio_tr,?_sprintf+4
  3197  00F214  6A12               	clrf	?_sprintf+5,c
  3198  00F216  EC95  F076         	call	_sprintf	;wreg free
  3199                           
  3200                           ;main.c: 268: Lcd_Out(3, 6, buffer1);
  3201  00F21A  0E06               	movlw	6
  3202  00F21C  6E40               	movwf	Lcd_Out@x,c
  3203  00F21E  0ED0               	movlw	low _buffer1
  3204  00F220  6E41               	movwf	Lcd_Out@buffer,c
  3205  00F222  0E00               	movlw	high _buffer1
  3206  00F224  6E42               	movwf	Lcd_Out@buffer+1,c
  3207  00F226  0E03               	movlw	3
  3208  00F228  ECE5  F06F         	call	_Lcd_Out
  3209                           
  3210                           ;main.c: 269: Lcd_Out(3, 6, "" );
  3211  00F22C  0E06               	movlw	6
  3212  00F22E  6E40               	movwf	Lcd_Out@x,c
  3213  00F230  0EEB               	movlw	low (STR_4+20)
  3214  00F232  6E41               	movwf	Lcd_Out@buffer,c
  3215  00F234  0EFE               	movlw	high (STR_4+20)
  3216  00F236  6E42               	movwf	Lcd_Out@buffer+1,c
  3217  00F238  0E03               	movlw	3
  3218  00F23A  ECE5  F06F         	call	_Lcd_Out
  3219                           
  3220                           ;main.c: 270: }else if(posicion == 8){
  3221  00F23E  D054               	goto	l3192
  3222  00F240                     l3168:
  3223  00F240  0E08               	movlw	8
  3224  00F242  184D               	xorwf	V_ProgReloj@posicion,w,c
  3225  00F244  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3226  00F246  A4D8               	btfss	status,2,c
  3227  00F248  D025               	goto	l3180
  3228                           
  3229                           ;main.c: 271: if(hora_tr<23){hora_tr++;}
  3230  00F24A  0E17               	movlw	23
  3231  00F24C  604B               	cpfslt	V_ProgReloj@hora_tr,c
  3232  00F24E  D002               	goto	l3174
  3233  00F250  2A4B               	incf	V_ProgReloj@hora_tr,f,c
  3234  00F252  D000               	goto	l3174
  3235  00F254                     l3174:
  3236                           
  3237                           ;main.c: 272: sprintf(buffer1,"%02u",hora_tr);
  3238  00F254  0ED0               	movlw	low _buffer1
  3239  00F256  6E0D               	movwf	sprintf@sp,c
  3240  00F258  0E00               	movlw	high _buffer1
  3241  00F25A  6E0E               	movwf	sprintf@sp+1,c
  3242  00F25C  0EC2               	movlw	low (STR_34+10)
  3243  00F25E  6E0F               	movwf	sprintf@f,c
  3244  00F260  0EFF               	movlw	high (STR_34+10)
  3245  00F262  6E10               	movwf	sprintf@f+1,c
  3246  00F264  C04B  F011         	movff	V_ProgReloj@hora_tr,?_sprintf+4
  3247  00F268  6A12               	clrf	?_sprintf+5,c
  3248  00F26A  EC95  F076         	call	_sprintf	;wreg free
  3249                           
  3250                           ;main.c: 273: Lcd_Out(4, 0, buffer1);
  3251  00F26E  0E00               	movlw	0
  3252  00F270  6E40               	movwf	Lcd_Out@x,c
  3253  00F272  0ED0               	movlw	low _buffer1
  3254  00F274  6E41               	movwf	Lcd_Out@buffer,c
  3255  00F276  0E00               	movlw	high _buffer1
  3256  00F278  6E42               	movwf	Lcd_Out@buffer+1,c
  3257  00F27A  0E04               	movlw	4
  3258  00F27C  ECE5  F06F         	call	_Lcd_Out
  3259                           
  3260                           ;main.c: 274: Lcd_Out(4, 0, "" );
  3261  00F280  0E00               	movlw	0
  3262  00F282  6E40               	movwf	Lcd_Out@x,c
  3263  00F284  0EEB               	movlw	low (STR_4+20)
  3264  00F286  6E41               	movwf	Lcd_Out@buffer,c
  3265  00F288  0EFE               	movlw	high (STR_4+20)
  3266  00F28A  6E42               	movwf	Lcd_Out@buffer+1,c
  3267  00F28C  0E04               	movlw	4
  3268  00F28E  ECE5  F06F         	call	_Lcd_Out
  3269                           
  3270                           ;main.c: 275: }else if(posicion == 10){
  3271  00F292  D02A               	goto	l3192
  3272  00F294                     l3180:
  3273  00F294  0E0A               	movlw	10
  3274  00F296  184D               	xorwf	V_ProgReloj@posicion,w,c
  3275  00F298  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3276  00F29A  A4D8               	btfss	status,2,c
  3277  00F29C  D025               	goto	l3192
  3278                           
  3279                           ;main.c: 276: if(minuto_tr<59){minuto_tr++;}
  3280  00F29E  0E3B               	movlw	59
  3281  00F2A0  604C               	cpfslt	V_ProgReloj@minuto_tr,c
  3282  00F2A2  D002               	goto	l3186
  3283  00F2A4  2A4C               	incf	V_ProgReloj@minuto_tr,f,c
  3284  00F2A6  D000               	goto	l3186
  3285  00F2A8                     l3186:
  3286                           
  3287                           ;main.c: 277: sprintf(buffer1,"%02u",minuto_tr);
  3288  00F2A8  0ED0               	movlw	low _buffer1
  3289  00F2AA  6E0D               	movwf	sprintf@sp,c
  3290  00F2AC  0E00               	movlw	high _buffer1
  3291  00F2AE  6E0E               	movwf	sprintf@sp+1,c
  3292  00F2B0  0EC2               	movlw	low (STR_34+10)
  3293  00F2B2  6E0F               	movwf	sprintf@f,c
  3294  00F2B4  0EFF               	movlw	high (STR_34+10)
  3295  00F2B6  6E10               	movwf	sprintf@f+1,c
  3296  00F2B8  C04C  F011         	movff	V_ProgReloj@minuto_tr,?_sprintf+4
  3297  00F2BC  6A12               	clrf	?_sprintf+5,c
  3298  00F2BE  EC95  F076         	call	_sprintf	;wreg free
  3299                           
  3300                           ;main.c: 278: Lcd_Out(4, 3, buffer1);
  3301  00F2C2  0E03               	movlw	3
  3302  00F2C4  6E40               	movwf	Lcd_Out@x,c
  3303  00F2C6  0ED0               	movlw	low _buffer1
  3304  00F2C8  6E41               	movwf	Lcd_Out@buffer,c
  3305  00F2CA  0E00               	movlw	high _buffer1
  3306  00F2CC  6E42               	movwf	Lcd_Out@buffer+1,c
  3307  00F2CE  0E04               	movlw	4
  3308  00F2D0  ECE5  F06F         	call	_Lcd_Out
  3309                           
  3310                           ;main.c: 279: Lcd_Out(4, 3, "" );
  3311  00F2D4  0E03               	movlw	3
  3312  00F2D6  6E40               	movwf	Lcd_Out@x,c
  3313  00F2D8  0EEB               	movlw	low (STR_4+20)
  3314  00F2DA  6E41               	movwf	Lcd_Out@buffer,c
  3315  00F2DC  0EFE               	movlw	high (STR_4+20)
  3316  00F2DE  6E42               	movwf	Lcd_Out@buffer+1,c
  3317  00F2E0  0E04               	movlw	4
  3318  00F2E2  ECE5  F06F         	call	_Lcd_Out
  3319  00F2E6  D000               	goto	l3192
  3320  00F2E8                     l3192:
  3321                           
  3322                           ;main.c: 280: }
  3323                           ;main.c: 281: }
  3324                           ;main.c: 283: if(Sw_Right = PORTAbits.RA2 == 0){
  3325  00F2E8  B480               	btfsc	3968,2,c	;volatile
  3326  00F2EA  D002               	goto	u2690
  3327  00F2EC  0E01               	movlw	1
  3328  00F2EE  D001               	goto	u2700
  3329  00F2F0                     u2690:
  3330  00F2F0  0E00               	movlw	0
  3331  00F2F2                     u2700:
  3332  00F2F2  0100               	movlb	0	; () banked
  3333  00F2F4  6FCD               	movwf	_Sw_Right& (0+255),b
  3334  00F2F6  0100               	movlb	0	; () banked
  3335  00F2F8  51CD               	movf	_Sw_Right& (0+255),w,b
  3336  00F2FA  B4D8               	btfsc	status,2,c
  3337  00F2FC  D036               	goto	l3202
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;main.c: 284: if(posicion<=9){posicion+=2;}
  3341  00F2FE  BE4E               	btfsc	V_ProgReloj@posicion+1,7,c
  3342  00F300  D006               	goto	l3196
  3343  00F302  504E               	movf	V_ProgReloj@posicion+1,w,c
  3344  00F304  E109               	bnz	l3198
  3345  00F306  0E0A               	movlw	10
  3346  00F308  5C4D               	subwf	V_ProgReloj@posicion,w,c
  3347  00F30A  B0D8               	btfsc	status,0,c
  3348  00F30C  D005               	goto	l3198
  3349  00F30E                     l3196:
  3350                           
  3351                           ; BSR set to: 0
  3352  00F30E  0E02               	movlw	2
  3353  00F310  264D               	addwf	V_ProgReloj@posicion,f,c
  3354  00F312  0E00               	movlw	0
  3355  00F314  224E               	addwfc	V_ProgReloj@posicion+1,f,c
  3356  00F316  D000               	goto	l3198
  3357  00F318                     l3198:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;main.c: 285: i=0;
  3361  00F318  0E00               	movlw	0
  3362  00F31A  0100               	movlb	0	; () banked
  3363  00F31C  6FC5               	movwf	(_i+1)& (0+255),b
  3364  00F31E  0E00               	movlw	0
  3365  00F320  6FC4               	movwf	_i& (0+255),b
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;main.c: 286: Lcd_Out(posicionesLeft[posicion], posicionesLeft[posicion+1], "" );
  3369  00F322  C04D  F045         	movff	V_ProgReloj@posicion,??_V_ProgReloj
  3370  00F326  C04E  F046         	movff	V_ProgReloj@posicion+1,??_V_ProgReloj+1
  3371  00F32A  90D8               	bcf	status,0,c
  3372  00F32C  3645               	rlcf	??_V_ProgReloj,f,c
  3373  00F32E  3646               	rlcf	??_V_ProgReloj+1,f,c
  3374  00F330  0E02               	movlw	2
  3375  00F332  2645               	addwf	??_V_ProgReloj,f,c
  3376  00F334  0E00               	movlw	0
  3377  00F336  2246               	addwfc	??_V_ProgReloj+1,f,c
  3378  00F338  0E80               	movlw	low _posicionesLeft
  3379  00F33A  2445               	addwf	??_V_ProgReloj,w,c
  3380  00F33C  6ED9               	movwf	fsr2l,c
  3381  00F33E  0E00               	movlw	high _posicionesLeft
  3382  00F340  2046               	addwfc	??_V_ProgReloj+1,w,c
  3383  00F342  6EDA               	movwf	fsr2h,c
  3384  00F344  50DF               	movf	indf2,w,c
  3385  00F346  6E40               	movwf	Lcd_Out@x,c
  3386  00F348  0EEB               	movlw	low (STR_4+20)
  3387  00F34A  6E41               	movwf	Lcd_Out@buffer,c
  3388  00F34C  0EFE               	movlw	high (STR_4+20)
  3389  00F34E  6E42               	movwf	Lcd_Out@buffer+1,c
  3390  00F350  90D8               	bcf	status,0,c
  3391  00F352  344D               	rlcf	V_ProgReloj@posicion,w,c
  3392  00F354  6ED9               	movwf	fsr2l,c
  3393  00F356  344E               	rlcf	V_ProgReloj@posicion+1,w,c
  3394  00F358  6EDA               	movwf	fsr2h,c
  3395  00F35A  0E80               	movlw	low _posicionesLeft
  3396  00F35C  26D9               	addwf	fsr2l,f,c
  3397  00F35E  0E00               	movlw	high _posicionesLeft
  3398  00F360  22DA               	addwfc	fsr2h,f,c
  3399  00F362  50DF               	movf	indf2,w,c
  3400  00F364  ECE5  F06F         	call	_Lcd_Out
  3401  00F368  D000               	goto	l3202
  3402  00F36A                     l3202:
  3403                           
  3404                           ;main.c: 287: }
  3405                           ;main.c: 289: if(Sw_Left = PORTAbits.RA0 == 0){
  3406  00F36A  B080               	btfsc	3968,0,c	;volatile
  3407  00F36C  D002               	goto	u2730
  3408  00F36E  0E01               	movlw	1
  3409  00F370  D001               	goto	u2740
  3410  00F372                     u2730:
  3411  00F372  0E00               	movlw	0
  3412  00F374                     u2740:
  3413  00F374  0100               	movlb	0	; () banked
  3414  00F376  6FCC               	movwf	_Sw_Left& (0+255),b
  3415  00F378  0100               	movlb	0	; () banked
  3416  00F37A  51CC               	movf	_Sw_Left& (0+255),w,b
  3417  00F37C  B4D8               	btfsc	status,2,c
  3418  00F37E  D036               	goto	l3212
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;main.c: 290: if(posicion>=2){posicion-=2;}
  3422  00F380  BE4E               	btfsc	V_ProgReloj@posicion+1,7,c
  3423  00F382  D00B               	goto	l3208
  3424  00F384  504E               	movf	V_ProgReloj@posicion+1,w,c
  3425  00F386  E104               	bnz	u2760
  3426  00F388  0E02               	movlw	2
  3427  00F38A  5C4D               	subwf	V_ProgReloj@posicion,w,c
  3428  00F38C  A0D8               	btfss	status,0,c
  3429  00F38E  D005               	goto	l3208
  3430  00F390                     u2760:
  3431                           
  3432                           ; BSR set to: 0
  3433  00F390  0EFE               	movlw	254
  3434  00F392  264D               	addwf	V_ProgReloj@posicion,f,c
  3435  00F394  0EFF               	movlw	255
  3436  00F396  224E               	addwfc	V_ProgReloj@posicion+1,f,c
  3437  00F398  D000               	goto	l3208
  3438  00F39A                     l3208:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;main.c: 291: i=0;
  3442  00F39A  0E00               	movlw	0
  3443  00F39C  0100               	movlb	0	; () banked
  3444  00F39E  6FC5               	movwf	(_i+1)& (0+255),b
  3445  00F3A0  0E00               	movlw	0
  3446  00F3A2  6FC4               	movwf	_i& (0+255),b
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;main.c: 292: Lcd_Out(posicionesLeft[posicion], posicionesLeft[posicion+1], "" );
  3450  00F3A4  C04D  F045         	movff	V_ProgReloj@posicion,??_V_ProgReloj
  3451  00F3A8  C04E  F046         	movff	V_ProgReloj@posicion+1,??_V_ProgReloj+1
  3452  00F3AC  90D8               	bcf	status,0,c
  3453  00F3AE  3645               	rlcf	??_V_ProgReloj,f,c
  3454  00F3B0  3646               	rlcf	??_V_ProgReloj+1,f,c
  3455  00F3B2  0E02               	movlw	2
  3456  00F3B4  2645               	addwf	??_V_ProgReloj,f,c
  3457  00F3B6  0E00               	movlw	0
  3458  00F3B8  2246               	addwfc	??_V_ProgReloj+1,f,c
  3459  00F3BA  0E80               	movlw	low _posicionesLeft
  3460  00F3BC  2445               	addwf	??_V_ProgReloj,w,c
  3461  00F3BE  6ED9               	movwf	fsr2l,c
  3462  00F3C0  0E00               	movlw	high _posicionesLeft
  3463  00F3C2  2046               	addwfc	??_V_ProgReloj+1,w,c
  3464  00F3C4  6EDA               	movwf	fsr2h,c
  3465  00F3C6  50DF               	movf	indf2,w,c
  3466  00F3C8  6E40               	movwf	Lcd_Out@x,c
  3467  00F3CA  0EEB               	movlw	low (STR_4+20)
  3468  00F3CC  6E41               	movwf	Lcd_Out@buffer,c
  3469  00F3CE  0EFE               	movlw	high (STR_4+20)
  3470  00F3D0  6E42               	movwf	Lcd_Out@buffer+1,c
  3471  00F3D2  90D8               	bcf	status,0,c
  3472  00F3D4  344D               	rlcf	V_ProgReloj@posicion,w,c
  3473  00F3D6  6ED9               	movwf	fsr2l,c
  3474  00F3D8  344E               	rlcf	V_ProgReloj@posicion+1,w,c
  3475  00F3DA  6EDA               	movwf	fsr2h,c
  3476  00F3DC  0E80               	movlw	low _posicionesLeft
  3477  00F3DE  26D9               	addwf	fsr2l,f,c
  3478  00F3E0  0E00               	movlw	high _posicionesLeft
  3479  00F3E2  22DA               	addwfc	fsr2h,f,c
  3480  00F3E4  50DF               	movf	indf2,w,c
  3481  00F3E6  ECE5  F06F         	call	_Lcd_Out
  3482  00F3EA  D000               	goto	l3212
  3483  00F3EC                     l3212:
  3484                           
  3485                           ;main.c: 293: }
  3486                           ;main.c: 295: if(Sw_Down = PORTCbits.RC4 == 0){
  3487  00F3EC  B882               	btfsc	3970,4,c	;volatile
  3488  00F3EE  D002               	goto	u2770
  3489  00F3F0  0E01               	movlw	1
  3490  00F3F2  D001               	goto	u2780
  3491  00F3F4                     u2770:
  3492  00F3F4  0E00               	movlw	0
  3493  00F3F6                     u2780:
  3494  00F3F6  0100               	movlb	0	; () banked
  3495  00F3F8  6FCB               	movwf	_Sw_Down& (0+255),b
  3496  00F3FA  0100               	movlb	0	; () banked
  3497  00F3FC  51CB               	movf	_Sw_Down& (0+255),w,b
  3498  00F3FE  B4D8               	btfsc	status,2,c
  3499  00F400  D0F8               	goto	l3286
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;main.c: 296: i=0;
  3503  00F402  0E00               	movlw	0
  3504  00F404  0100               	movlb	0	; () banked
  3505  00F406  6FC5               	movwf	(_i+1)& (0+255),b
  3506  00F408  0E00               	movlw	0
  3507  00F40A  6FC4               	movwf	_i& (0+255),b
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;main.c: 297: if(posicion == 0){
  3511  00F40C  504D               	movf	V_ProgReloj@posicion,w,c
  3512  00F40E  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3513  00F410  A4D8               	btfss	status,2,c
  3514  00F412  D01D               	goto	l3226
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;main.c: 298: if(diasem_tr>0){diasem_tr--;}
  3518  00F414  5047               	movf	V_ProgReloj@diasem_tr,w,c
  3519  00F416  B4D8               	btfsc	status,2,c
  3520  00F418  D002               	goto	l3222
  3521                           
  3522                           ; BSR set to: 0
  3523  00F41A  0647               	decf	V_ProgReloj@diasem_tr,f,c
  3524  00F41C  D000               	goto	l3222
  3525  00F41E                     l3222:
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;main.c: 299: Lcd_Out(2, 0, Convert_diasem(diasem_tr) );
  3529  00F41E  0E00               	movlw	0
  3530  00F420  6E40               	movwf	Lcd_Out@x,c
  3531  00F422  C047  F028         	movff	V_ProgReloj@diasem_tr,Convert_diasem@dia
  3532  00F426  6A29               	clrf	Convert_diasem@dia+1,c
  3533  00F428  ECEC  F071         	call	_Convert_diasem	;wreg free
  3534  00F42C  C028  F041         	movff	?_Convert_diasem,Lcd_Out@buffer
  3535  00F430  C029  F042         	movff	?_Convert_diasem+1,Lcd_Out@buffer+1
  3536  00F434  0E02               	movlw	2
  3537  00F436  ECE5  F06F         	call	_Lcd_Out
  3538                           
  3539                           ;main.c: 300: Lcd_Out(2, 0, "" );
  3540  00F43A  0E00               	movlw	0
  3541  00F43C  6E40               	movwf	Lcd_Out@x,c
  3542  00F43E  0EEB               	movlw	low (STR_4+20)
  3543  00F440  6E41               	movwf	Lcd_Out@buffer,c
  3544  00F442  0EFE               	movlw	high (STR_4+20)
  3545  00F444  6E42               	movwf	Lcd_Out@buffer+1,c
  3546  00F446  0E02               	movlw	2
  3547  00F448  ECE5  F06F         	call	_Lcd_Out
  3548                           
  3549                           ;main.c: 301: }else if(posicion == 2){
  3550  00F44C  D0D2               	goto	l3286
  3551  00F44E                     l3226:
  3552  00F44E  0E02               	movlw	2
  3553  00F450  184D               	xorwf	V_ProgReloj@posicion,w,c
  3554  00F452  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3555  00F454  A4D8               	btfss	status,2,c
  3556  00F456  D025               	goto	l3238
  3557                           
  3558                           ;main.c: 302: if(dia_tr>1){dia_tr--;}
  3559  00F458  0E01               	movlw	1
  3560  00F45A  6448               	cpfsgt	V_ProgReloj@dia_tr,c
  3561  00F45C  D002               	goto	l3232
  3562  00F45E  0648               	decf	V_ProgReloj@dia_tr,f,c
  3563  00F460  D000               	goto	l3232
  3564  00F462                     l3232:
  3565                           
  3566                           ;main.c: 303: sprintf(buffer1,"%02u",dia_tr);
  3567  00F462  0ED0               	movlw	low _buffer1
  3568  00F464  6E0D               	movwf	sprintf@sp,c
  3569  00F466  0E00               	movlw	high _buffer1
  3570  00F468  6E0E               	movwf	sprintf@sp+1,c
  3571  00F46A  0EC2               	movlw	low (STR_34+10)
  3572  00F46C  6E0F               	movwf	sprintf@f,c
  3573  00F46E  0EFF               	movlw	high (STR_34+10)
  3574  00F470  6E10               	movwf	sprintf@f+1,c
  3575  00F472  C048  F011         	movff	V_ProgReloj@dia_tr,?_sprintf+4
  3576  00F476  6A12               	clrf	?_sprintf+5,c
  3577  00F478  EC95  F076         	call	_sprintf	;wreg free
  3578                           
  3579                           ;main.c: 304: Lcd_Out(3, 0, buffer1);
  3580  00F47C  0E00               	movlw	0
  3581  00F47E  6E40               	movwf	Lcd_Out@x,c
  3582  00F480  0ED0               	movlw	low _buffer1
  3583  00F482  6E41               	movwf	Lcd_Out@buffer,c
  3584  00F484  0E00               	movlw	high _buffer1
  3585  00F486  6E42               	movwf	Lcd_Out@buffer+1,c
  3586  00F488  0E03               	movlw	3
  3587  00F48A  ECE5  F06F         	call	_Lcd_Out
  3588                           
  3589                           ;main.c: 305: Lcd_Out(3, 0, "" );
  3590  00F48E  0E00               	movlw	0
  3591  00F490  6E40               	movwf	Lcd_Out@x,c
  3592  00F492  0EEB               	movlw	low (STR_4+20)
  3593  00F494  6E41               	movwf	Lcd_Out@buffer,c
  3594  00F496  0EFE               	movlw	high (STR_4+20)
  3595  00F498  6E42               	movwf	Lcd_Out@buffer+1,c
  3596  00F49A  0E03               	movlw	3
  3597  00F49C  ECE5  F06F         	call	_Lcd_Out
  3598                           
  3599                           ;main.c: 306: }else if(posicion == 4){
  3600  00F4A0  D0A8               	goto	l3286
  3601  00F4A2                     l3238:
  3602  00F4A2  0E04               	movlw	4
  3603  00F4A4  184D               	xorwf	V_ProgReloj@posicion,w,c
  3604  00F4A6  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3605  00F4A8  A4D8               	btfss	status,2,c
  3606  00F4AA  D025               	goto	l3250
  3607                           
  3608                           ;main.c: 307: if(mes_tr>1){mes_tr--;}
  3609  00F4AC  0E01               	movlw	1
  3610  00F4AE  6449               	cpfsgt	V_ProgReloj@mes_tr,c
  3611  00F4B0  D002               	goto	l3244
  3612  00F4B2  0649               	decf	V_ProgReloj@mes_tr,f,c
  3613  00F4B4  D000               	goto	l3244
  3614  00F4B6                     l3244:
  3615                           
  3616                           ;main.c: 308: sprintf(buffer1,"%02u",mes_tr);
  3617  00F4B6  0ED0               	movlw	low _buffer1
  3618  00F4B8  6E0D               	movwf	sprintf@sp,c
  3619  00F4BA  0E00               	movlw	high _buffer1
  3620  00F4BC  6E0E               	movwf	sprintf@sp+1,c
  3621  00F4BE  0EC2               	movlw	low (STR_34+10)
  3622  00F4C0  6E0F               	movwf	sprintf@f,c
  3623  00F4C2  0EFF               	movlw	high (STR_34+10)
  3624  00F4C4  6E10               	movwf	sprintf@f+1,c
  3625  00F4C6  C049  F011         	movff	V_ProgReloj@mes_tr,?_sprintf+4
  3626  00F4CA  6A12               	clrf	?_sprintf+5,c
  3627  00F4CC  EC95  F076         	call	_sprintf	;wreg free
  3628                           
  3629                           ;main.c: 309: Lcd_Out(3, 3, buffer1);
  3630  00F4D0  0E03               	movlw	3
  3631  00F4D2  6E40               	movwf	Lcd_Out@x,c
  3632  00F4D4  0ED0               	movlw	low _buffer1
  3633  00F4D6  6E41               	movwf	Lcd_Out@buffer,c
  3634  00F4D8  0E00               	movlw	high _buffer1
  3635  00F4DA  6E42               	movwf	Lcd_Out@buffer+1,c
  3636  00F4DC  0E03               	movlw	3
  3637  00F4DE  ECE5  F06F         	call	_Lcd_Out
  3638                           
  3639                           ;main.c: 310: Lcd_Out(3, 3, "" );
  3640  00F4E2  0E03               	movlw	3
  3641  00F4E4  6E40               	movwf	Lcd_Out@x,c
  3642  00F4E6  0EEB               	movlw	low (STR_4+20)
  3643  00F4E8  6E41               	movwf	Lcd_Out@buffer,c
  3644  00F4EA  0EFE               	movlw	high (STR_4+20)
  3645  00F4EC  6E42               	movwf	Lcd_Out@buffer+1,c
  3646  00F4EE  0E03               	movlw	3
  3647  00F4F0  ECE5  F06F         	call	_Lcd_Out
  3648                           
  3649                           ;main.c: 311: }else if(posicion == 6){
  3650  00F4F4  D07E               	goto	l3286
  3651  00F4F6                     l3250:
  3652  00F4F6  0E06               	movlw	6
  3653  00F4F8  184D               	xorwf	V_ProgReloj@posicion,w,c
  3654  00F4FA  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3655  00F4FC  A4D8               	btfss	status,2,c
  3656  00F4FE  D025               	goto	l3262
  3657                           
  3658                           ;main.c: 312: if(anio_tr>20){anio_tr--;}
  3659  00F500  0E14               	movlw	20
  3660  00F502  644A               	cpfsgt	V_ProgReloj@anio_tr,c
  3661  00F504  D002               	goto	l3256
  3662  00F506  064A               	decf	V_ProgReloj@anio_tr,f,c
  3663  00F508  D000               	goto	l3256
  3664  00F50A                     l3256:
  3665                           
  3666                           ;main.c: 313: sprintf(buffer1,"%02u",anio_tr);
  3667  00F50A  0ED0               	movlw	low _buffer1
  3668  00F50C  6E0D               	movwf	sprintf@sp,c
  3669  00F50E  0E00               	movlw	high _buffer1
  3670  00F510  6E0E               	movwf	sprintf@sp+1,c
  3671  00F512  0EC2               	movlw	low (STR_34+10)
  3672  00F514  6E0F               	movwf	sprintf@f,c
  3673  00F516  0EFF               	movlw	high (STR_34+10)
  3674  00F518  6E10               	movwf	sprintf@f+1,c
  3675  00F51A  C04A  F011         	movff	V_ProgReloj@anio_tr,?_sprintf+4
  3676  00F51E  6A12               	clrf	?_sprintf+5,c
  3677  00F520  EC95  F076         	call	_sprintf	;wreg free
  3678                           
  3679                           ;main.c: 314: Lcd_Out(3, 6, buffer1);
  3680  00F524  0E06               	movlw	6
  3681  00F526  6E40               	movwf	Lcd_Out@x,c
  3682  00F528  0ED0               	movlw	low _buffer1
  3683  00F52A  6E41               	movwf	Lcd_Out@buffer,c
  3684  00F52C  0E00               	movlw	high _buffer1
  3685  00F52E  6E42               	movwf	Lcd_Out@buffer+1,c
  3686  00F530  0E03               	movlw	3
  3687  00F532  ECE5  F06F         	call	_Lcd_Out
  3688                           
  3689                           ;main.c: 315: Lcd_Out(3, 6, "" );
  3690  00F536  0E06               	movlw	6
  3691  00F538  6E40               	movwf	Lcd_Out@x,c
  3692  00F53A  0EEB               	movlw	low (STR_4+20)
  3693  00F53C  6E41               	movwf	Lcd_Out@buffer,c
  3694  00F53E  0EFE               	movlw	high (STR_4+20)
  3695  00F540  6E42               	movwf	Lcd_Out@buffer+1,c
  3696  00F542  0E03               	movlw	3
  3697  00F544  ECE5  F06F         	call	_Lcd_Out
  3698                           
  3699                           ;main.c: 316: }else if(posicion == 8){
  3700  00F548  D054               	goto	l3286
  3701  00F54A                     l3262:
  3702  00F54A  0E08               	movlw	8
  3703  00F54C  184D               	xorwf	V_ProgReloj@posicion,w,c
  3704  00F54E  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3705  00F550  A4D8               	btfss	status,2,c
  3706  00F552  D025               	goto	l3274
  3707                           
  3708                           ;main.c: 317: if(hora_tr>0){hora_tr--;}
  3709  00F554  504B               	movf	V_ProgReloj@hora_tr,w,c
  3710  00F556  B4D8               	btfsc	status,2,c
  3711  00F558  D002               	goto	l3268
  3712  00F55A  064B               	decf	V_ProgReloj@hora_tr,f,c
  3713  00F55C  D000               	goto	l3268
  3714  00F55E                     l3268:
  3715                           
  3716                           ;main.c: 318: sprintf(buffer1,"%02u",hora_tr);
  3717  00F55E  0ED0               	movlw	low _buffer1
  3718  00F560  6E0D               	movwf	sprintf@sp,c
  3719  00F562  0E00               	movlw	high _buffer1
  3720  00F564  6E0E               	movwf	sprintf@sp+1,c
  3721  00F566  0EC2               	movlw	low (STR_34+10)
  3722  00F568  6E0F               	movwf	sprintf@f,c
  3723  00F56A  0EFF               	movlw	high (STR_34+10)
  3724  00F56C  6E10               	movwf	sprintf@f+1,c
  3725  00F56E  C04B  F011         	movff	V_ProgReloj@hora_tr,?_sprintf+4
  3726  00F572  6A12               	clrf	?_sprintf+5,c
  3727  00F574  EC95  F076         	call	_sprintf	;wreg free
  3728                           
  3729                           ;main.c: 319: Lcd_Out(4, 0, buffer1);
  3730  00F578  0E00               	movlw	0
  3731  00F57A  6E40               	movwf	Lcd_Out@x,c
  3732  00F57C  0ED0               	movlw	low _buffer1
  3733  00F57E  6E41               	movwf	Lcd_Out@buffer,c
  3734  00F580  0E00               	movlw	high _buffer1
  3735  00F582  6E42               	movwf	Lcd_Out@buffer+1,c
  3736  00F584  0E04               	movlw	4
  3737  00F586  ECE5  F06F         	call	_Lcd_Out
  3738                           
  3739                           ;main.c: 320: Lcd_Out(4, 0, "" );
  3740  00F58A  0E00               	movlw	0
  3741  00F58C  6E40               	movwf	Lcd_Out@x,c
  3742  00F58E  0EEB               	movlw	low (STR_4+20)
  3743  00F590  6E41               	movwf	Lcd_Out@buffer,c
  3744  00F592  0EFE               	movlw	high (STR_4+20)
  3745  00F594  6E42               	movwf	Lcd_Out@buffer+1,c
  3746  00F596  0E04               	movlw	4
  3747  00F598  ECE5  F06F         	call	_Lcd_Out
  3748                           
  3749                           ;main.c: 321: }else if(posicion == 10){
  3750  00F59C  D02A               	goto	l3286
  3751  00F59E                     l3274:
  3752  00F59E  0E0A               	movlw	10
  3753  00F5A0  184D               	xorwf	V_ProgReloj@posicion,w,c
  3754  00F5A2  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3755  00F5A4  A4D8               	btfss	status,2,c
  3756  00F5A6  D025               	goto	l3286
  3757                           
  3758                           ;main.c: 322: if(minuto_tr>0){minuto_tr--;}
  3759  00F5A8  504C               	movf	V_ProgReloj@minuto_tr,w,c
  3760  00F5AA  B4D8               	btfsc	status,2,c
  3761  00F5AC  D002               	goto	l3280
  3762  00F5AE  064C               	decf	V_ProgReloj@minuto_tr,f,c
  3763  00F5B0  D000               	goto	l3280
  3764  00F5B2                     l3280:
  3765                           
  3766                           ;main.c: 323: sprintf(buffer1,"%02u",minuto_tr);
  3767  00F5B2  0ED0               	movlw	low _buffer1
  3768  00F5B4  6E0D               	movwf	sprintf@sp,c
  3769  00F5B6  0E00               	movlw	high _buffer1
  3770  00F5B8  6E0E               	movwf	sprintf@sp+1,c
  3771  00F5BA  0EC2               	movlw	low (STR_34+10)
  3772  00F5BC  6E0F               	movwf	sprintf@f,c
  3773  00F5BE  0EFF               	movlw	high (STR_34+10)
  3774  00F5C0  6E10               	movwf	sprintf@f+1,c
  3775  00F5C2  C04C  F011         	movff	V_ProgReloj@minuto_tr,?_sprintf+4
  3776  00F5C6  6A12               	clrf	?_sprintf+5,c
  3777  00F5C8  EC95  F076         	call	_sprintf	;wreg free
  3778                           
  3779                           ;main.c: 324: Lcd_Out(4, 3, buffer1);
  3780  00F5CC  0E03               	movlw	3
  3781  00F5CE  6E40               	movwf	Lcd_Out@x,c
  3782  00F5D0  0ED0               	movlw	low _buffer1
  3783  00F5D2  6E41               	movwf	Lcd_Out@buffer,c
  3784  00F5D4  0E00               	movlw	high _buffer1
  3785  00F5D6  6E42               	movwf	Lcd_Out@buffer+1,c
  3786  00F5D8  0E04               	movlw	4
  3787  00F5DA  ECE5  F06F         	call	_Lcd_Out
  3788                           
  3789                           ;main.c: 325: Lcd_Out(4, 3, "" );
  3790  00F5DE  0E03               	movlw	3
  3791  00F5E0  6E40               	movwf	Lcd_Out@x,c
  3792  00F5E2  0EEB               	movlw	low (STR_4+20)
  3793  00F5E4  6E41               	movwf	Lcd_Out@buffer,c
  3794  00F5E6  0EFE               	movlw	high (STR_4+20)
  3795  00F5E8  6E42               	movwf	Lcd_Out@buffer+1,c
  3796  00F5EA  0E04               	movlw	4
  3797  00F5EC  ECE5  F06F         	call	_Lcd_Out
  3798  00F5F0  D000               	goto	l3286
  3799  00F5F2                     l3286:
  3800                           
  3801                           ;main.c: 326: }
  3802                           ;main.c: 327: }
  3803                           ;main.c: 329: if(Sw_Center = PORTAbits.RA5 == 0){
  3804  00F5F2  BA80               	btfsc	3968,5,c	;volatile
  3805  00F5F4  D002               	goto	u2920
  3806  00F5F6  0E01               	movlw	1
  3807  00F5F8  D001               	goto	u2930
  3808  00F5FA                     u2920:
  3809  00F5FA  0E00               	movlw	0
  3810  00F5FC                     u2930:
  3811  00F5FC  0100               	movlb	0	; () banked
  3812  00F5FE  6FCA               	movwf	_Sw_Center& (0+255),b
  3813  00F600  0100               	movlb	0	; () banked
  3814  00F602  51CA               	movf	_Sw_Center& (0+255),w,b
  3815  00F604  B4D8               	btfsc	status,2,c
  3816  00F606  D01A               	goto	l3292
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;main.c: 330: diasem = diasem_tr;
  3820  00F608  C047  F0C2         	movff	V_ProgReloj@diasem_tr,_diasem
  3821  00F60C  0100               	movlb	0	; () banked
  3822  00F60E  6BC3               	clrf	(_diasem+1)& (0+255),b
  3823                           
  3824                           ;main.c: 331: dia = dia_tr;
  3825  00F610  C048  F09E         	movff	V_ProgReloj@dia_tr,_dia
  3826  00F614  0100               	movlb	0	; () banked
  3827  00F616  6B9F               	clrf	(_dia+1)& (0+255),b
  3828                           
  3829                           ;main.c: 332: mes = mes_tr;
  3830  00F618  C049  F0A2         	movff	V_ProgReloj@mes_tr,_mes
  3831  00F61C  0100               	movlb	0	; () banked
  3832  00F61E  6BA3               	clrf	(_mes+1)& (0+255),b
  3833                           
  3834                           ;main.c: 333: anio = anio_tr;
  3835  00F620  C04A  F052         	movff	V_ProgReloj@anio_tr,_anio
  3836  00F624  6A53               	clrf	_anio+1,c
  3837                           
  3838                           ;main.c: 334: hora = hora_tr;
  3839  00F626  C04B  F0A0         	movff	V_ProgReloj@hora_tr,_hora
  3840  00F62A  0100               	movlb	0	; () banked
  3841  00F62C  6BA1               	clrf	(_hora+1)& (0+255),b
  3842                           
  3843                           ;main.c: 335: minuto = minuto_tr;
  3844  00F62E  C04C  F0A4         	movff	V_ProgReloj@minuto_tr,_minuto
  3845  00F632  0100               	movlb	0	; () banked
  3846  00F634  6BA5               	clrf	(_minuto+1)& (0+255),b
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;main.c: 336: Write_RTC();
  3850  00F636  ECDD  F074         	call	_Write_RTC	;wreg free
  3851                           
  3852                           ;main.c: 338: break;
  3853  00F63A  D00B               	goto	l3296
  3854  00F63C                     l3292:
  3855  00F63C  0100               	movlb	0	; () banked
  3856  00F63E  4BC4               	infsnz	_i& (0+255),f,b
  3857  00F640  2BC5               	incf	(_i+1)& (0+255),f,b
  3858                           
  3859                           ; BSR set to: 0
  3860  00F642  0100               	movlb	0	; () banked
  3861  00F644  BFC5               	btfsc	(_i+1)& (0+255),7,b
  3862  00F646  D545               	goto	l3116
  3863  00F648  0100               	movlb	0	; () banked
  3864  00F64A  51C5               	movf	(_i+1)& (0+255),w,b
  3865  00F64C  E102               	bnz	l3296
  3866  00F64E  D53A               	goto	L2
  3867  00F650  D000               	goto	l3296
  3868  00F652                     l3296:
  3869                           
  3870                           ;main.c: 339: }
  3871                           ;main.c: 340: }
  3872                           ;main.c: 342: Lcd_Cmd(12);
  3873  00F652  0E0C               	movlw	12
  3874  00F654  EC7B  F072         	call	_Lcd_Cmd
  3875  00F658  0012               	return		;funcret
  3876  00F65A                     __end_of_V_ProgReloj:
  3877                           	opt stack 0
  3878                           tblptru	equ	0xFF8
  3879                           tblptrh	equ	0xFF7
  3880                           tblptrl	equ	0xFF6
  3881                           tablat	equ	0xFF5
  3882                           postinc0	equ	0xFEE
  3883                           wreg	equ	0xFE8
  3884                           postdec1	equ	0xFE5
  3885                           fsr1l	equ	0xFE1
  3886                           indf2	equ	0xFDF
  3887                           fsr2h	equ	0xFDA
  3888                           fsr2l	equ	0xFD9
  3889                           status	equ	0xFD8
  3890                           
  3891 ;; *************** function _Write_RTC *****************
  3892 ;; Defined at:
  3893 ;;		line 503 in file "../main.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;		None               void
  3900 ;; Registers used:
  3901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    2
  3914 ;; This function calls:
  3915 ;;		_RtccWrOn
  3916 ;;		_RtccWriteDate
  3917 ;;		_RtccWriteTime
  3918 ;;		___awdiv
  3919 ;; This function is called by:
  3920 ;;		_main
  3921 ;;		_V_ProgReloj
  3922 ;;		_V_ProgRiegoIlum
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text3
  3927  00E9BA                     __ptext3:
  3928                           	opt stack 0
  3929  00E9BA                     _Write_RTC:
  3930                           	opt stack 28
  3931                           
  3932                           ;main.c: 505: RtccWrOn();
  3933                           
  3934                           ;incstack = 0
  3935  00E9BA  EC81  F06E         	call	_RtccWrOn	;wreg free
  3936                           
  3937                           ;main.c: 507: PIE3bits.RTCCIE=1;
  3938  00E9BE  80A3               	bsf	4003,0,c	;volatile
  3939                           
  3940                           ;main.c: 508: segundo_d=segundo/10;
  3941  00E9C0  C0C6  F001         	movff	_segundo,___awdiv@dividend
  3942  00E9C4  C0C7  F002         	movff	_segundo+1,___awdiv@dividend+1
  3943  00E9C8  0E00               	movlw	0
  3944  00E9CA  6E04               	movwf	___awdiv@divisor+1,c
  3945  00E9CC  0E0A               	movlw	10
  3946  00E9CE  6E03               	movwf	___awdiv@divisor,c
  3947  00E9D0  EC2F  F070         	call	___awdiv	;wreg free
  3948  00E9D4  5001               	movf	?___awdiv,w,c
  3949  00E9D6  0100               	movlb	0	; () banked
  3950  00E9D8  6FF3               	movwf	_segundo_d& (0+255),b
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;main.c: 509: segundo_u=segundo-segundo_d*10;
  3954  00E9DA  0100               	movlb	0	; () banked
  3955  00E9DC  51F3               	movf	_segundo_d& (0+255),w,b
  3956  00E9DE  0D0A               	mullw	10
  3957  00E9E0  50F3               	movf	prodl,w,c
  3958  00E9E2  0800               	sublw	0
  3959  00E9E4  0100               	movlb	0	; () banked
  3960  00E9E6  25C6               	addwf	_segundo& (0+255),w,b
  3961  00E9E8  0100               	movlb	0	; () banked
  3962  00E9EA  6FF4               	movwf	_segundo_u& (0+255),b
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;main.c: 510: RtccTime.f.sec =segundo_d*16+segundo_u;
  3966  00E9EC  0100               	movlb	0	; () banked
  3967  00E9EE  51F3               	movf	_segundo_d& (0+255),w,b
  3968  00E9F0  0D10               	mullw	16
  3969  00E9F2  50F3               	movf	prodl,w,c
  3970  00E9F4  0100               	movlb	0	; () banked
  3971  00E9F6  25F4               	addwf	_segundo_u& (0+255),w,b
  3972  00E9F8  0100               	movlb	0	; () banked
  3973  00E9FA  6FE5               	movwf	(_RtccTime+1)& (0+255),b
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;main.c: 511: minuto_d=minuto/10;
  3977  00E9FC  C0A4  F001         	movff	_minuto,___awdiv@dividend
  3978  00EA00  C0A5  F002         	movff	_minuto+1,___awdiv@dividend+1
  3979  00EA04  0E00               	movlw	0
  3980  00EA06  6E04               	movwf	___awdiv@divisor+1,c
  3981  00EA08  0E0A               	movlw	10
  3982  00EA0A  6E03               	movwf	___awdiv@divisor,c
  3983  00EA0C  EC2F  F070         	call	___awdiv	;wreg free
  3984  00EA10  5001               	movf	?___awdiv,w,c
  3985  00EA12  0100               	movlb	0	; () banked
  3986  00EA14  6FF1               	movwf	_minuto_d& (0+255),b
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;main.c: 512: minuto_u=minuto-minuto_d*10;
  3990  00EA16  0100               	movlb	0	; () banked
  3991  00EA18  51F1               	movf	_minuto_d& (0+255),w,b
  3992  00EA1A  0D0A               	mullw	10
  3993  00EA1C  50F3               	movf	prodl,w,c
  3994  00EA1E  0800               	sublw	0
  3995  00EA20  0100               	movlb	0	; () banked
  3996  00EA22  25A4               	addwf	_minuto& (0+255),w,b
  3997  00EA24  0100               	movlb	0	; () banked
  3998  00EA26  6FF2               	movwf	_minuto_u& (0+255),b
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;main.c: 513: RtccTime.f.min =minuto_d*16+minuto_u;
  4002  00EA28  0100               	movlb	0	; () banked
  4003  00EA2A  51F1               	movf	_minuto_d& (0+255),w,b
  4004  00EA2C  0D10               	mullw	16
  4005  00EA2E  50F3               	movf	prodl,w,c
  4006  00EA30  0100               	movlb	0	; () banked
  4007  00EA32  25F2               	addwf	_minuto_u& (0+255),w,b
  4008  00EA34  0100               	movlb	0	; () banked
  4009  00EA36  6FE6               	movwf	(_RtccTime+2)& (0+255),b
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;main.c: 514: hora_d=hora/10;
  4013  00EA38  C0A0  F001         	movff	_hora,___awdiv@dividend
  4014  00EA3C  C0A1  F002         	movff	_hora+1,___awdiv@dividend+1
  4015  00EA40  0E00               	movlw	0
  4016  00EA42  6E04               	movwf	___awdiv@divisor+1,c
  4017  00EA44  0E0A               	movlw	10
  4018  00EA46  6E03               	movwf	___awdiv@divisor,c
  4019  00EA48  EC2F  F070         	call	___awdiv	;wreg free
  4020  00EA4C  5001               	movf	?___awdiv,w,c
  4021  00EA4E  0100               	movlb	0	; () banked
  4022  00EA50  6FED               	movwf	_hora_d& (0+255),b
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;main.c: 515: hora_u=hora-hora_d*10;
  4026  00EA52  0100               	movlb	0	; () banked
  4027  00EA54  51ED               	movf	_hora_d& (0+255),w,b
  4028  00EA56  0D0A               	mullw	10
  4029  00EA58  50F3               	movf	prodl,w,c
  4030  00EA5A  0800               	sublw	0
  4031  00EA5C  0100               	movlb	0	; () banked
  4032  00EA5E  25A0               	addwf	_hora& (0+255),w,b
  4033  00EA60  0100               	movlb	0	; () banked
  4034  00EA62  6FEE               	movwf	_hora_u& (0+255),b
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;main.c: 516: RtccTime.f.hour=hora_d*16+hora_u;
  4038  00EA64  0100               	movlb	0	; () banked
  4039  00EA66  51ED               	movf	_hora_d& (0+255),w,b
  4040  00EA68  0D10               	mullw	16
  4041  00EA6A  50F3               	movf	prodl,w,c
  4042  00EA6C  0100               	movlb	0	; () banked
  4043  00EA6E  25EE               	addwf	_hora_u& (0+255),w,b
  4044  00EA70  0100               	movlb	0	; () banked
  4045  00EA72  6FE7               	movwf	(_RtccTime+3)& (0+255),b
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;main.c: 517: anio_d=anio/10;
  4049  00EA74  C052  F001         	movff	_anio,___awdiv@dividend
  4050  00EA78  C053  F002         	movff	_anio+1,___awdiv@dividend+1
  4051  00EA7C  0E00               	movlw	0
  4052  00EA7E  6E04               	movwf	___awdiv@divisor+1,c
  4053  00EA80  0E0A               	movlw	10
  4054  00EA82  6E03               	movwf	___awdiv@divisor,c
  4055  00EA84  EC2F  F070         	call	___awdiv	;wreg free
  4056  00EA88  5001               	movf	?___awdiv,w,c
  4057  00EA8A  0100               	movlb	0	; () banked
  4058  00EA8C  6FE8               	movwf	_anio_d& (0+255),b
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;main.c: 518: anio_u=anio-anio_d*10;
  4062  00EA8E  0100               	movlb	0	; () banked
  4063  00EA90  51E8               	movf	_anio_d& (0+255),w,b
  4064  00EA92  0D0A               	mullw	10
  4065  00EA94  50F3               	movf	prodl,w,c
  4066  00EA96  0800               	sublw	0
  4067  00EA98  2452               	addwf	_anio,w,c
  4068  00EA9A  0100               	movlb	0	; () banked
  4069  00EA9C  6FE9               	movwf	_anio_u& (0+255),b
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;main.c: 519: RtccDate.f.year=anio_d*16+anio_u;
  4073  00EA9E  0100               	movlb	0	; () banked
  4074  00EAA0  51E8               	movf	_anio_d& (0+255),w,b
  4075  00EAA2  0D10               	mullw	16
  4076  00EAA4  50F3               	movf	prodl,w,c
  4077  00EAA6  0100               	movlb	0	; () banked
  4078  00EAA8  25E9               	addwf	_anio_u& (0+255),w,b
  4079  00EAAA  6E5F               	movwf	_RtccDate+3,c
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;main.c: 520: mes_d=mes/10;
  4083  00EAAC  C0A2  F001         	movff	_mes,___awdiv@dividend
  4084  00EAB0  C0A3  F002         	movff	_mes+1,___awdiv@dividend+1
  4085  00EAB4  0E00               	movlw	0
  4086  00EAB6  6E04               	movwf	___awdiv@divisor+1,c
  4087  00EAB8  0E0A               	movlw	10
  4088  00EABA  6E03               	movwf	___awdiv@divisor,c
  4089  00EABC  EC2F  F070         	call	___awdiv	;wreg free
  4090  00EAC0  5001               	movf	?___awdiv,w,c
  4091  00EAC2  0100               	movlb	0	; () banked
  4092  00EAC4  6FEF               	movwf	_mes_d& (0+255),b
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;main.c: 521: mes_u=mes-mes_d*10;
  4096  00EAC6  0100               	movlb	0	; () banked
  4097  00EAC8  51EF               	movf	_mes_d& (0+255),w,b
  4098  00EACA  0D0A               	mullw	10
  4099  00EACC  50F3               	movf	prodl,w,c
  4100  00EACE  0800               	sublw	0
  4101  00EAD0  0100               	movlb	0	; () banked
  4102  00EAD2  25A2               	addwf	_mes& (0+255),w,b
  4103  00EAD4  0100               	movlb	0	; () banked
  4104  00EAD6  6FF0               	movwf	_mes_u& (0+255),b
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;main.c: 522: RtccDate.f.mon=mes_d*16+mes_u;
  4108  00EAD8  0100               	movlb	0	; () banked
  4109  00EADA  51EF               	movf	_mes_d& (0+255),w,b
  4110  00EADC  0D10               	mullw	16
  4111  00EADE  50F3               	movf	prodl,w,c
  4112  00EAE0  0100               	movlb	0	; () banked
  4113  00EAE2  25F0               	addwf	_mes_u& (0+255),w,b
  4114  00EAE4  6E5E               	movwf	_RtccDate+2,c
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;main.c: 523: fecha_d=dia/10;
  4118  00EAE6  C09E  F001         	movff	_dia,___awdiv@dividend
  4119  00EAEA  C09F  F002         	movff	_dia+1,___awdiv@dividend+1
  4120  00EAEE  0E00               	movlw	0
  4121  00EAF0  6E04               	movwf	___awdiv@divisor+1,c
  4122  00EAF2  0E0A               	movlw	10
  4123  00EAF4  6E03               	movwf	___awdiv@divisor,c
  4124  00EAF6  EC2F  F070         	call	___awdiv	;wreg free
  4125  00EAFA  5001               	movf	?___awdiv,w,c
  4126  00EAFC  0100               	movlb	0	; () banked
  4127  00EAFE  6FEB               	movwf	_fecha_d& (0+255),b
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;main.c: 524: fecha_u=dia-fecha_d*10;
  4131  00EB00  0100               	movlb	0	; () banked
  4132  00EB02  51EB               	movf	_fecha_d& (0+255),w,b
  4133  00EB04  0D0A               	mullw	10
  4134  00EB06  50F3               	movf	prodl,w,c
  4135  00EB08  0800               	sublw	0
  4136  00EB0A  0100               	movlb	0	; () banked
  4137  00EB0C  259E               	addwf	_dia& (0+255),w,b
  4138  00EB0E  0100               	movlb	0	; () banked
  4139  00EB10  6FEC               	movwf	_fecha_u& (0+255),b
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;main.c: 525: RtccDate.f.mday=fecha_d*16+fecha_u;
  4143  00EB12  0100               	movlb	0	; () banked
  4144  00EB14  51EB               	movf	_fecha_d& (0+255),w,b
  4145  00EB16  0D10               	mullw	16
  4146  00EB18  50F3               	movf	prodl,w,c
  4147  00EB1A  0100               	movlb	0	; () banked
  4148  00EB1C  25EC               	addwf	_fecha_u& (0+255),w,b
  4149  00EB1E  6E5D               	movwf	_RtccDate+1,c
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;main.c: 526: dia_semana=diasem;
  4153  00EB20  C0C2  F0EA         	movff	_diasem,_dia_semana
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;main.c: 527: RtccDate.f.wday =diasem;
  4157  00EB24  C0C2  F05C         	movff	_diasem,_RtccDate
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;main.c: 529: RtccWriteTime(&RtccTime,1);
  4161  00EB28  0EE4               	movlw	low _RtccTime
  4162  00EB2A  6E01               	movwf	RtccWriteTime@pTm,c
  4163  00EB2C  0E00               	movlw	high _RtccTime
  4164  00EB2E  6E02               	movwf	RtccWriteTime@pTm+1,c
  4165  00EB30  0E01               	movlw	1
  4166  00EB32  6E03               	movwf	RtccWriteTime@di,c
  4167  00EB34  ECD9  F070         	call	_RtccWriteTime	;wreg free
  4168                           
  4169                           ;main.c: 530: RtccWriteDate(&RtccDate,1);
  4170  00EB38  0E5C               	movlw	low _RtccDate
  4171  00EB3A  6E01               	movwf	RtccWriteDate@pDt,c
  4172  00EB3C  0E00               	movlw	high _RtccDate
  4173  00EB3E  6E02               	movwf	RtccWriteDate@pDt+1,c
  4174  00EB40  0E01               	movlw	1
  4175  00EB42  6E03               	movwf	RtccWriteDate@di,c
  4176  00EB44  EC3A  F074         	call	_RtccWriteDate	;wreg free
  4177                           
  4178                           ;main.c: 531: (RTCCFGbits.RTCEN=1);
  4179  00EB48  010F               	movlb	15	; () banked
  4180  00EB4A  8F3F               	bsf	63,7,b	;volatile
  4181                           
  4182                           ; BSR set to: 15
  4183  00EB4C  0012               	return		;funcret
  4184  00EB4E                     __end_of_Write_RTC:
  4185                           	opt stack 0
  4186                           tblptru	equ	0xFF8
  4187                           tblptrh	equ	0xFF7
  4188                           tblptrl	equ	0xFF6
  4189                           tablat	equ	0xFF5
  4190                           prodl	equ	0xFF3
  4191                           postinc0	equ	0xFEE
  4192                           wreg	equ	0xFE8
  4193                           postdec1	equ	0xFE5
  4194                           fsr1l	equ	0xFE1
  4195                           indf2	equ	0xFDF
  4196                           fsr2h	equ	0xFDA
  4197                           fsr2l	equ	0xFD9
  4198                           status	equ	0xFD8
  4199                           
  4200 ;; *************** function ___awdiv *****************
  4201 ;; Defined at:
  4202 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  dividend        2    0[COMRAM] int 
  4205 ;;  divisor         2    2[COMRAM] int 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  quotient        2    6[COMRAM] int 
  4208 ;;  sign            1    5[COMRAM] unsigned char 
  4209 ;;  counter         1    4[COMRAM] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  2    0[COMRAM] int 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4220 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4222 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4223 ;;Total ram usage:        8 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_Write_RTC
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text4
  4233  00E05E                     __ptext4:
  4234                           	opt stack 0
  4235  00E05E                     ___awdiv:
  4236                           	opt stack 29
  4237                           
  4238                           ; BSR set to: 15
  4239                           ;incstack = 0
  4240  00E05E  0E00               	movlw	0
  4241  00E060  6E06               	movwf	___awdiv@sign,c
  4242  00E062  AE04               	btfss	___awdiv@divisor+1,7,c
  4243  00E064  D007               	goto	l2830
  4244  00E066  6C03               	negf	___awdiv@divisor,c
  4245  00E068  1E04               	comf	___awdiv@divisor+1,f,c
  4246  00E06A  B0D8               	btfsc	status,0,c
  4247  00E06C  2A04               	incf	___awdiv@divisor+1,f,c
  4248  00E06E  0E01               	movlw	1
  4249  00E070  6E06               	movwf	___awdiv@sign,c
  4250  00E072  D000               	goto	l2830
  4251  00E074                     l2830:
  4252  00E074  AE02               	btfss	___awdiv@dividend+1,7,c
  4253  00E076  D007               	goto	l2836
  4254  00E078  6C01               	negf	___awdiv@dividend,c
  4255  00E07A  1E02               	comf	___awdiv@dividend+1,f,c
  4256  00E07C  B0D8               	btfsc	status,0,c
  4257  00E07E  2A02               	incf	___awdiv@dividend+1,f,c
  4258  00E080  0E01               	movlw	1
  4259  00E082  1A06               	xorwf	___awdiv@sign,f,c
  4260  00E084  D000               	goto	l2836
  4261  00E086                     l2836:
  4262  00E086  0E00               	movlw	0
  4263  00E088  6E08               	movwf	___awdiv@quotient+1,c
  4264  00E08A  0E00               	movlw	0
  4265  00E08C  6E07               	movwf	___awdiv@quotient,c
  4266  00E08E  5003               	movf	___awdiv@divisor,w,c
  4267  00E090  1004               	iorwf	___awdiv@divisor+1,w,c
  4268  00E092  B4D8               	btfsc	status,2,c
  4269  00E094  D021               	goto	l2858
  4270  00E096  0E01               	movlw	1
  4271  00E098  6E05               	movwf	___awdiv@counter,c
  4272  00E09A  D005               	goto	l2844
  4273  00E09C                     l2842:
  4274  00E09C  90D8               	bcf	status,0,c
  4275  00E09E  3603               	rlcf	___awdiv@divisor,f,c
  4276  00E0A0  3604               	rlcf	___awdiv@divisor+1,f,c
  4277  00E0A2  2A05               	incf	___awdiv@counter,f,c
  4278  00E0A4  D000               	goto	l2844
  4279  00E0A6                     l2844:
  4280  00E0A6  BE04               	btfsc	___awdiv@divisor+1,7,c
  4281  00E0A8  D002               	goto	l2846
  4282  00E0AA  D7F8               	goto	l2842
  4283  00E0AC  D000               	goto	l2846
  4284  00E0AE                     l2846:
  4285  00E0AE  90D8               	bcf	status,0,c
  4286  00E0B0  3607               	rlcf	___awdiv@quotient,f,c
  4287  00E0B2  3608               	rlcf	___awdiv@quotient+1,f,c
  4288  00E0B4  5003               	movf	___awdiv@divisor,w,c
  4289  00E0B6  5C01               	subwf	___awdiv@dividend,w,c
  4290  00E0B8  5004               	movf	___awdiv@divisor+1,w,c
  4291  00E0BA  5802               	subwfb	___awdiv@dividend+1,w,c
  4292  00E0BC  A0D8               	btfss	status,0,c
  4293  00E0BE  D006               	goto	l2854
  4294  00E0C0  5003               	movf	___awdiv@divisor,w,c
  4295  00E0C2  5E01               	subwf	___awdiv@dividend,f,c
  4296  00E0C4  5004               	movf	___awdiv@divisor+1,w,c
  4297  00E0C6  5A02               	subwfb	___awdiv@dividend+1,f,c
  4298  00E0C8  8007               	bsf	___awdiv@quotient,0,c
  4299  00E0CA  D000               	goto	l2854
  4300  00E0CC                     l2854:
  4301  00E0CC  90D8               	bcf	status,0,c
  4302  00E0CE  3204               	rrcf	___awdiv@divisor+1,f,c
  4303  00E0D0  3203               	rrcf	___awdiv@divisor,f,c
  4304  00E0D2  2E05               	decfsz	___awdiv@counter,f,c
  4305  00E0D4  D7EC               	goto	l2846
  4306  00E0D6  D000               	goto	l2858
  4307  00E0D8                     l2858:
  4308  00E0D8  5006               	movf	___awdiv@sign,w,c
  4309  00E0DA  B4D8               	btfsc	status,2,c
  4310  00E0DC  D005               	goto	l2862
  4311  00E0DE  6C07               	negf	___awdiv@quotient,c
  4312  00E0E0  1E08               	comf	___awdiv@quotient+1,f,c
  4313  00E0E2  B0D8               	btfsc	status,0,c
  4314  00E0E4  2A08               	incf	___awdiv@quotient+1,f,c
  4315  00E0E6  D000               	goto	l2862
  4316  00E0E8                     l2862:
  4317  00E0E8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4318  00E0EC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4319  00E0F0  0012               	return	
  4320  00E0F2  0012               	return		;funcret
  4321  00E0F4                     __end_of___awdiv:
  4322                           	opt stack 0
  4323                           tblptru	equ	0xFF8
  4324                           tblptrh	equ	0xFF7
  4325                           tblptrl	equ	0xFF6
  4326                           tablat	equ	0xFF5
  4327                           prodl	equ	0xFF3
  4328                           postinc0	equ	0xFEE
  4329                           wreg	equ	0xFE8
  4330                           postdec1	equ	0xFE5
  4331                           fsr1l	equ	0xFE1
  4332                           indf2	equ	0xFDF
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function _RtccWriteTime *****************
  4338 ;; Defined at:
  4339 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  pTm             2    0[COMRAM] PTR const struct .
  4342 ;;		 -> RtccTime(4), 
  4343 ;;  di              1    2[COMRAM] enum E7121
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  tempHourWDay    2    9[COMRAM] struct .
  4346 ;;  tempMinSec      2    7[COMRAM] struct .
  4347 ;;  wasWrEn         1    6[COMRAM] enum E7121
  4348 ;;  wasAlrm         1    5[COMRAM] enum E7121
  4349 ;;  wasOn           1    4[COMRAM] enum E7121
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      enum E7337
  4352 ;; Registers used:
  4353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4359 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4360 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4362 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4363 ;;Total ram usage:       11 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    1
  4366 ;; This function calls:
  4367 ;;		_RtccWrOn
  4368 ;; This function is called by:
  4369 ;;		_Write_RTC
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text5
  4374  00E1B2                     __ptext5:
  4375                           	opt stack 0
  4376  00E1B2                     _RtccWriteTime:
  4377                           	opt stack 28
  4378                           
  4379                           ;incstack = 0
  4380  00E1B2  0E00               	movlw	0
  4381  00E1B4  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4382  00E1B6  EE20 F002          	lfsr	2,2
  4383  00E1BA  5001               	movf	RtccWriteTime@pTm,w,c
  4384  00E1BC  26D9               	addwf	fsr2l,f,c
  4385  00E1BE  5002               	movf	RtccWriteTime@pTm+1,w,c
  4386  00E1C0  22DA               	addwfc	fsr2h,f,c
  4387  00E1C2  0E5A               	movlw	90
  4388  00E1C4  60DF               	cpfslt	indf2,c
  4389  00E1C6  0012               	return	
  4390  00E1C8  EE20 F001          	lfsr	2,1
  4391  00E1CC  5001               	movf	RtccWriteTime@pTm,w,c
  4392  00E1CE  26D9               	addwf	fsr2l,f,c
  4393  00E1D0  5002               	movf	RtccWriteTime@pTm+1,w,c
  4394  00E1D2  22DA               	addwfc	fsr2h,f,c
  4395  00E1D4  0E5A               	movlw	90
  4396  00E1D6  60DF               	cpfslt	indf2,c
  4397  00E1D8  0012               	return	
  4398  00E1DA  EE20 F003          	lfsr	2,3
  4399  00E1DE  5001               	movf	RtccWriteTime@pTm,w,c
  4400  00E1E0  26D9               	addwf	fsr2l,f,c
  4401  00E1E2  5002               	movf	RtccWriteTime@pTm+1,w,c
  4402  00E1E4  22DA               	addwfc	fsr2h,f,c
  4403  00E1E6  0E24               	movlw	36
  4404  00E1E8  64DF               	cpfsgt	indf2,c
  4405  00E1EA  D002               	goto	l2636
  4406  00E1EC  0012               	return	
  4407                           
  4408                           ;	Return value of _RtccWriteTime is never used
  4409  00E1EE  0012               	return	
  4410  00E1F0                     l2636:
  4411  00E1F0  EE20 F002          	lfsr	2,2
  4412  00E1F4  5001               	movf	RtccWriteTime@pTm,w,c
  4413  00E1F6  26D9               	addwf	fsr2l,f,c
  4414  00E1F8  5002               	movf	RtccWriteTime@pTm+1,w,c
  4415  00E1FA  22DA               	addwfc	fsr2h,f,c
  4416  00E1FC  50DF               	movf	indf2,w,c
  4417  00E1FE  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  4418  00E200  EE20 F001          	lfsr	2,1
  4419  00E204  5001               	movf	RtccWriteTime@pTm,w,c
  4420  00E206  26D9               	addwf	fsr2l,f,c
  4421  00E208  5002               	movf	RtccWriteTime@pTm+1,w,c
  4422  00E20A  22DA               	addwfc	fsr2h,f,c
  4423  00E20C  50DF               	movf	indf2,w,c
  4424  00E20E  6E08               	movwf	RtccWriteTime@tempMinSec,c
  4425  00E210  5003               	movf	RtccWriteTime@di,w,c
  4426  00E212  B4D8               	btfsc	status,2,c
  4427  00E214  D002               	goto	l2642
  4428  00E216  9CF2               	bcf	intcon,6,c	;volatile
  4429  00E218  D000               	goto	l2642
  4430  00E21A                     l2642:
  4431  00E21A  0E00               	movlw	0
  4432  00E21C  BB3F               	btfsc	63,5,b	;volatile
  4433  00E21E  0E01               	movlw	1
  4434  00E220  6E07               	movwf	RtccWriteTime@wasWrEn,c
  4435  00E222  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4436  00E224  A4D8               	btfss	status,2,c
  4437  00E226  D003               	goto	l2646
  4438  00E228  EC81  F06E         	call	_RtccWrOn	;wreg free
  4439  00E22C  D000               	goto	l2646
  4440  00E22E                     l2646:
  4441  00E22E  0E00               	movlw	0
  4442  00E230  BF3F               	btfsc	63,7,b	;volatile
  4443  00E232  0E01               	movlw	1
  4444  00E234  6E05               	movwf	RtccWriteTime@wasOn,c
  4445  00E236  5005               	movf	RtccWriteTime@wasOn,w,c
  4446  00E238  B4D8               	btfsc	status,2,c
  4447  00E23A  D007               	goto	l2652
  4448  00E23C  0E00               	movlw	0
  4449  00E23E  BE91               	btfsc	3985,7,c	;volatile
  4450  00E240  0E01               	movlw	1
  4451  00E242  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4452  00E244  010F               	movlb	15	; () banked
  4453  00E246  9F3F               	bcf	63,7,b	;volatile
  4454  00E248  D000               	goto	l2652
  4455  00E24A                     l2652:
  4456  00E24A  0EFC               	movlw	252
  4457  00E24C  010F               	movlb	15	; () banked
  4458  00E24E  173F               	andwf	63,f,b	;volatile
  4459  00E250  010F               	movlb	15	; () banked
  4460  00E252  813F               	bsf	63,0,b	;volatile
  4461                           
  4462                           ; BSR set to: 15
  4463  00E254  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  4464                           
  4465                           ; BSR set to: 15
  4466  00E258  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  4467                           
  4468                           ; BSR set to: 15
  4469  00E25C  EE20 F003          	lfsr	2,3
  4470  00E260  5001               	movf	RtccWriteTime@pTm,w,c
  4471  00E262  26D9               	addwf	fsr2l,f,c
  4472  00E264  5002               	movf	RtccWriteTime@pTm+1,w,c
  4473  00E266  22DA               	addwfc	fsr2h,f,c
  4474  00E268  50DF               	movf	indf2,w,c
  4475  00E26A  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  4476                           
  4477                           ; BSR set to: 15
  4478  00E26C  0EFC               	movlw	252
  4479  00E26E  010F               	movlb	15	; () banked
  4480  00E270  173F               	andwf	63,f,b	;volatile
  4481                           
  4482                           ; BSR set to: 15
  4483  00E272  010F               	movlb	15	; () banked
  4484  00E274  813F               	bsf	63,0,b	;volatile
  4485                           
  4486                           ; BSR set to: 15
  4487  00E276  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  4488                           
  4489                           ; BSR set to: 15
  4490  00E27A  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  4491                           
  4492                           ; BSR set to: 15
  4493  00E27E  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  4494                           
  4495                           ; BSR set to: 15
  4496  00E282  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  4497                           
  4498                           ; BSR set to: 15
  4499  00E286  5005               	movf	RtccWriteTime@wasOn,w,c
  4500  00E288  B4D8               	btfsc	status,2,c
  4501  00E28A  D00D               	goto	l2684
  4502                           
  4503                           ; BSR set to: 15
  4504  00E28C  010F               	movlb	15	; () banked
  4505  00E28E  8F3F               	bsf	63,7,b	;volatile
  4506                           
  4507                           ; BSR set to: 15
  4508  00E290  5006               	movf	RtccWriteTime@wasAlrm,w,c
  4509  00E292  B4D8               	btfsc	status,2,c
  4510  00E294  D002               	goto	l2680
  4511                           
  4512                           ; BSR set to: 15
  4513  00E296  8E91               	bsf	3985,7,c	;volatile
  4514  00E298  D000               	goto	l2680
  4515  00E29A                     l2680:
  4516                           
  4517                           ; BSR set to: 15
  4518  00E29A  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4519  00E29C  B4D8               	btfsc	status,2,c
  4520  00E29E  D009               	goto	l2688
  4521                           
  4522                           ; BSR set to: 15
  4523  00E2A0  EC81  F06E         	call	_RtccWrOn	;wreg free
  4524  00E2A4  D006               	goto	l2688
  4525  00E2A6                     l2684:
  4526  00E2A6  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4527  00E2A8  A4D8               	btfss	status,2,c
  4528  00E2AA  D003               	goto	l2688
  4529  00E2AC  010F               	movlb	15	; () banked
  4530  00E2AE  9B3F               	bcf	63,5,b	;volatile
  4531                           
  4532                           ; BSR set to: 15
  4533  00E2B0  D000               	goto	l2688
  4534  00E2B2                     l2688:
  4535  00E2B2  5003               	movf	RtccWriteTime@di,w,c
  4536  00E2B4  B4D8               	btfsc	status,2,c
  4537  00E2B6  0012               	return	
  4538  00E2B8  8CF2               	bsf	intcon,6,c	;volatile
  4539  00E2BA  0012               	return	
  4540                           
  4541                           ;	Return value of _RtccWriteTime is never used
  4542  00E2BC  0012               	return		;funcret
  4543  00E2BE                     __end_of_RtccWriteTime:
  4544                           	opt stack 0
  4545                           tblptru	equ	0xFF8
  4546                           tblptrh	equ	0xFF7
  4547                           tblptrl	equ	0xFF6
  4548                           tablat	equ	0xFF5
  4549                           prodl	equ	0xFF3
  4550                           intcon	equ	0xFF2
  4551                           postinc0	equ	0xFEE
  4552                           wreg	equ	0xFE8
  4553                           postdec1	equ	0xFE5
  4554                           fsr1l	equ	0xFE1
  4555                           indf2	equ	0xFDF
  4556                           fsr2h	equ	0xFDA
  4557                           fsr2l	equ	0xFD9
  4558                           status	equ	0xFD8
  4559                           
  4560 ;; *************** function _RtccWriteDate *****************
  4561 ;; Defined at:
  4562 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  pDt             2    0[COMRAM] PTR const struct .
  4565 ;;		 -> RtccDate(4), 
  4566 ;;  di              1    2[COMRAM] enum E7121
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  tempHourWDay    2   11[COMRAM] struct .
  4569 ;;  tempDayMonth    2    9[COMRAM] struct .
  4570 ;;  tempYear        2    6[COMRAM] struct .
  4571 ;;  wasWrEn         1    8[COMRAM] enum E7121
  4572 ;;  wasAlrm         1    5[COMRAM] enum E7121
  4573 ;;  wasOn           1    4[COMRAM] enum E7121
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      enum E7337
  4576 ;; Registers used:
  4577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4583 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4584 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4587 ;;Total ram usage:       13 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    1
  4590 ;; This function calls:
  4591 ;;		_RtccWrOn
  4592 ;; This function is called by:
  4593 ;;		_Write_RTC
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text6
  4598  00E874                     __ptext6:
  4599                           	opt stack 0
  4600  00E874                     _RtccWriteDate:
  4601                           	opt stack 28
  4602                           
  4603                           ;incstack = 0
  4604  00E874  0E00               	movlw	0
  4605  00E876  6E06               	movwf	RtccWriteDate@wasAlrm,c
  4606  00E878  EE20 F002          	lfsr	2,2
  4607  00E87C  5001               	movf	RtccWriteDate@pDt,w,c
  4608  00E87E  26D9               	addwf	fsr2l,f,c
  4609  00E880  5002               	movf	RtccWriteDate@pDt+1,w,c
  4610  00E882  22DA               	addwfc	fsr2h,f,c
  4611  00E884  0E13               	movlw	19
  4612  00E886  60DF               	cpfslt	indf2,c
  4613  00E888  0012               	return	
  4614  00E88A  EE20 F002          	lfsr	2,2
  4615  00E88E  5001               	movf	RtccWriteDate@pDt,w,c
  4616  00E890  26D9               	addwf	fsr2l,f,c
  4617  00E892  5002               	movf	RtccWriteDate@pDt+1,w,c
  4618  00E894  22DA               	addwfc	fsr2h,f,c
  4619  00E896  50DF               	movf	indf2,w,c
  4620  00E898  B4D8               	btfsc	status,2,c
  4621  00E89A  0012               	return	
  4622  00E89C  EE20 F001          	lfsr	2,1
  4623  00E8A0  5001               	movf	RtccWriteDate@pDt,w,c
  4624  00E8A2  26D9               	addwf	fsr2l,f,c
  4625  00E8A4  5002               	movf	RtccWriteDate@pDt+1,w,c
  4626  00E8A6  22DA               	addwfc	fsr2h,f,c
  4627  00E8A8  0E32               	movlw	50
  4628  00E8AA  60DF               	cpfslt	indf2,c
  4629  00E8AC  0012               	return	
  4630  00E8AE  EE20 F001          	lfsr	2,1
  4631  00E8B2  5001               	movf	RtccWriteDate@pDt,w,c
  4632  00E8B4  26D9               	addwf	fsr2l,f,c
  4633  00E8B6  5002               	movf	RtccWriteDate@pDt+1,w,c
  4634  00E8B8  22DA               	addwfc	fsr2h,f,c
  4635  00E8BA  50DF               	movf	indf2,w,c
  4636  00E8BC  B4D8               	btfsc	status,2,c
  4637  00E8BE  0012               	return	
  4638  00E8C0  EE20 F003          	lfsr	2,3
  4639  00E8C4  5001               	movf	RtccWriteDate@pDt,w,c
  4640  00E8C6  26D9               	addwf	fsr2l,f,c
  4641  00E8C8  5002               	movf	RtccWriteDate@pDt+1,w,c
  4642  00E8CA  22DA               	addwfc	fsr2h,f,c
  4643  00E8CC  0E99               	movlw	153
  4644  00E8CE  64DF               	cpfsgt	indf2,c
  4645  00E8D0  D002               	goto	l2704
  4646  00E8D2  0012               	return	
  4647                           
  4648                           ;	Return value of _RtccWriteDate is never used
  4649  00E8D4  0012               	return	
  4650  00E8D6                     l2704:
  4651  00E8D6  EE20 F003          	lfsr	2,3
  4652  00E8DA  5001               	movf	RtccWriteDate@pDt,w,c
  4653  00E8DC  26D9               	addwf	fsr2l,f,c
  4654  00E8DE  5002               	movf	RtccWriteDate@pDt+1,w,c
  4655  00E8E0  22DA               	addwfc	fsr2h,f,c
  4656  00E8E2  50DF               	movf	indf2,w,c
  4657  00E8E4  6E07               	movwf	RtccWriteDate@tempYear,c
  4658  00E8E6  EE20 F001          	lfsr	2,1
  4659  00E8EA  5001               	movf	RtccWriteDate@pDt,w,c
  4660  00E8EC  26D9               	addwf	fsr2l,f,c
  4661  00E8EE  5002               	movf	RtccWriteDate@pDt+1,w,c
  4662  00E8F0  22DA               	addwfc	fsr2h,f,c
  4663  00E8F2  50DF               	movf	indf2,w,c
  4664  00E8F4  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  4665  00E8F6  EE20 F002          	lfsr	2,2
  4666  00E8FA  5001               	movf	RtccWriteDate@pDt,w,c
  4667  00E8FC  26D9               	addwf	fsr2l,f,c
  4668  00E8FE  5002               	movf	RtccWriteDate@pDt+1,w,c
  4669  00E900  22DA               	addwfc	fsr2h,f,c
  4670  00E902  50DF               	movf	indf2,w,c
  4671  00E904  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  4672  00E906  5003               	movf	RtccWriteDate@di,w,c
  4673  00E908  B4D8               	btfsc	status,2,c
  4674  00E90A  D002               	goto	l2710
  4675  00E90C  9CF2               	bcf	intcon,6,c	;volatile
  4676  00E90E  D000               	goto	l2710
  4677  00E910                     l2710:
  4678  00E910  0E00               	movlw	0
  4679  00E912  BB3F               	btfsc	63,5,b	;volatile
  4680  00E914  0E01               	movlw	1
  4681  00E916  6E09               	movwf	RtccWriteDate@wasWrEn,c
  4682  00E918  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4683  00E91A  A4D8               	btfss	status,2,c
  4684  00E91C  D003               	goto	l2714
  4685  00E91E  EC81  F06E         	call	_RtccWrOn	;wreg free
  4686  00E922  D000               	goto	l2714
  4687  00E924                     l2714:
  4688  00E924  0E00               	movlw	0
  4689  00E926  BF3F               	btfsc	63,7,b	;volatile
  4690  00E928  0E01               	movlw	1
  4691  00E92A  6E05               	movwf	RtccWriteDate@wasOn,c
  4692  00E92C  5005               	movf	RtccWriteDate@wasOn,w,c
  4693  00E92E  B4D8               	btfsc	status,2,c
  4694  00E930  D007               	goto	l2720
  4695  00E932  0E00               	movlw	0
  4696  00E934  BE91               	btfsc	3985,7,c	;volatile
  4697  00E936  0E01               	movlw	1
  4698  00E938  6E06               	movwf	RtccWriteDate@wasAlrm,c
  4699  00E93A  010F               	movlb	15	; () banked
  4700  00E93C  9F3F               	bcf	63,7,b	;volatile
  4701  00E93E  D000               	goto	l2720
  4702  00E940                     l2720:
  4703  00E940  0EFC               	movlw	252
  4704  00E942  010F               	movlb	15	; () banked
  4705  00E944  173F               	andwf	63,f,b	;volatile
  4706  00E946  010F               	movlb	15	; () banked
  4707  00E948  813F               	bsf	63,0,b	;volatile
  4708                           
  4709                           ; BSR set to: 15
  4710  00E94A  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  4711                           
  4712                           ; BSR set to: 15
  4713  00E94E  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  4714                           
  4715                           ; BSR set to: 15
  4716  00E952  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  4717  00E956  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  4718  00E95A  50DF               	movf	indf2,w,c
  4719  00E95C  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  4720                           
  4721                           ; BSR set to: 15
  4722  00E95E  0EFC               	movlw	252
  4723  00E960  010F               	movlb	15	; () banked
  4724  00E962  173F               	andwf	63,f,b	;volatile
  4725                           
  4726                           ; BSR set to: 15
  4727  00E964  0E03               	movlw	3
  4728  00E966  010F               	movlb	15	; () banked
  4729  00E968  133F               	iorwf	63,f,b	;volatile
  4730                           
  4731                           ; BSR set to: 15
  4732  00E96A  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  4733                           
  4734                           ; BSR set to: 15
  4735  00E96E  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  4736                           
  4737                           ; BSR set to: 15
  4738  00E972  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  4739                           
  4740                           ; BSR set to: 15
  4741  00E976  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  4742                           
  4743                           ; BSR set to: 15
  4744  00E97A  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  4745                           
  4746                           ; BSR set to: 15
  4747  00E97E  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  4748                           
  4749                           ; BSR set to: 15
  4750  00E982  5005               	movf	RtccWriteDate@wasOn,w,c
  4751  00E984  B4D8               	btfsc	status,2,c
  4752  00E986  D00D               	goto	l2756
  4753                           
  4754                           ; BSR set to: 15
  4755  00E988  010F               	movlb	15	; () banked
  4756  00E98A  8F3F               	bsf	63,7,b	;volatile
  4757                           
  4758                           ; BSR set to: 15
  4759  00E98C  5006               	movf	RtccWriteDate@wasAlrm,w,c
  4760  00E98E  B4D8               	btfsc	status,2,c
  4761  00E990  D002               	goto	l2752
  4762                           
  4763                           ; BSR set to: 15
  4764  00E992  8E91               	bsf	3985,7,c	;volatile
  4765  00E994  D000               	goto	l2752
  4766  00E996                     l2752:
  4767                           
  4768                           ; BSR set to: 15
  4769  00E996  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4770  00E998  B4D8               	btfsc	status,2,c
  4771  00E99A  D009               	goto	l2760
  4772                           
  4773                           ; BSR set to: 15
  4774  00E99C  EC81  F06E         	call	_RtccWrOn	;wreg free
  4775  00E9A0  D006               	goto	l2760
  4776  00E9A2                     l2756:
  4777  00E9A2  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4778  00E9A4  A4D8               	btfss	status,2,c
  4779  00E9A6  D003               	goto	l2760
  4780  00E9A8  010F               	movlb	15	; () banked
  4781  00E9AA  9B3F               	bcf	63,5,b	;volatile
  4782                           
  4783                           ; BSR set to: 15
  4784  00E9AC  D000               	goto	l2760
  4785  00E9AE                     l2760:
  4786  00E9AE  5003               	movf	RtccWriteDate@di,w,c
  4787  00E9B0  B4D8               	btfsc	status,2,c
  4788  00E9B2  0012               	return	
  4789  00E9B4  9CF2               	bcf	intcon,6,c	;volatile
  4790  00E9B6  0012               	return	
  4791                           
  4792                           ;	Return value of _RtccWriteDate is never used
  4793  00E9B8  0012               	return		;funcret
  4794  00E9BA                     __end_of_RtccWriteDate:
  4795                           	opt stack 0
  4796                           tblptru	equ	0xFF8
  4797                           tblptrh	equ	0xFF7
  4798                           tblptrl	equ	0xFF6
  4799                           tablat	equ	0xFF5
  4800                           prodl	equ	0xFF3
  4801                           intcon	equ	0xFF2
  4802                           postinc0	equ	0xFEE
  4803                           wreg	equ	0xFE8
  4804                           postdec1	equ	0xFE5
  4805                           fsr1l	equ	0xFE1
  4806                           indf2	equ	0xFDF
  4807                           fsr2h	equ	0xFDA
  4808                           fsr2l	equ	0xFD9
  4809                           status	equ	0xFD8
  4810                           
  4811 ;; *************** function _RtccWrOn *****************
  4812 ;; Defined at:
  4813 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  data            2    0        unsigned int 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;		None               void
  4820 ;; Registers used:
  4821 ;;		wreg, status,2
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_Write_RTC
  4837 ;;		_RtccWriteDate
  4838 ;;		_RtccWriteTime
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text7
  4843  00DD02                     __ptext7:
  4844                           	opt stack 0
  4845  00DD02                     _RtccWrOn:
  4846                           	opt stack 28
  4847                           
  4848                           ;incstack = 0
  4849  00DD02  9CF2               	bcf	intcon,6,c	;volatile
  4850  00DD04  0E55               	movlw	85
  4851  00DD06  6EA7               	movwf	4007,c	;volatile
  4852  00DD08  0EAA               	movlw	170
  4853  00DD0A  6EA7               	movwf	4007,c	;volatile
  4854  00DD0C  010F               	movlb	15	; () banked
  4855  00DD0E  8B3F               	bsf	63,5,b	;volatile
  4856                           
  4857                           ; BSR set to: 15
  4858  00DD10  8CF2               	bsf	intcon,6,c	;volatile
  4859                           
  4860                           ; BSR set to: 15
  4861  00DD12  0012               	return		;funcret
  4862  00DD14                     __end_of_RtccWrOn:
  4863                           	opt stack 0
  4864                           tblptru	equ	0xFF8
  4865                           tblptrh	equ	0xFF7
  4866                           tblptrl	equ	0xFF6
  4867                           tablat	equ	0xFF5
  4868                           prodl	equ	0xFF3
  4869                           intcon	equ	0xFF2
  4870                           postinc0	equ	0xFEE
  4871                           wreg	equ	0xFE8
  4872                           postdec1	equ	0xFE5
  4873                           fsr1l	equ	0xFE1
  4874                           indf2	equ	0xFDF
  4875                           fsr2h	equ	0xFDA
  4876                           fsr2l	equ	0xFD9
  4877                           status	equ	0xFD8
  4878                           
  4879 ;; *************** function _V_Principal *****************
  4880 ;; Defined at:
  4881 ;;		line 213 in file "../main.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;  cte             2   68[COMRAM] PTR unsigned char 
  4886 ;;		 -> Convert_diasem@buffer_dia(20), 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;		None               void
  4889 ;; Registers used:
  4890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4897 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4900 ;;Total ram usage:        2 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    3
  4903 ;; This function calls:
  4904 ;;		_Convert_diasem
  4905 ;;		_Lcd_Out
  4906 ;;		_Read_RTC
  4907 ;;		_lee_temperatura
  4908 ;;		_sprintf
  4909 ;; This function is called by:
  4910 ;;		_main
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           	psect	text8
  4915  00E0F4                     __ptext8:
  4916                           	opt stack 0
  4917  00E0F4                     _V_Principal:
  4918                           	opt stack 27
  4919                           
  4920                           ;main.c: 214: Read_RTC();
  4921                           
  4922                           ; BSR set to: 15
  4923                           ;incstack = 0
  4924  00E0F4  EC9F  F073         	call	_Read_RTC	;wreg free
  4925                           
  4926                           ;main.c: 215: lee_temperatura();
  4927  00E0F8  EC8A  F06E         	call	_lee_temperatura	;wreg free
  4928                           
  4929                           ;main.c: 216: Lcd_Out(1, 0, "                    ");
  4930  00E0FC  0E00               	movlw	0
  4931  00E0FE  6E40               	movwf	Lcd_Out@x,c
  4932  00E100  0ED7               	movlw	low STR_4
  4933  00E102  6E41               	movwf	Lcd_Out@buffer,c
  4934  00E104  0EFE               	movlw	high STR_4
  4935  00E106  6E42               	movwf	Lcd_Out@buffer+1,c
  4936  00E108  0E01               	movlw	1
  4937  00E10A  ECE5  F06F         	call	_Lcd_Out
  4938                           
  4939                           ;main.c: 217: char* cte = Convert_diasem(diasem);
  4940  00E10E  C0C2  F028         	movff	_diasem,Convert_diasem@dia
  4941  00E112  C0C3  F029         	movff	_diasem+1,Convert_diasem@dia+1
  4942  00E116  ECEC  F071         	call	_Convert_diasem	;wreg free
  4943  00E11A  C028  F045         	movff	?_Convert_diasem,V_Principal@cte
  4944  00E11E  C029  F046         	movff	?_Convert_diasem+1,V_Principal@cte+1
  4945                           
  4946                           ;main.c: 219: Lcd_Out(2, 0, cte);
  4947  00E122  0E00               	movlw	0
  4948  00E124  6E40               	movwf	Lcd_Out@x,c
  4949  00E126  C045  F041         	movff	V_Principal@cte,Lcd_Out@buffer
  4950  00E12A  C046  F042         	movff	V_Principal@cte+1,Lcd_Out@buffer+1
  4951  00E12E  0E02               	movlw	2
  4952  00E130  ECE5  F06F         	call	_Lcd_Out
  4953                           
  4954                           ;main.c: 221: sprintf(buffer1,"%02u/%02u/%02u             ",dia,mes,anio);
  4955  00E134  0ED0               	movlw	low _buffer1
  4956  00E136  6E0D               	movwf	sprintf@sp,c
  4957  00E138  0E00               	movlw	high _buffer1
  4958  00E13A  6E0E               	movwf	sprintf@sp+1,c
  4959  00E13C  0E9F               	movlw	low STR_5
  4960  00E13E  6E0F               	movwf	sprintf@f,c
  4961  00E140  0EFE               	movlw	high STR_5
  4962  00E142  6E10               	movwf	sprintf@f+1,c
  4963  00E144  C09E  F011         	movff	_dia,?_sprintf+4
  4964  00E148  C09F  F012         	movff	_dia+1,?_sprintf+5
  4965  00E14C  C0A2  F013         	movff	_mes,?_sprintf+6
  4966  00E150  C0A3  F014         	movff	_mes+1,?_sprintf+7
  4967  00E154  C052  F015         	movff	_anio,?_sprintf+8
  4968  00E158  C053  F016         	movff	_anio+1,?_sprintf+9
  4969  00E15C  EC95  F076         	call	_sprintf	;wreg free
  4970                           
  4971                           ;main.c: 222: Lcd_Out(3,0,buffer1);
  4972  00E160  0E00               	movlw	0
  4973  00E162  6E40               	movwf	Lcd_Out@x,c
  4974  00E164  0ED0               	movlw	low _buffer1
  4975  00E166  6E41               	movwf	Lcd_Out@buffer,c
  4976  00E168  0E00               	movlw	high _buffer1
  4977  00E16A  6E42               	movwf	Lcd_Out@buffer+1,c
  4978  00E16C  0E03               	movlw	3
  4979  00E16E  ECE5  F06F         	call	_Lcd_Out
  4980                           
  4981                           ;main.c: 223: sprintf(buffer1,"%02u:%02u:%02u             ",hora,minuto,segundo);
  4982  00E172  0ED0               	movlw	low _buffer1
  4983  00E174  6E0D               	movwf	sprintf@sp,c
  4984  00E176  0E00               	movlw	high _buffer1
  4985  00E178  6E0E               	movwf	sprintf@sp+1,c
  4986  00E17A  0EBB               	movlw	low STR_6
  4987  00E17C  6E0F               	movwf	sprintf@f,c
  4988  00E17E  0EFE               	movlw	high STR_6
  4989  00E180  6E10               	movwf	sprintf@f+1,c
  4990  00E182  C0A0  F011         	movff	_hora,?_sprintf+4
  4991  00E186  C0A1  F012         	movff	_hora+1,?_sprintf+5
  4992  00E18A  C0A4  F013         	movff	_minuto,?_sprintf+6
  4993  00E18E  C0A5  F014         	movff	_minuto+1,?_sprintf+7
  4994  00E192  C0C6  F015         	movff	_segundo,?_sprintf+8
  4995  00E196  C0C7  F016         	movff	_segundo+1,?_sprintf+9
  4996  00E19A  EC95  F076         	call	_sprintf	;wreg free
  4997                           
  4998                           ;main.c: 224: Lcd_Out(4,0,buffer1);
  4999  00E19E  0E00               	movlw	0
  5000  00E1A0  6E40               	movwf	Lcd_Out@x,c
  5001  00E1A2  0ED0               	movlw	low _buffer1
  5002  00E1A4  6E41               	movwf	Lcd_Out@buffer,c
  5003  00E1A6  0E00               	movlw	high _buffer1
  5004  00E1A8  6E42               	movwf	Lcd_Out@buffer+1,c
  5005  00E1AA  0E04               	movlw	4
  5006  00E1AC  ECE5  F06F         	call	_Lcd_Out
  5007  00E1B0  0012               	return		;funcret
  5008  00E1B2                     __end_of_V_Principal:
  5009                           	opt stack 0
  5010                           tblptru	equ	0xFF8
  5011                           tblptrh	equ	0xFF7
  5012                           tblptrl	equ	0xFF6
  5013                           tablat	equ	0xFF5
  5014                           prodl	equ	0xFF3
  5015                           intcon	equ	0xFF2
  5016                           postinc0	equ	0xFEE
  5017                           wreg	equ	0xFE8
  5018                           postdec1	equ	0xFE5
  5019                           fsr1l	equ	0xFE1
  5020                           indf2	equ	0xFDF
  5021                           fsr2h	equ	0xFDA
  5022                           fsr2l	equ	0xFD9
  5023                           status	equ	0xFD8
  5024                           
  5025 ;; *************** function _lee_temperatura *****************
  5026 ;; Defined at:
  5027 ;;		line 574 in file "../main.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;Total ram usage:        1 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_V_Principal
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text9
  5055  00DD14                     __ptext9:
  5056                           	opt stack 0
  5057  00DD14                     _lee_temperatura:
  5058                           	opt stack 29
  5059                           
  5060                           ;main.c: 576: ADCON0bits.ADON = 1;
  5061                           
  5062                           ;incstack = 0
  5063  00DD14  80C2               	bsf	4034,0,c	;volatile
  5064                           
  5065                           ;main.c: 577: ADCON0bits.GO = 1;
  5066  00DD16  82C2               	bsf	4034,1,c	;volatile
  5067                           
  5068                           ;main.c: 578: while(ADCON0bits.GO);
  5069  00DD18  D000               	goto	l330
  5070  00DD1A                     l330:
  5071  00DD1A  B2C2               	btfsc	4034,1,c	;volatile
  5072  00DD1C  D7FE               	goto	l330
  5073                           
  5074                           ;main.c: 579: _delay((unsigned long)((1)*(8000000/4000.0)));
  5075  00DD1E  0E03               	movlw	3
  5076  00DD20  6E01               	movwf	??_lee_temperatura& (0+255),c
  5077  00DD22  0E98               	movlw	152
  5078  00DD24                     u3757:
  5079  00DD24  2EE8               	decfsz	wreg,f,c
  5080  00DD26  D7FE               	goto	u3757
  5081  00DD28  2E01               	decfsz	??_lee_temperatura& (0+255),f,c
  5082  00DD2A  D7FC               	goto	u3757
  5083                           
  5084                           ;main.c: 580: lectura = ADRESH;
  5085  00DD2C  CFC4 F0CF          	movff	4036,_lectura	;volatile
  5086                           
  5087                           ;main.c: 581: ADCON0bits.ADON = 0;
  5088  00DD30  90C2               	bcf	4034,0,c	;volatile
  5089  00DD32  0012               	return		;funcret
  5090  00DD34                     __end_of_lee_temperatura:
  5091                           	opt stack 0
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           prodl	equ	0xFF3
  5097                           intcon	equ	0xFF2
  5098                           postinc0	equ	0xFEE
  5099                           wreg	equ	0xFE8
  5100                           postdec1	equ	0xFE5
  5101                           fsr1l	equ	0xFE1
  5102                           indf2	equ	0xFDF
  5103                           fsr2h	equ	0xFDA
  5104                           fsr2l	equ	0xFD9
  5105                           status	equ	0xFD8
  5106                           
  5107 ;; *************** function _Read_RTC *****************
  5108 ;; Defined at:
  5109 ;;		line 541 in file "../main.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;		None               void
  5116 ;; Registers used:
  5117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5127 ;;Total ram usage:        0 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    1
  5130 ;; This function calls:
  5131 ;;		_RtccReadDate
  5132 ;;		_RtccReadTime
  5133 ;; This function is called by:
  5134 ;;		_V_Principal
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text10
  5139  00E73E                     __ptext10:
  5140                           	opt stack 0
  5141  00E73E                     _Read_RTC:
  5142                           	opt stack 28
  5143                           
  5144                           ;main.c: 544: RtccReadTime(&RtccTime);
  5145                           
  5146                           ;incstack = 0
  5147  00E73E  0EE4               	movlw	low _RtccTime
  5148  00E740  6E01               	movwf	RtccReadTime@pTm,c
  5149  00E742  0E00               	movlw	high _RtccTime
  5150  00E744  6E02               	movwf	RtccReadTime@pTm+1,c
  5151  00E746  EC67  F06F         	call	_RtccReadTime	;wreg free
  5152                           
  5153                           ;main.c: 545: segundo_u=(RtccTime.f.sec & 0x0F);
  5154  00E74A  0100               	movlb	0	; () banked
  5155  00E74C  51E5               	movf	(_RtccTime+1)& (0+255),w,b
  5156  00E74E  0B0F               	andlw	15
  5157  00E750  0100               	movlb	0	; () banked
  5158  00E752  6FF4               	movwf	_segundo_u& (0+255),b
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;main.c: 546: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  5162  00E754  0100               	movlb	0	; () banked
  5163  00E756  39E5               	swapf	(_RtccTime+1)& (0+255),w,b
  5164  00E758  0B0F               	andlw	15
  5165  00E75A  0B0F               	andlw	15
  5166  00E75C  0100               	movlb	0	; () banked
  5167  00E75E  6FF3               	movwf	_segundo_d& (0+255),b
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;main.c: 547: minuto_u=(RtccTime.f.min & 0x0F);
  5171  00E760  0100               	movlb	0	; () banked
  5172  00E762  51E6               	movf	(_RtccTime+2)& (0+255),w,b
  5173  00E764  0B0F               	andlw	15
  5174  00E766  0100               	movlb	0	; () banked
  5175  00E768  6FF2               	movwf	_minuto_u& (0+255),b
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;main.c: 548: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  5179  00E76A  0100               	movlb	0	; () banked
  5180  00E76C  39E6               	swapf	(_RtccTime+2)& (0+255),w,b
  5181  00E76E  0B0F               	andlw	15
  5182  00E770  0B0F               	andlw	15
  5183  00E772  0100               	movlb	0	; () banked
  5184  00E774  6FF1               	movwf	_minuto_d& (0+255),b
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;main.c: 549: hora_u=(RtccTime.f.hour & 0x0F);
  5188  00E776  0100               	movlb	0	; () banked
  5189  00E778  51E7               	movf	(_RtccTime+3)& (0+255),w,b
  5190  00E77A  0B0F               	andlw	15
  5191  00E77C  0100               	movlb	0	; () banked
  5192  00E77E  6FEE               	movwf	_hora_u& (0+255),b
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;main.c: 550: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  5196  00E780  0100               	movlb	0	; () banked
  5197  00E782  39E7               	swapf	(_RtccTime+3)& (0+255),w,b
  5198  00E784  0B0F               	andlw	15
  5199  00E786  0B0F               	andlw	15
  5200  00E788  0100               	movlb	0	; () banked
  5201  00E78A  6FED               	movwf	_hora_d& (0+255),b
  5202                           
  5203                           ;main.c: 551: RtccReadDate(&RtccDate);
  5204  00E78C  0E5C               	movlw	low _RtccDate
  5205  00E78E  6E01               	movwf	RtccReadDate@pDt,c
  5206  00E790  0E00               	movlw	high _RtccDate
  5207  00E792  6E02               	movwf	RtccReadDate@pDt+1,c
  5208  00E794  EC9E  F06F         	call	_RtccReadDate	;wreg free
  5209                           
  5210                           ;main.c: 552: fecha_u=(RtccDate.f.mday & 0x0F);
  5211  00E798  505D               	movf	_RtccDate+1,w,c
  5212  00E79A  0B0F               	andlw	15
  5213  00E79C  0100               	movlb	0	; () banked
  5214  00E79E  6FEC               	movwf	_fecha_u& (0+255),b
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;main.c: 553: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  5218  00E7A0  385D               	swapf	_RtccDate+1,w,c
  5219  00E7A2  0B0F               	andlw	15
  5220  00E7A4  0B0F               	andlw	15
  5221  00E7A6  0100               	movlb	0	; () banked
  5222  00E7A8  6FEB               	movwf	_fecha_d& (0+255),b
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;main.c: 554: mes_u=(RtccDate.f.mon & 0x0F);
  5226  00E7AA  505E               	movf	_RtccDate+2,w,c
  5227  00E7AC  0B0F               	andlw	15
  5228  00E7AE  0100               	movlb	0	; () banked
  5229  00E7B0  6FF0               	movwf	_mes_u& (0+255),b
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;main.c: 555: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  5233  00E7B2  385E               	swapf	_RtccDate+2,w,c
  5234  00E7B4  0B0F               	andlw	15
  5235  00E7B6  0B0F               	andlw	15
  5236  00E7B8  0100               	movlb	0	; () banked
  5237  00E7BA  6FEF               	movwf	_mes_d& (0+255),b
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;main.c: 556: dia_semana=RtccDate.f.wday;
  5241  00E7BC  C05C  F0EA         	movff	_RtccDate,_dia_semana
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;main.c: 557: anio_u=(RtccDate.f.year & 0x0F);
  5245  00E7C0  505F               	movf	_RtccDate+3,w,c
  5246  00E7C2  0B0F               	andlw	15
  5247  00E7C4  0100               	movlb	0	; () banked
  5248  00E7C6  6FE9               	movwf	_anio_u& (0+255),b
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;main.c: 558: anio_d=((RtccDate.f.year & 0xF0)>>4);
  5252  00E7C8  385F               	swapf	_RtccDate+3,w,c
  5253  00E7CA  0B0F               	andlw	15
  5254  00E7CC  0B0F               	andlw	15
  5255  00E7CE  0100               	movlb	0	; () banked
  5256  00E7D0  6FE8               	movwf	_anio_d& (0+255),b
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;main.c: 559: segundo=segundo_d*10+segundo_u;
  5260  00E7D2  0100               	movlb	0	; () banked
  5261  00E7D4  51F3               	movf	_segundo_d& (0+255),w,b
  5262  00E7D6  0D0A               	mullw	10
  5263  00E7D8  0100               	movlb	0	; () banked
  5264  00E7DA  51F4               	movf	_segundo_u& (0+255),w,b
  5265  00E7DC  24F3               	addwf	prodl,w,c
  5266  00E7DE  0100               	movlb	0	; () banked
  5267  00E7E0  6FC6               	movwf	_segundo& (0+255),b
  5268  00E7E2  0100               	movlb	0	; () banked
  5269  00E7E4  0E00               	movlw	0
  5270  00E7E6  20F4               	addwfc	prodh,w,c
  5271  00E7E8  0100               	movlb	0	; () banked
  5272  00E7EA  6FC7               	movwf	(_segundo+1)& (0+255),b
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;main.c: 560: minuto=minuto_d*10+minuto_u;
  5276  00E7EC  0100               	movlb	0	; () banked
  5277  00E7EE  51F1               	movf	_minuto_d& (0+255),w,b
  5278  00E7F0  0D0A               	mullw	10
  5279  00E7F2  0100               	movlb	0	; () banked
  5280  00E7F4  51F2               	movf	_minuto_u& (0+255),w,b
  5281  00E7F6  24F3               	addwf	prodl,w,c
  5282  00E7F8  0100               	movlb	0	; () banked
  5283  00E7FA  6FA4               	movwf	_minuto& (0+255),b
  5284  00E7FC  0100               	movlb	0	; () banked
  5285  00E7FE  0E00               	movlw	0
  5286  00E800  20F4               	addwfc	prodh,w,c
  5287  00E802  0100               	movlb	0	; () banked
  5288  00E804  6FA5               	movwf	(_minuto+1)& (0+255),b
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;main.c: 561: hora=hora_d*10+hora_u;
  5292  00E806  0100               	movlb	0	; () banked
  5293  00E808  51ED               	movf	_hora_d& (0+255),w,b
  5294  00E80A  0D0A               	mullw	10
  5295  00E80C  0100               	movlb	0	; () banked
  5296  00E80E  51EE               	movf	_hora_u& (0+255),w,b
  5297  00E810  24F3               	addwf	prodl,w,c
  5298  00E812  0100               	movlb	0	; () banked
  5299  00E814  6FA0               	movwf	_hora& (0+255),b
  5300  00E816  0100               	movlb	0	; () banked
  5301  00E818  0E00               	movlw	0
  5302  00E81A  20F4               	addwfc	prodh,w,c
  5303  00E81C  0100               	movlb	0	; () banked
  5304  00E81E  6FA1               	movwf	(_hora+1)& (0+255),b
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;main.c: 562: dia=fecha_d*10+fecha_u;
  5308  00E820  0100               	movlb	0	; () banked
  5309  00E822  51EB               	movf	_fecha_d& (0+255),w,b
  5310  00E824  0D0A               	mullw	10
  5311  00E826  0100               	movlb	0	; () banked
  5312  00E828  51EC               	movf	_fecha_u& (0+255),w,b
  5313  00E82A  24F3               	addwf	prodl,w,c
  5314  00E82C  0100               	movlb	0	; () banked
  5315  00E82E  6F9E               	movwf	_dia& (0+255),b
  5316  00E830  0100               	movlb	0	; () banked
  5317  00E832  0E00               	movlw	0
  5318  00E834  20F4               	addwfc	prodh,w,c
  5319  00E836  0100               	movlb	0	; () banked
  5320  00E838  6F9F               	movwf	(_dia+1)& (0+255),b
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;main.c: 563: diasem=dia_semana;
  5324  00E83A  C0EA  F0C2         	movff	_dia_semana,_diasem
  5325  00E83E  0100               	movlb	0	; () banked
  5326  00E840  6BC3               	clrf	(_diasem+1)& (0+255),b
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;main.c: 564: mes=mes_d*10+mes_u;
  5330  00E842  0100               	movlb	0	; () banked
  5331  00E844  51EF               	movf	_mes_d& (0+255),w,b
  5332  00E846  0D0A               	mullw	10
  5333  00E848  0100               	movlb	0	; () banked
  5334  00E84A  51F0               	movf	_mes_u& (0+255),w,b
  5335  00E84C  24F3               	addwf	prodl,w,c
  5336  00E84E  0100               	movlb	0	; () banked
  5337  00E850  6FA2               	movwf	_mes& (0+255),b
  5338  00E852  0100               	movlb	0	; () banked
  5339  00E854  0E00               	movlw	0
  5340  00E856  20F4               	addwfc	prodh,w,c
  5341  00E858  0100               	movlb	0	; () banked
  5342  00E85A  6FA3               	movwf	(_mes+1)& (0+255),b
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;main.c: 565: anio=anio_d*10+anio_u;
  5346  00E85C  0100               	movlb	0	; () banked
  5347  00E85E  51E8               	movf	_anio_d& (0+255),w,b
  5348  00E860  0D0A               	mullw	10
  5349  00E862  0100               	movlb	0	; () banked
  5350  00E864  51E9               	movf	_anio_u& (0+255),w,b
  5351  00E866  24F3               	addwf	prodl,w,c
  5352  00E868  6E52               	movwf	_anio,c
  5353  00E86A  0100               	movlb	0	; () banked
  5354  00E86C  0E00               	movlw	0
  5355  00E86E  20F4               	addwfc	prodh,w,c
  5356  00E870  6E53               	movwf	_anio+1,c
  5357                           
  5358                           ; BSR set to: 0
  5359  00E872  0012               	return		;funcret
  5360  00E874                     __end_of_Read_RTC:
  5361                           	opt stack 0
  5362                           tblptru	equ	0xFF8
  5363                           tblptrh	equ	0xFF7
  5364                           tblptrl	equ	0xFF6
  5365                           tablat	equ	0xFF5
  5366                           prodh	equ	0xFF4
  5367                           prodl	equ	0xFF3
  5368                           intcon	equ	0xFF2
  5369                           postinc0	equ	0xFEE
  5370                           wreg	equ	0xFE8
  5371                           postdec1	equ	0xFE5
  5372                           fsr1l	equ	0xFE1
  5373                           indf2	equ	0xFDF
  5374                           fsr2h	equ	0xFDA
  5375                           fsr2l	equ	0xFD9
  5376                           status	equ	0xFD8
  5377                           
  5378 ;; *************** function _RtccReadTime *****************
  5379 ;; Defined at:
  5380 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  pTm             2    0[COMRAM] PTR struct .
  5383 ;;		 -> RtccTime(4), 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  rTD0            8   10[COMRAM] struct .
  5386 ;;  rTD1            8    2[COMRAM] struct .
  5387 ;; Return value:  Size  Location     Type
  5388 ;;		None               void
  5389 ;; Registers used:
  5390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5397 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5399 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5400 ;;Total ram usage:       18 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_Read_RTC
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text11
  5410  00DECE                     __ptext11:
  5411                           	opt stack 0
  5412  00DECE                     _RtccReadTime:
  5413                           	opt stack 28
  5414  00DECE  0EFC               	movlw	252
  5415  00DED0  010F               	movlb	15	; () banked
  5416  00DED2  173F               	andwf	63,f,b	;volatile
  5417                           
  5418                           ; BSR set to: 15
  5419  00DED4  010F               	movlb	15	; () banked
  5420  00DED6  813F               	bsf	63,0,b	;volatile
  5421                           
  5422                           ; BSR set to: 15
  5423  00DED8  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  5424                           
  5425                           ; BSR set to: 15
  5426  00DEDC  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  5427                           
  5428                           ; BSR set to: 15
  5429  00DEE0  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  5430                           
  5431                           ; BSR set to: 15
  5432  00DEE4  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  5433                           
  5434                           ; BSR set to: 15
  5435  00DEE8  0EFC               	movlw	252
  5436  00DEEA  010F               	movlb	15	; () banked
  5437  00DEEC  173F               	andwf	63,f,b	;volatile
  5438  00DEEE  010F               	movlb	15	; () banked
  5439  00DEF0  813F               	bsf	63,0,b	;volatile
  5440                           
  5441                           ; BSR set to: 15
  5442  00DEF2  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  5443                           
  5444                           ; BSR set to: 15
  5445  00DEF6  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  5446                           
  5447                           ; BSR set to: 15
  5448  00DEFA  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  5449                           
  5450                           ; BSR set to: 15
  5451  00DEFE  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  5452                           
  5453                           ; BSR set to: 15
  5454  00DF02  5009               	movf	RtccReadTime@rTD1+6,w,c
  5455  00DF04  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  5456  00DF06  A4D8               	btfss	status,2,c
  5457  00DF08  D7E2               	goto	l2764
  5458                           
  5459                           ; BSR set to: 15
  5460                           
  5461                           ; BSR set to: 15
  5462  00DF0A  EE20 F003          	lfsr	2,3
  5463  00DF0E  5001               	movf	RtccReadTime@pTm,w,c
  5464  00DF10  26D9               	addwf	fsr2l,f,c
  5465  00DF12  5002               	movf	RtccReadTime@pTm+1,w,c
  5466  00DF14  22DA               	addwfc	fsr2h,f,c
  5467  00DF16  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  5468  00DF1A  EE20 F002          	lfsr	2,2
  5469  00DF1E  5001               	movf	RtccReadTime@pTm,w,c
  5470  00DF20  26D9               	addwf	fsr2l,f,c
  5471  00DF22  5002               	movf	RtccReadTime@pTm+1,w,c
  5472  00DF24  22DA               	addwfc	fsr2h,f,c
  5473  00DF26  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  5474  00DF2A  EE20 F001          	lfsr	2,1
  5475  00DF2E  5001               	movf	RtccReadTime@pTm,w,c
  5476  00DF30  26D9               	addwf	fsr2l,f,c
  5477  00DF32  5002               	movf	RtccReadTime@pTm+1,w,c
  5478  00DF34  22DA               	addwfc	fsr2h,f,c
  5479  00DF36  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  5480                           
  5481                           ; BSR set to: 15
  5482  00DF3A  0012               	return		;funcret
  5483  00DF3C                     __end_of_RtccReadTime:
  5484                           	opt stack 0
  5485                           tblptru	equ	0xFF8
  5486                           tblptrh	equ	0xFF7
  5487                           tblptrl	equ	0xFF6
  5488                           tablat	equ	0xFF5
  5489                           prodh	equ	0xFF4
  5490                           prodl	equ	0xFF3
  5491                           intcon	equ	0xFF2
  5492                           postinc0	equ	0xFEE
  5493                           wreg	equ	0xFE8
  5494                           postdec1	equ	0xFE5
  5495                           fsr1l	equ	0xFE1
  5496                           indf2	equ	0xFDF
  5497                           fsr2h	equ	0xFDA
  5498                           fsr2l	equ	0xFD9
  5499                           status	equ	0xFD8
  5500                           
  5501 ;; *************** function _RtccReadDate *****************
  5502 ;; Defined at:
  5503 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  pDt             2    0[COMRAM] PTR struct .
  5506 ;;		 -> RtccDate(4), 
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;  rTD0            8   10[COMRAM] struct .
  5509 ;;  rTD1            8    2[COMRAM] struct .
  5510 ;; Return value:  Size  Location     Type
  5511 ;;		None               void
  5512 ;; Registers used:
  5513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5520 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5522 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5523 ;;Total ram usage:       18 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; This function calls:
  5526 ;;		Nothing
  5527 ;; This function is called by:
  5528 ;;		_Read_RTC
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text12
  5533  00DF3C                     __ptext12:
  5534                           	opt stack 0
  5535  00DF3C                     _RtccReadDate:
  5536                           	opt stack 28
  5537  00DF3C  0EFC               	movlw	252
  5538  00DF3E  010F               	movlb	15	; () banked
  5539  00DF40  173F               	andwf	63,f,b	;volatile
  5540  00DF42  0E03               	movlw	3
  5541  00DF44  010F               	movlb	15	; () banked
  5542  00DF46  133F               	iorwf	63,f,b	;volatile
  5543                           
  5544                           ; BSR set to: 15
  5545  00DF48  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  5546                           
  5547                           ; BSR set to: 15
  5548  00DF4C  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  5549                           
  5550                           ; BSR set to: 15
  5551  00DF50  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  5552                           
  5553                           ; BSR set to: 15
  5554  00DF54  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  5555                           
  5556                           ; BSR set to: 15
  5557  00DF58  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  5558                           
  5559                           ; BSR set to: 15
  5560  00DF5C  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  5561  00DF60  0EFC               	movlw	252
  5562  00DF62  010F               	movlb	15	; () banked
  5563  00DF64  173F               	andwf	63,f,b	;volatile
  5564  00DF66  0E03               	movlw	3
  5565  00DF68  010F               	movlb	15	; () banked
  5566  00DF6A  133F               	iorwf	63,f,b	;volatile
  5567                           
  5568                           ; BSR set to: 15
  5569  00DF6C  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  5570                           
  5571                           ; BSR set to: 15
  5572  00DF70  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  5573                           
  5574                           ; BSR set to: 15
  5575  00DF74  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  5576                           
  5577                           ; BSR set to: 15
  5578  00DF78  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  5579                           
  5580                           ; BSR set to: 15
  5581  00DF7C  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  5582                           
  5583                           ; BSR set to: 15
  5584  00DF80  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  5585  00DF84  5005               	movf	RtccReadDate@rTD1+2,w,c
  5586  00DF86  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  5587  00DF88  A4D8               	btfss	status,2,c
  5588  00DF8A  D7D8               	goto	l2790
  5589                           
  5590                           ; BSR set to: 15
  5591                           
  5592                           ; BSR set to: 15
  5593  00DF8C  EE20 F001          	lfsr	2,1
  5594  00DF90  5001               	movf	RtccReadDate@pDt,w,c
  5595  00DF92  26D9               	addwf	fsr2l,f,c
  5596  00DF94  5002               	movf	RtccReadDate@pDt+1,w,c
  5597  00DF96  22DA               	addwfc	fsr2h,f,c
  5598  00DF98  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  5599  00DF9C  EE20 F002          	lfsr	2,2
  5600  00DFA0  5001               	movf	RtccReadDate@pDt,w,c
  5601  00DFA2  26D9               	addwf	fsr2l,f,c
  5602  00DFA4  5002               	movf	RtccReadDate@pDt+1,w,c
  5603  00DFA6  22DA               	addwfc	fsr2h,f,c
  5604  00DFA8  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  5605                           
  5606                           ; BSR set to: 15
  5607  00DFAC  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  5608  00DFB0  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  5609  00DFB4  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  5610                           
  5611                           ; BSR set to: 15
  5612  00DFB8  EE20 F003          	lfsr	2,3
  5613  00DFBC  5001               	movf	RtccReadDate@pDt,w,c
  5614  00DFBE  26D9               	addwf	fsr2l,f,c
  5615  00DFC0  5002               	movf	RtccReadDate@pDt+1,w,c
  5616  00DFC2  22DA               	addwfc	fsr2h,f,c
  5617  00DFC4  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  5618                           
  5619                           ; BSR set to: 15
  5620  00DFC8  0012               	return		;funcret
  5621  00DFCA                     __end_of_RtccReadDate:
  5622                           	opt stack 0
  5623                           tblptru	equ	0xFF8
  5624                           tblptrh	equ	0xFF7
  5625                           tblptrl	equ	0xFF6
  5626                           tablat	equ	0xFF5
  5627                           prodh	equ	0xFF4
  5628                           prodl	equ	0xFF3
  5629                           intcon	equ	0xFF2
  5630                           postinc0	equ	0xFEE
  5631                           wreg	equ	0xFE8
  5632                           postdec1	equ	0xFE5
  5633                           fsr1l	equ	0xFE1
  5634                           indf2	equ	0xFDF
  5635                           fsr2h	equ	0xFDA
  5636                           fsr2l	equ	0xFD9
  5637                           status	equ	0xFD8
  5638                           
  5639 ;; *************** function _Lcd_Out *****************
  5640 ;; Defined at:
  5641 ;;		line 84 in file "../lcd.h"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  y               1    wreg     unsigned char 
  5644 ;;  x               1   63[COMRAM] unsigned char 
  5645 ;;  buffer          2   64[COMRAM] PTR const unsigned char 
  5646 ;;		 -> Convert_diasem@buffer_dia(20), STR_73(1), STR_71(1), STR_69(1), 
  5647 ;;		 -> STR_67(1), STR_65(1), STR_63(1), STR_61(1), 
  5648 ;;		 -> STR_59(1), STR_57(1), STR_56(1), STR_55(1), 
  5649 ;;		 -> STR_53(1), STR_51(1), STR_49(1), STR_47(1), 
  5650 ;;		 -> STR_45(1), STR_43(1), STR_41(1), STR_39(1), 
  5651 ;;		 -> STR_36(12), STR_33(6), STR_32(1), STR_30(1), 
  5652 ;;		 -> STR_28(1), STR_26(1), STR_24(1), STR_22(1), 
  5653 ;;		 -> STR_21(1), STR_20(1), STR_19(1), STR_17(1), 
  5654 ;;		 -> STR_15(1), STR_13(1), STR_11(1), STR_9(1), 
  5655 ;;		 -> STR_8(1), STR_7(18), STR_4(21), STR_3(20), 
  5656 ;;		 -> STR_2(19), buffer1(20), 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  y               1   66[COMRAM] unsigned char 
  5659 ;;  data            1   67[COMRAM] unsigned char 
  5660 ;; Return value:  Size  Location     Type
  5661 ;;		None               void
  5662 ;; Registers used:
  5663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5669 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5672 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5673 ;;Total ram usage:        5 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; Hardware stack levels required when called:    1
  5676 ;; This function calls:
  5677 ;;		_Lcd_Chr_CP
  5678 ;;		_Lcd_Cmd
  5679 ;; This function is called by:
  5680 ;;		_main
  5681 ;;		_V_Principal
  5682 ;;		_V_ProgReloj
  5683 ;;		_V_ProgRiegoIlum
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text13
  5688  00DFCA                     __ptext13:
  5689                           	opt stack 0
  5690  00DFCA                     _Lcd_Out:
  5691                           	opt stack 28
  5692                           
  5693                           ; BSR set to: 15
  5694                           ;incstack = 0
  5695                           ;Lcd_Out@y stored from wreg
  5696  00DFCA  6E43               	movwf	Lcd_Out@y,c
  5697                           
  5698                           ;lcd.h: 86: unsigned char data;
  5699                           ;lcd.h: 87: switch (y)
  5700  00DFCC  D00D               	goto	l2878
  5701  00DFCE                     l2868:
  5702  00DFCE  5040               	movf	Lcd_Out@x,w,c
  5703  00DFD0  0F80               	addlw	128
  5704  00DFD2  D008               	goto	L5
  5705  00DFD4                     l2870:
  5706  00DFD4  5040               	movf	Lcd_Out@x,w,c
  5707  00DFD6  0FC0               	addlw	192
  5708  00DFD8  D005               	goto	L5
  5709  00DFDA                     l2872:
  5710  00DFDA  5040               	movf	Lcd_Out@x,w,c
  5711  00DFDC  0F94               	addlw	148
  5712  00DFDE  D002               	goto	L5
  5713  00DFE0                     l2874:
  5714  00DFE0  5040               	movf	Lcd_Out@x,w,c
  5715  00DFE2  0FD4               	addlw	212
  5716  00DFE4                     L5:
  5717  00DFE4  6E44               	movwf	Lcd_Out@data,c
  5718                           
  5719                           ;lcd.h: 94: }
  5720                           
  5721                           ;lcd.h: 93: default: break;
  5722  00DFE6  D00E               	goto	l2880
  5723  00DFE8                     l2878:
  5724  00DFE8  5043               	movf	Lcd_Out@y,w,c
  5725                           
  5726                           ; Switch size 1, requested type "space"
  5727                           ; Number of cases is 4, Range of values is 1 to 4
  5728                           ; switch strategies available:
  5729                           ; Name         Instructions Cycles
  5730                           ; simple_byte           13     7 (average)
  5731                           ;	Chosen strategy is simple_byte
  5732  00DFEA  0A01               	xorlw	1	; case 1
  5733  00DFEC  B4D8               	btfsc	status,2,c
  5734  00DFEE  D7EF               	goto	l2868
  5735  00DFF0  0A03               	xorlw	3	; case 2
  5736  00DFF2  B4D8               	btfsc	status,2,c
  5737  00DFF4  D7EF               	goto	l2870
  5738  00DFF6  0A01               	xorlw	1	; case 3
  5739  00DFF8  B4D8               	btfsc	status,2,c
  5740  00DFFA  D7EF               	goto	l2872
  5741  00DFFC  0A07               	xorlw	7	; case 4
  5742  00DFFE  B4D8               	btfsc	status,2,c
  5743  00E000  D7EF               	goto	l2874
  5744  00E002  D000               	goto	l2880
  5745  00E004                     l2880:
  5746                           
  5747                           ;lcd.h: 95: Lcd_Cmd(data);
  5748  00E004  5044               	movf	Lcd_Out@data,w,c
  5749  00E006  EC7B  F072         	call	_Lcd_Cmd
  5750                           
  5751                           ;lcd.h: 96: while(*buffer)
  5752  00E00A  D015               	goto	l2886
  5753  00E00C                     l2882:
  5754                           
  5755                           ;lcd.h: 97: {
  5756                           ;lcd.h: 98: Lcd_Chr_CP(*buffer);
  5757  00E00C  C041  FFF6         	movff	Lcd_Out@buffer,tblptrl
  5758  00E010  C042  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  5759  00E014  6AF8               	clrf	tblptru,c
  5760  00E016  0E0E               	movlw	(high __ramtop+-1)
  5761  00E018  64F7               	cpfsgt	tblptrh,c
  5762  00E01A  D003               	bra	u2477
  5763  00E01C  0008               	tblrd		*
  5764  00E01E  50F5               	movf	tablat,w,c
  5765  00E020  D005               	bra	u2470
  5766  00E022                     u2477:
  5767  00E022  CFF6 FFD9          	movff	tblptrl,fsr2l
  5768  00E026  CFF7 FFDA          	movff	tblptrh,fsr2h
  5769  00E02A  50DF               	movf	indf2,w,c
  5770  00E02C                     u2470:
  5771  00E02C  EC0B  F073         	call	_Lcd_Chr_CP
  5772                           
  5773                           ;lcd.h: 99: buffer++;
  5774  00E030  4A41               	infsnz	Lcd_Out@buffer,f,c
  5775  00E032  2A42               	incf	Lcd_Out@buffer+1,f,c
  5776  00E034  D000               	goto	l2886
  5777  00E036                     l2886:
  5778  00E036  C041  FFF6         	movff	Lcd_Out@buffer,tblptrl
  5779  00E03A  C042  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  5780  00E03E  6AF8               	clrf	tblptru,c
  5781  00E040  0E0E               	movlw	(high __ramtop+-1)
  5782  00E042  64F7               	cpfsgt	tblptrh,c
  5783  00E044  D003               	bra	u2487
  5784  00E046  0008               	tblrd		*
  5785  00E048  50F5               	movf	tablat,w,c
  5786  00E04A  D005               	bra	u2480
  5787  00E04C                     u2487:
  5788  00E04C  CFF6 FFD9          	movff	tblptrl,fsr2l
  5789  00E050  CFF7 FFDA          	movff	tblptrh,fsr2h
  5790  00E054  50DF               	movf	indf2,w,c
  5791  00E056                     u2480:
  5792  00E056  0900               	iorlw	0
  5793  00E058  A4D8               	btfss	status,2,c
  5794  00E05A  D7D8               	goto	l2882
  5795                           
  5796                           ;lcd.h: 100: }
  5797                           ;lcd.h: 101: return;
  5798  00E05C  0012               	return		;funcret
  5799  00E05E                     __end_of_Lcd_Out:
  5800                           	opt stack 0
  5801                           tblptru	equ	0xFF8
  5802                           tblptrh	equ	0xFF7
  5803                           tblptrl	equ	0xFF6
  5804                           tablat	equ	0xFF5
  5805                           prodh	equ	0xFF4
  5806                           prodl	equ	0xFF3
  5807                           intcon	equ	0xFF2
  5808                           postinc0	equ	0xFEE
  5809                           wreg	equ	0xFE8
  5810                           postdec1	equ	0xFE5
  5811                           fsr1l	equ	0xFE1
  5812                           indf2	equ	0xFDF
  5813                           fsr2h	equ	0xFDA
  5814                           fsr2l	equ	0xFD9
  5815                           status	equ	0xFD8
  5816                           
  5817 ;; *************** function _Lcd_Chr_CP *****************
  5818 ;; Defined at:
  5819 ;;		line 126 in file "../lcd.h"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  data            1    wreg     unsigned char 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;  data            1    2[COMRAM] unsigned char 
  5824 ;; Return value:  Size  Location     Type
  5825 ;;		None               void
  5826 ;; Registers used:
  5827 ;;		wreg, status,2, status,0
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;Total ram usage:        3 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; This function calls:
  5840 ;;		Nothing
  5841 ;; This function is called by:
  5842 ;;		_Lcd_Out
  5843 ;;		_Lcd_Out2
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text14
  5848  00E616                     __ptext14:
  5849                           	opt stack 0
  5850  00E616                     _Lcd_Chr_CP:
  5851                           	opt stack 28
  5852                           
  5853                           ;incstack = 0
  5854                           ;Lcd_Chr_CP@data stored from wreg
  5855  00E616  6E03               	movwf	Lcd_Chr_CP@data,c
  5856                           
  5857                           ;lcd.h: 127: LATBbits.LATB4 = 0; LATBbits.LATB5 = 1;
  5858  00E618  988A               	bcf	3978,4,c	;volatile
  5859  00E61A  8A8A               	bsf	3978,5,c	;volatile
  5860                           
  5861                           ;lcd.h: 128: LATBbits.LATB0 = (data & 0b10000000)>>7; LATBbits.LATB1 = (data & 0b0100000
      +                          0)>>6;
  5862  00E61C  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  5863  00E61E  AE03               	btfss	Lcd_Chr_CP@data,7,c
  5864  00E620  D001               	bra	u1935
  5865  00E622  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  5866  00E624                     u1935:
  5867  00E624  0E01               	movlw	1
  5868  00E626  1601               	andwf	??_Lcd_Chr_CP,f,c
  5869  00E628  508A               	movf	3978,w,c	;volatile
  5870  00E62A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5871  00E62C  0BFE               	andlw	-2
  5872  00E62E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5873  00E630  6E8A               	movwf	3978,c	;volatile
  5874  00E632  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5875  00E636  0E06               	movlw	6
  5876  00E638  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  5877  00E63A                     u1945:
  5878  00E63A  90D8               	bcf	status,0,c
  5879  00E63C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5880  00E63E  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  5881  00E640  D7FC               	goto	u1945
  5882  00E642  0E01               	movlw	1
  5883  00E644  1601               	andwf	??_Lcd_Chr_CP,f,c
  5884  00E646  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5885  00E648  508A               	movf	3978,w,c	;volatile
  5886  00E64A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5887  00E64C  0BFD               	andlw	-3
  5888  00E64E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5889  00E650  6E8A               	movwf	3978,c	;volatile
  5890                           
  5891                           ;lcd.h: 129: LATBbits.LATB2 = (data & 0b00100000)>>5; LATBbits.LATB3 = (data & 0b0001000
      +                          0)>>4;
  5892  00E652  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5893  00E656  0E05               	movlw	5
  5894  00E658  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  5895  00E65A                     u1955:
  5896  00E65A  90D8               	bcf	status,0,c
  5897  00E65C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5898  00E65E  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  5899  00E660  D7FC               	goto	u1955
  5900  00E662  0E01               	movlw	1
  5901  00E664  1601               	andwf	??_Lcd_Chr_CP,f,c
  5902  00E666  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5903  00E668  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5904  00E66A  508A               	movf	3978,w,c	;volatile
  5905  00E66C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5906  00E66E  0BFB               	andlw	-5
  5907  00E670  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5908  00E672  6E8A               	movwf	3978,c	;volatile
  5909  00E674  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5910  00E678  3A01               	swapf	??_Lcd_Chr_CP,f,c
  5911  00E67A  0E0F               	movlw	15
  5912  00E67C  1601               	andwf	??_Lcd_Chr_CP,f,c
  5913  00E67E  0E01               	movlw	1
  5914  00E680  1601               	andwf	??_Lcd_Chr_CP,f,c
  5915  00E682  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5916  00E684  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5917  00E686  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5918  00E688  508A               	movf	3978,w,c	;volatile
  5919  00E68A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5920  00E68C  0BF7               	andlw	-9
  5921  00E68E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5922  00E690  6E8A               	movwf	3978,c	;volatile
  5923                           
  5924                           ;lcd.h: 130: _delay(10);
  5925  00E692  0E03               	movlw	3
  5926  00E694                     u3767:
  5927  00E694  2EE8               	decfsz	wreg,f,c
  5928  00E696  D7FE               	goto	u3767
  5929  00E698  F000               	nop	
  5930                           
  5931                           ;lcd.h: 131: LATBbits.LATB4 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); LATBb
      +                          its.LATB4 = 0;
  5932  00E69A  888A               	bsf	3978,4,c	;volatile
  5933  00E69C  0E03               	movlw	3
  5934  00E69E                     u3777:
  5935  00E69E  2EE8               	decfsz	wreg,f,c
  5936  00E6A0  D7FE               	goto	u3777
  5937  00E6A2  F000               	nop	
  5938  00E6A4  988A               	bcf	3978,4,c	;volatile
  5939                           
  5940                           ;lcd.h: 132: LATBbits.LATB0 = (data & 0b00001000)>>3; LATBbits.LATB1 = (data & 0b0000010
      +                          0)>>2;
  5941  00E6A6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5942  00E6AA  90D8               	bcf	status,0,c
  5943  00E6AC  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5944  00E6AE  90D8               	bcf	status,0,c
  5945  00E6B0  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5946  00E6B2  90D8               	bcf	status,0,c
  5947  00E6B4  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5948  00E6B6  0E01               	movlw	1
  5949  00E6B8  1601               	andwf	??_Lcd_Chr_CP,f,c
  5950  00E6BA  508A               	movf	3978,w,c	;volatile
  5951  00E6BC  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5952  00E6BE  0BFE               	andlw	-2
  5953  00E6C0  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5954  00E6C2  6E8A               	movwf	3978,c	;volatile
  5955  00E6C4  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5956  00E6C8  90D8               	bcf	status,0,c
  5957  00E6CA  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5958  00E6CC  90D8               	bcf	status,0,c
  5959  00E6CE  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5960  00E6D0  0E01               	movlw	1
  5961  00E6D2  1601               	andwf	??_Lcd_Chr_CP,f,c
  5962  00E6D4  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5963  00E6D6  508A               	movf	3978,w,c	;volatile
  5964  00E6D8  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5965  00E6DA  0BFD               	andlw	-3
  5966  00E6DC  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5967  00E6DE  6E8A               	movwf	3978,c	;volatile
  5968                           
  5969                           ;lcd.h: 133: LATBbits.LATB2 = (data & 0b00000010)>>1; LATBbits.LATB3 = (data & 0b0000000
      +                          1);
  5970  00E6E0  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5971  00E6E4  90D8               	bcf	status,0,c
  5972  00E6E6  3201               	rrcf	??_Lcd_Chr_CP,f,c
  5973  00E6E8  0E01               	movlw	1
  5974  00E6EA  1601               	andwf	??_Lcd_Chr_CP,f,c
  5975  00E6EC  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5976  00E6EE  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5977  00E6F0  508A               	movf	3978,w,c	;volatile
  5978  00E6F2  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5979  00E6F4  0BFB               	andlw	-5
  5980  00E6F6  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5981  00E6F8  6E8A               	movwf	3978,c	;volatile
  5982  00E6FA  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  5983  00E6FE  0E01               	movlw	1
  5984  00E700  1601               	andwf	??_Lcd_Chr_CP,f,c
  5985  00E702  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5986  00E704  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5987  00E706  4601               	rlncf	??_Lcd_Chr_CP,f,c
  5988  00E708  508A               	movf	3978,w,c	;volatile
  5989  00E70A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5990  00E70C  0BF7               	andlw	-9
  5991  00E70E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  5992  00E710  6E8A               	movwf	3978,c	;volatile
  5993                           
  5994                           ;lcd.h: 134: _delay(10);
  5995  00E712  0E03               	movlw	3
  5996  00E714                     u3787:
  5997  00E714  2EE8               	decfsz	wreg,f,c
  5998  00E716  D7FE               	goto	u3787
  5999  00E718  F000               	nop	
  6000                           
  6001                           ;lcd.h: 135: LATBbits.LATB4 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); LATBb
      +                          its.LATB4 = 0;
  6002  00E71A  888A               	bsf	3978,4,c	;volatile
  6003  00E71C  0E03               	movlw	3
  6004  00E71E                     u3797:
  6005  00E71E  2EE8               	decfsz	wreg,f,c
  6006  00E720  D7FE               	goto	u3797
  6007  00E722  F000               	nop	
  6008  00E724  988A               	bcf	3978,4,c	;volatile
  6009                           
  6010                           ;lcd.h: 136: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long)((5
      +                          500)*(8000000/4000000.0)));
  6011  00E726  0E03               	movlw	3
  6012  00E728                     u3807:
  6013  00E728  2EE8               	decfsz	wreg,f,c
  6014  00E72A  D7FE               	goto	u3807
  6015  00E72C  F000               	nop	
  6016  00E72E  0E0F               	movlw	15
  6017  00E730  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  6018  00E732  0E48               	movlw	72
  6019  00E734                     u3817:
  6020  00E734  2EE8               	decfsz	wreg,f,c
  6021  00E736  D7FE               	goto	u3817
  6022  00E738  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  6023  00E73A  D7FC               	goto	u3817
  6024  00E73C  0012               	return		;funcret
  6025  00E73E                     __end_of_Lcd_Chr_CP:
  6026                           	opt stack 0
  6027                           tblptru	equ	0xFF8
  6028                           tblptrh	equ	0xFF7
  6029                           tblptrl	equ	0xFF6
  6030                           tablat	equ	0xFF5
  6031                           prodh	equ	0xFF4
  6032                           prodl	equ	0xFF3
  6033                           intcon	equ	0xFF2
  6034                           postinc0	equ	0xFEE
  6035                           wreg	equ	0xFE8
  6036                           postdec1	equ	0xFE5
  6037                           fsr1l	equ	0xFE1
  6038                           indf2	equ	0xFDF
  6039                           fsr2h	equ	0xFDA
  6040                           fsr2l	equ	0xFD9
  6041                           status	equ	0xFD8
  6042                           
  6043 ;; *************** function _Convert_diasem *****************
  6044 ;; Defined at:
  6045 ;;		line 584 in file "../main.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  dia             2   39[COMRAM] int 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  buffer_dia     20   43[COMRAM] unsigned char [20]
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  2   39[COMRAM] PTR unsigned char 
  6052 ;; Registers used:
  6053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6060 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6062 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6063 ;;Total ram usage:       24 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    2
  6066 ;; This function calls:
  6067 ;;		_sprintf
  6068 ;; This function is called by:
  6069 ;;		_V_Principal
  6070 ;;		_V_ProgReloj
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text15
  6075  00E3D8                     __ptext15:
  6076                           	opt stack 0
  6077  00E3D8                     _Convert_diasem:
  6078                           	opt stack 27
  6079                           
  6080                           ;main.c: 586: unsigned char buffer_dia[20];
  6081                           ;main.c: 588: switch(dia){
  6082                           
  6083                           ;incstack = 0
  6084  00E3D8  D069               	goto	l3006
  6085  00E3DA                     l2990:
  6086                           
  6087                           ;main.c: 590: sprintf(buffer_dia,"%s", "Domingo             ");
  6088  00E3DA  0E2C               	movlw	low Convert_diasem@buffer_dia
  6089  00E3DC  6E0D               	movwf	sprintf@sp,c
  6090  00E3DE  0E00               	movlw	high Convert_diasem@buffer_dia
  6091  00E3E0  6E0E               	movwf	sprintf@sp+1,c
  6092  00E3E2  0EF3               	movlw	low STR_74
  6093  00E3E4  6E0F               	movwf	sprintf@f,c
  6094  00E3E6  0EFF               	movlw	high STR_74
  6095  00E3E8  6E10               	movwf	sprintf@f+1,c
  6096  00E3EA  0E40               	movlw	low STR_75
  6097  00E3EC  6E11               	movwf	?_sprintf+4,c
  6098  00E3EE  0EFF               	movlw	high STR_75
  6099  00E3F0  6E12               	movwf	?_sprintf+5,c
  6100  00E3F2  EC95  F076         	call	_sprintf	;wreg free
  6101                           
  6102                           ;main.c: 591: break;
  6103  00E3F6  D079               	goto	l3008
  6104  00E3F8                     l2992:
  6105                           
  6106                           ;main.c: 594: sprintf(buffer_dia,"%s", "Lunes               ");
  6107  00E3F8  0E2C               	movlw	low Convert_diasem@buffer_dia
  6108  00E3FA  6E0D               	movwf	sprintf@sp,c
  6109  00E3FC  0E00               	movlw	high Convert_diasem@buffer_dia
  6110  00E3FE  6E0E               	movwf	sprintf@sp+1,c
  6111  00E400  0EF3               	movlw	low STR_74
  6112  00E402  6E0F               	movwf	sprintf@f,c
  6113  00E404  0EFF               	movlw	high STR_74
  6114  00E406  6E10               	movwf	sprintf@f+1,c
  6115  00E408  0EEC               	movlw	low STR_77
  6116  00E40A  6E11               	movwf	?_sprintf+4,c
  6117  00E40C  0EFE               	movlw	high STR_77
  6118  00E40E  6E12               	movwf	?_sprintf+5,c
  6119  00E410  EC95  F076         	call	_sprintf	;wreg free
  6120                           
  6121                           ;main.c: 595: break;
  6122  00E414  D06A               	goto	l3008
  6123  00E416                     l2994:
  6124                           
  6125                           ;main.c: 598: sprintf(buffer_dia,"%s", "Martes              ");
  6126  00E416  0E2C               	movlw	low Convert_diasem@buffer_dia
  6127  00E418  6E0D               	movwf	sprintf@sp,c
  6128  00E41A  0E00               	movlw	high Convert_diasem@buffer_dia
  6129  00E41C  6E0E               	movwf	sprintf@sp+1,c
  6130  00E41E  0EF3               	movlw	low STR_74
  6131  00E420  6E0F               	movwf	sprintf@f,c
  6132  00E422  0EFF               	movlw	high STR_74
  6133  00E424  6E10               	movwf	sprintf@f+1,c
  6134  00E426  0E16               	movlw	low STR_79
  6135  00E428  6E11               	movwf	?_sprintf+4,c
  6136  00E42A  0EFF               	movlw	high STR_79
  6137  00E42C  6E12               	movwf	?_sprintf+5,c
  6138  00E42E  EC95  F076         	call	_sprintf	;wreg free
  6139                           
  6140                           ;main.c: 599: break;
  6141  00E432  D05B               	goto	l3008
  6142  00E434                     l2996:
  6143                           
  6144                           ;main.c: 602: sprintf(buffer_dia,"%s", "Miercoles           ");
  6145  00E434  0E2C               	movlw	low Convert_diasem@buffer_dia
  6146  00E436  6E0D               	movwf	sprintf@sp,c
  6147  00E438  0E00               	movlw	high Convert_diasem@buffer_dia
  6148  00E43A  6E0E               	movwf	sprintf@sp+1,c
  6149  00E43C  0EF3               	movlw	low STR_74
  6150  00E43E  6E0F               	movwf	sprintf@f,c
  6151  00E440  0EFF               	movlw	high STR_74
  6152  00E442  6E10               	movwf	sprintf@f+1,c
  6153  00E444  0E6A               	movlw	low STR_81
  6154  00E446  6E11               	movwf	?_sprintf+4,c
  6155  00E448  0EFF               	movlw	high STR_81
  6156  00E44A  6E12               	movwf	?_sprintf+5,c
  6157  00E44C  EC95  F076         	call	_sprintf	;wreg free
  6158                           
  6159                           ;main.c: 603: break;
  6160  00E450  D04C               	goto	l3008
  6161  00E452                     l2998:
  6162                           
  6163                           ;main.c: 606: sprintf(buffer_dia,"%s", "Jueves              ");
  6164  00E452  0E2C               	movlw	low Convert_diasem@buffer_dia
  6165  00E454  6E0D               	movwf	sprintf@sp,c
  6166  00E456  0E00               	movlw	high Convert_diasem@buffer_dia
  6167  00E458  6E0E               	movwf	sprintf@sp+1,c
  6168  00E45A  0EF3               	movlw	low STR_74
  6169  00E45C  6E0F               	movwf	sprintf@f,c
  6170  00E45E  0EFF               	movlw	high STR_74
  6171  00E460  6E10               	movwf	sprintf@f+1,c
  6172  00E462  0E2B               	movlw	low STR_83
  6173  00E464  6E11               	movwf	?_sprintf+4,c
  6174  00E466  0EFF               	movlw	high STR_83
  6175  00E468  6E12               	movwf	?_sprintf+5,c
  6176  00E46A  EC95  F076         	call	_sprintf	;wreg free
  6177                           
  6178                           ;main.c: 607: break;
  6179  00E46E  D03D               	goto	l3008
  6180  00E470                     l3000:
  6181                           
  6182                           ;main.c: 610: sprintf(buffer_dia,"%s", "Viernes             ");
  6183  00E470  0E2C               	movlw	low Convert_diasem@buffer_dia
  6184  00E472  6E0D               	movwf	sprintf@sp,c
  6185  00E474  0E00               	movlw	high Convert_diasem@buffer_dia
  6186  00E476  6E0E               	movwf	sprintf@sp+1,c
  6187  00E478  0EF3               	movlw	low STR_74
  6188  00E47A  6E0F               	movwf	sprintf@f,c
  6189  00E47C  0EFF               	movlw	high STR_74
  6190  00E47E  6E10               	movwf	sprintf@f+1,c
  6191  00E480  0E55               	movlw	low STR_85
  6192  00E482  6E11               	movwf	?_sprintf+4,c
  6193  00E484  0EFF               	movlw	high STR_85
  6194  00E486  6E12               	movwf	?_sprintf+5,c
  6195  00E488  EC95  F076         	call	_sprintf	;wreg free
  6196                           
  6197                           ;main.c: 611: break;
  6198  00E48C  D02E               	goto	l3008
  6199  00E48E                     l3002:
  6200                           
  6201                           ;main.c: 614: sprintf(buffer_dia,"%s", "Sabado              ");
  6202  00E48E  0E2C               	movlw	low Convert_diasem@buffer_dia
  6203  00E490  6E0D               	movwf	sprintf@sp,c
  6204  00E492  0E00               	movlw	high Convert_diasem@buffer_dia
  6205  00E494  6E0E               	movwf	sprintf@sp+1,c
  6206  00E496  0EF3               	movlw	low STR_74
  6207  00E498  6E0F               	movwf	sprintf@f,c
  6208  00E49A  0EFF               	movlw	high STR_74
  6209  00E49C  6E10               	movwf	sprintf@f+1,c
  6210  00E49E  0E01               	movlw	low STR_87
  6211  00E4A0  6E11               	movwf	?_sprintf+4,c
  6212  00E4A2  0EFF               	movlw	high STR_87
  6213  00E4A4  6E12               	movwf	?_sprintf+5,c
  6214  00E4A6  EC95  F076         	call	_sprintf	;wreg free
  6215                           
  6216                           ;main.c: 616: }
  6217                           ;main.c: 617: }
  6218                           
  6219                           ;main.c: 615: break;
  6220  00E4AA  D01F               	goto	l3008
  6221  00E4AC                     l3006:
  6222  00E4AC  C028  F02A         	movff	Convert_diasem@dia,??_Convert_diasem
  6223  00E4B0  C029  F02B         	movff	Convert_diasem@dia+1,??_Convert_diasem+1
  6224                           
  6225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6226                           ; Switch size 1, requested type "space"
  6227                           ; Number of cases is 1, Range of values is 0 to 0
  6228                           ; switch strategies available:
  6229                           ; Name         Instructions Cycles
  6230                           ; simple_byte            4     3 (average)
  6231                           ;	Chosen strategy is simple_byte
  6232  00E4B4  502B               	movf	??_Convert_diasem+1,w,c
  6233  00E4B6  0A00               	xorlw	0	; case 0
  6234  00E4B8  A4D8               	btfss	status,2,c
  6235  00E4BA  D017               	goto	l3008
  6236                           
  6237                           ; Switch size 1, requested type "space"
  6238                           ; Number of cases is 7, Range of values is 0 to 6
  6239                           ; switch strategies available:
  6240                           ; Name         Instructions Cycles
  6241                           ; simple_byte           22    12 (average)
  6242                           ;	Chosen strategy is simple_byte
  6243  00E4BC  502A               	movf	??_Convert_diasem,w,c
  6244  00E4BE  0A00               	xorlw	0	; case 0
  6245  00E4C0  B4D8               	btfsc	status,2,c
  6246  00E4C2  D78B               	goto	l2990
  6247  00E4C4  0A01               	xorlw	1	; case 1
  6248  00E4C6  B4D8               	btfsc	status,2,c
  6249  00E4C8  D797               	goto	l2992
  6250  00E4CA  0A03               	xorlw	3	; case 2
  6251  00E4CC  B4D8               	btfsc	status,2,c
  6252  00E4CE  D7A3               	goto	l2994
  6253  00E4D0  0A01               	xorlw	1	; case 3
  6254  00E4D2  B4D8               	btfsc	status,2,c
  6255  00E4D4  D7AF               	goto	l2996
  6256  00E4D6  0A07               	xorlw	7	; case 4
  6257  00E4D8  B4D8               	btfsc	status,2,c
  6258  00E4DA  D7BB               	goto	l2998
  6259  00E4DC  0A01               	xorlw	1	; case 5
  6260  00E4DE  B4D8               	btfsc	status,2,c
  6261  00E4E0  D7C7               	goto	l3000
  6262  00E4E2  0A03               	xorlw	3	; case 6
  6263  00E4E4  B4D8               	btfsc	status,2,c
  6264  00E4E6  D7D3               	goto	l3002
  6265  00E4E8  D000               	goto	l3008
  6266  00E4EA                     l3008:
  6267                           
  6268                           ;main.c: 618: return buffer_dia;
  6269  00E4EA  0E2C               	movlw	low Convert_diasem@buffer_dia
  6270  00E4EC  6E28               	movwf	?_Convert_diasem,c
  6271  00E4EE  0E00               	movlw	high Convert_diasem@buffer_dia
  6272  00E4F0  6E29               	movwf	?_Convert_diasem+1,c
  6273  00E4F2  0012               	return	
  6274  00E4F4  0012               	return		;funcret
  6275  00E4F6                     __end_of_Convert_diasem:
  6276                           	opt stack 0
  6277                           tblptru	equ	0xFF8
  6278                           tblptrh	equ	0xFF7
  6279                           tblptrl	equ	0xFF6
  6280                           tablat	equ	0xFF5
  6281                           prodh	equ	0xFF4
  6282                           prodl	equ	0xFF3
  6283                           intcon	equ	0xFF2
  6284                           postinc0	equ	0xFEE
  6285                           wreg	equ	0xFE8
  6286                           postdec1	equ	0xFE5
  6287                           fsr1l	equ	0xFE1
  6288                           indf2	equ	0xFDF
  6289                           fsr2h	equ	0xFDA
  6290                           fsr2l	equ	0xFD9
  6291                           status	equ	0xFD8
  6292                           
  6293 ;; *************** function _sprintf *****************
  6294 ;; Defined at:
  6295 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  sp              2   12[COMRAM] PTR unsigned char 
  6298 ;;		 -> Convert_diasem@buffer_dia(20), buffer1(20), 
  6299 ;;  f               2   14[COMRAM] PTR const unsigned char 
  6300 ;;		 -> STR_86(3), STR_84(3), STR_82(3), STR_80(3), 
  6301 ;;		 -> STR_78(3), STR_76(3), STR_74(3), STR_72(5), 
  6302 ;;		 -> STR_70(5), STR_68(5), STR_66(5), STR_64(5), 
  6303 ;;		 -> STR_62(5), STR_60(5), STR_58(5), STR_54(5), 
  6304 ;;		 -> STR_52(5), STR_50(5), STR_48(5), STR_46(5), 
  6305 ;;		 -> STR_44(5), STR_42(5), STR_40(5), STR_38(14), 
  6306 ;;		 -> STR_37(15), STR_35(14), STR_34(15), STR_31(5), 
  6307 ;;		 -> STR_29(5), STR_27(5), STR_25(5), STR_23(5), 
  6308 ;;		 -> STR_18(5), STR_16(5), STR_14(5), STR_12(5), 
  6309 ;;		 -> STR_10(5), STR_6(28), STR_5(28), STR_1(5), 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;  tmpval          4    0        struct .
  6312 ;;  width           2   36[COMRAM] int 
  6313 ;;  len             2   34[COMRAM] unsigned int 
  6314 ;;  cp              2   32[COMRAM] PTR const unsigned char 
  6315 ;;		 -> STR_88(7), STR_87(21), STR_85(21), STR_83(21), 
  6316 ;;		 -> STR_81(21), STR_79(21), STR_77(21), STR_75(21), 
  6317 ;;  ap              2   30[COMRAM] PTR void [1]
  6318 ;;		 -> ?_sprintf(2), 
  6319 ;;  val             2   27[COMRAM] unsigned int 
  6320 ;;  c               1   38[COMRAM] char 
  6321 ;;  prec            1   29[COMRAM] char 
  6322 ;;  flag            1   26[COMRAM] unsigned char 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  2   12[COMRAM] int 
  6325 ;; Registers used:
  6326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6332 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6333 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6334 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6335 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;Total ram usage:       27 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    1
  6339 ;; This function calls:
  6340 ;;		___lwdiv
  6341 ;;		___lwmod
  6342 ;;		___wmul
  6343 ;;		_isdigit
  6344 ;; This function is called by:
  6345 ;;		_main
  6346 ;;		_V_Principal
  6347 ;;		_V_ProgReloj
  6348 ;;		_V_ProgRiegoIlum
  6349 ;;		_Convert_diasem
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text16
  6354  00ED2A                     __ptext16:
  6355                           	opt stack 0
  6356  00ED2A                     _sprintf:
  6357                           	opt stack 29
  6358                           
  6359                           ;doprnt.c: 494: va_list ap;
  6360                           ;doprnt.c: 499: signed char c;
  6361                           ;doprnt.c: 501: int width;
  6362                           ;doprnt.c: 506: signed char prec;
  6363                           ;doprnt.c: 508: unsigned char flag;
  6364                           ;doprnt.c: 523: union {
  6365                           ;doprnt.c: 524: unsigned long vd;
  6366                           ;doprnt.c: 525: double integ;
  6367                           ;doprnt.c: 526: } tmpval;
  6368                           ;doprnt.c: 528: unsigned int val;
  6369                           ;doprnt.c: 529: unsigned len;
  6370                           ;doprnt.c: 530: const char * cp;
  6371                           ;doprnt.c: 533: *ap = __va_start();
  6372                           
  6373                           ;incstack = 0
  6374  00ED2A  0E11               	movlw	low (?_sprintf+4)
  6375  00ED2C  6E1F               	movwf	sprintf@ap,c
  6376  00ED2E  0E00               	movlw	high (?_sprintf+4)
  6377  00ED30  6E20               	movwf	sprintf@ap+1,c
  6378                           
  6379                           ;doprnt.c: 536: while(c = *f++) {
  6380  00ED32  D182               	goto	l2622
  6381  00ED34                     l2506:
  6382                           
  6383                           ;doprnt.c: 538: if(c != '%')
  6384  00ED34  0E25               	movlw	37
  6385  00ED36  1827               	xorwf	sprintf@c,w,c
  6386  00ED38  B4D8               	btfsc	status,2,c
  6387  00ED3A  D009               	goto	l2512
  6388                           
  6389                           ;doprnt.c: 540: {
  6390                           ;doprnt.c: 541: ((*sp++ = (c)));
  6391  00ED3C  C00D  FFD9         	movff	sprintf@sp,fsr2l
  6392  00ED40  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  6393  00ED44  C027  FFDF         	movff	sprintf@c,indf2
  6394  00ED48  4A0D               	infsnz	sprintf@sp,f,c
  6395  00ED4A  2A0E               	incf	sprintf@sp+1,f,c
  6396                           
  6397                           ;doprnt.c: 542: continue;
  6398  00ED4C  D175               	goto	l2622
  6399  00ED4E                     l2512:
  6400                           
  6401                           ;doprnt.c: 543: }
  6402                           ;doprnt.c: 546: width = 0;
  6403  00ED4E  0E00               	movlw	0
  6404  00ED50  6E26               	movwf	sprintf@width+1,c
  6405  00ED52  0E00               	movlw	0
  6406  00ED54  6E25               	movwf	sprintf@width,c
  6407                           
  6408                           ;doprnt.c: 548: flag = 0;
  6409  00ED56  0E00               	movlw	0
  6410  00ED58  6E1B               	movwf	sprintf@flag,c
  6411                           
  6412                           ;doprnt.c: 551: switch(*f) {
  6413                           
  6414                           ;doprnt.c: 550: for(;;) {
  6415  00ED5A  D005               	goto	l2518
  6416  00ED5C                     l2514:
  6417                           
  6418                           ;doprnt.c: 580: flag |= 0x04;
  6419  00ED5C  841B               	bsf	sprintf@flag,2,c
  6420                           
  6421                           ;doprnt.c: 581: f++;
  6422  00ED5E  4A0F               	infsnz	sprintf@f,f,c
  6423  00ED60  2A10               	incf	sprintf@f+1,f,c
  6424                           
  6425                           ;doprnt.c: 582: continue;
  6426  00ED62  D001               	goto	l2518
  6427                           
  6428                           ;doprnt.c: 584: }
  6429  00ED64  D00B               	goto	l2520
  6430  00ED66                     l2518:
  6431  00ED66  C00F  FFF6         	movff	sprintf@f,tblptrl
  6432  00ED6A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  6433  00ED6E                     	if	0	;tblptru may be non-zero
  6434  00ED6E                     	endif
  6435  00ED6E                     	if	0	;tblptru may be non-zero
  6436  00ED6E                     	endif
  6437  00ED6E  0008               	tblrd		*
  6438  00ED70  50F5               	movf	tablat,w,c
  6439                           
  6440                           ; Switch size 1, requested type "space"
  6441                           ; Number of cases is 1, Range of values is 48 to 48
  6442                           ; switch strategies available:
  6443                           ; Name         Instructions Cycles
  6444                           ; simple_byte            4     3 (average)
  6445                           ;	Chosen strategy is simple_byte
  6446  00ED72  0A30               	xorlw	48	; case 48
  6447  00ED74  B4D8               	btfsc	status,2,c
  6448  00ED76  D7F2               	goto	l2514
  6449                           
  6450                           ;doprnt.c: 585: break;
  6451  00ED78  D001               	goto	l2520
  6452                           
  6453                           ;doprnt.c: 586: }
  6454  00ED7A  D7F5               	goto	l2518
  6455  00ED7C                     l2520:
  6456                           
  6457                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6458  00ED7C  C00F  FFF6         	movff	sprintf@f,tblptrl
  6459  00ED80  C010  FFF7         	movff	sprintf@f+1,tblptrh
  6460  00ED84                     	if	0	;tblptru may be non-zero
  6461  00ED84                     	endif
  6462  00ED84                     	if	0	;tblptru may be non-zero
  6463  00ED84                     	endif
  6464  00ED84  0008               	tblrd		*
  6465  00ED86  50F5               	movf	tablat,w,c
  6466  00ED88  EC9A  F06E         	call	_isdigit
  6467  00ED8C  A0D8               	btfss	status,0,c
  6468  00ED8E  D0A2               	goto	l2570
  6469                           
  6470                           ;doprnt.c: 598: width = 0;
  6471  00ED90  0E00               	movlw	0
  6472  00ED92  6E26               	movwf	sprintf@width+1,c
  6473  00ED94  0E00               	movlw	0
  6474  00ED96  6E25               	movwf	sprintf@width,c
  6475  00ED98  D000               	goto	l2524
  6476  00ED9A                     l2524:
  6477                           
  6478                           ;doprnt.c: 600: width *= 10;
  6479  00ED9A  C025  F001         	movff	sprintf@width,___wmul@multiplier
  6480  00ED9E  C026  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  6481  00EDA2  0E00               	movlw	0
  6482  00EDA4  6E04               	movwf	___wmul@multiplicand+1,c
  6483  00EDA6  0E0A               	movlw	10
  6484  00EDA8  6E03               	movwf	___wmul@multiplicand,c
  6485  00EDAA  ECAB  F06E         	call	___wmul	;wreg free
  6486  00EDAE  C001  F025         	movff	?___wmul,sprintf@width
  6487  00EDB2  C002  F026         	movff	?___wmul+1,sprintf@width+1
  6488                           
  6489                           ;doprnt.c: 601: width += *f++ - '0';
  6490  00EDB6  0ED0               	movlw	208
  6491  00EDB8  6E17               	movwf	??_sprintf& (0+255),c
  6492  00EDBA  0EFF               	movlw	255
  6493  00EDBC  6E18               	movwf	(??_sprintf+1)& (0+255),c
  6494  00EDBE  C00F  FFF6         	movff	sprintf@f,tblptrl
  6495  00EDC2  C010  FFF7         	movff	sprintf@f+1,tblptrh
  6496  00EDC6                     	if	0	;tblptru may be non-zero
  6497  00EDC6                     	endif
  6498  00EDC6                     	if	0	;tblptru may be non-zero
  6499  00EDC6                     	endif
  6500  00EDC6  0008               	tblrd		*
  6501  00EDC8  50F5               	movf	tablat,w,c
  6502  00EDCA  6E19               	movwf	(??_sprintf+2)& (0+255),c
  6503  00EDCC  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  6504  00EDCE  5017               	movf	??_sprintf,w,c
  6505  00EDD0  2619               	addwf	??_sprintf+2,f,c
  6506  00EDD2  5018               	movf	??_sprintf+1,w,c
  6507  00EDD4  221A               	addwfc	??_sprintf+3,f,c
  6508  00EDD6  5019               	movf	??_sprintf+2,w,c
  6509  00EDD8  2625               	addwf	sprintf@width,f,c
  6510  00EDDA  501A               	movf	??_sprintf+3,w,c
  6511  00EDDC  2226               	addwfc	sprintf@width+1,f,c
  6512  00EDDE  4A0F               	infsnz	sprintf@f,f,c
  6513  00EDE0  2A10               	incf	sprintf@f+1,f,c
  6514                           
  6515                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6516  00EDE2  C00F  FFF6         	movff	sprintf@f,tblptrl
  6517  00EDE6  C010  FFF7         	movff	sprintf@f+1,tblptrh
  6518  00EDEA                     	if	0	;tblptru may be non-zero
  6519  00EDEA                     	endif
  6520  00EDEA                     	if	0	;tblptru may be non-zero
  6521  00EDEA                     	endif
  6522  00EDEA  0008               	tblrd		*
  6523  00EDEC  50F5               	movf	tablat,w,c
  6524  00EDEE  EC9A  F06E         	call	_isdigit
  6525  00EDF2  A0D8               	btfss	status,0,c
  6526  00EDF4  D06F               	goto	l2570
  6527  00EDF6  D7D1               	goto	l2524
  6528                           
  6529                           ;doprnt.c: 608: }
  6530                           ;doprnt.c: 635: switch(c = *f++) {
  6531  00EDF8  D06D               	goto	l2570
  6532                           
  6533                           ;doprnt.c: 638: goto alldone;
  6534                           
  6535                           ;doprnt.c: 637: case 0:
  6536  00EDFA  D12C               	goto	l2624
  6537  00EDFC                     l2532:
  6538                           
  6539                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6540  00EDFC  C01F  FFD9         	movff	sprintf@ap,fsr2l
  6541  00EE00  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  6542  00EE04  CFDE F021          	movff	postinc2,sprintf@cp
  6543  00EE08  CFDD F022          	movff	postdec2,sprintf@cp+1
  6544  00EE0C  0E02               	movlw	2
  6545  00EE0E  261F               	addwf	sprintf@ap,f,c
  6546  00EE10  0E00               	movlw	0
  6547  00EE12  2220               	addwfc	sprintf@ap+1,f,c
  6548                           
  6549                           ;doprnt.c: 740: if(!cp)
  6550  00EE14  5021               	movf	sprintf@cp,w,c
  6551  00EE16  1022               	iorwf	sprintf@cp+1,w,c
  6552  00EE18  A4D8               	btfss	status,2,c
  6553  00EE1A  D005               	goto	l2540
  6554                           
  6555                           ;doprnt.c: 741: cp = "(null)";
  6556  00EE1C  0EE1               	movlw	low STR_88
  6557  00EE1E  6E21               	movwf	sprintf@cp,c
  6558  00EE20  0EFF               	movlw	high STR_88
  6559  00EE22  6E22               	movwf	sprintf@cp+1,c
  6560  00EE24  D000               	goto	l2540
  6561  00EE26                     l2540:
  6562                           
  6563                           ;doprnt.c: 745: len = 0;
  6564  00EE26  0E00               	movlw	0
  6565  00EE28  6E24               	movwf	sprintf@len+1,c
  6566  00EE2A  0E00               	movlw	0
  6567  00EE2C  6E23               	movwf	sprintf@len,c
  6568                           
  6569                           ;doprnt.c: 746: while(cp[len])
  6570  00EE2E  D003               	goto	l2544
  6571  00EE30                     l2542:
  6572                           
  6573                           ;doprnt.c: 747: len++;
  6574  00EE30  4A23               	infsnz	sprintf@len,f,c
  6575  00EE32  2A24               	incf	sprintf@len+1,f,c
  6576  00EE34  D000               	goto	l2544
  6577  00EE36                     l2544:
  6578  00EE36  5023               	movf	sprintf@len,w,c
  6579  00EE38  2421               	addwf	sprintf@cp,w,c
  6580  00EE3A  6E17               	movwf	??_sprintf& (0+255),c
  6581  00EE3C  5024               	movf	sprintf@len+1,w,c
  6582  00EE3E  2022               	addwfc	sprintf@cp+1,w,c
  6583  00EE40  6E18               	movwf	(??_sprintf+1)& (0+255),c
  6584  00EE42  C017  FFF6         	movff	??_sprintf,tblptrl
  6585  00EE46  C018  FFF7         	movff	??_sprintf+1,tblptrh
  6586  00EE4A                     	if	0	;tblptru may be non-zero
  6587  00EE4A                     	endif
  6588  00EE4A                     	if	0	;tblptru may be non-zero
  6589  00EE4A                     	endif
  6590  00EE4A  0008               	tblrd		*
  6591  00EE4C  50F5               	movf	tablat,w,c
  6592  00EE4E  0900               	iorlw	0
  6593  00EE50  A4D8               	btfss	status,2,c
  6594  00EE52  D7EE               	goto	l2542
  6595                           
  6596                           ;doprnt.c: 757: if(width > len)
  6597  00EE54  5025               	movf	sprintf@width,w,c
  6598  00EE56  5C23               	subwf	sprintf@len,w,c
  6599  00EE58  5026               	movf	sprintf@width+1,w,c
  6600  00EE5A  5824               	subwfb	sprintf@len+1,w,c
  6601  00EE5C  B0D8               	btfsc	status,0,c
  6602  00EE5E  D005               	goto	l2550
  6603                           
  6604                           ;doprnt.c: 758: width -= len;
  6605  00EE60  5023               	movf	sprintf@len,w,c
  6606  00EE62  5E25               	subwf	sprintf@width,f,c
  6607  00EE64  5024               	movf	sprintf@len+1,w,c
  6608  00EE66  5A26               	subwfb	sprintf@width+1,f,c
  6609  00EE68  D00E               	goto	l2556
  6610  00EE6A                     l2550:
  6611                           
  6612                           ;doprnt.c: 759: else
  6613                           ;doprnt.c: 760: width = 0;
  6614  00EE6A  0E00               	movlw	0
  6615  00EE6C  6E26               	movwf	sprintf@width+1,c
  6616  00EE6E  0E00               	movlw	0
  6617  00EE70  6E25               	movwf	sprintf@width,c
  6618                           
  6619                           ;doprnt.c: 764: while(width--)
  6620  00EE72  D009               	goto	l2556
  6621  00EE74                     l2552:
  6622                           
  6623                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6624  00EE74  C00D  FFD9         	movff	sprintf@sp,fsr2l
  6625  00EE78  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  6626  00EE7C  0E20               	movlw	32
  6627  00EE7E  6EDF               	movwf	indf2,c
  6628  00EE80  4A0D               	infsnz	sprintf@sp,f,c
  6629  00EE82  2A0E               	incf	sprintf@sp+1,f,c
  6630  00EE84  D000               	goto	l2556
  6631  00EE86                     l2556:
  6632  00EE86  0625               	decf	sprintf@width,f,c
  6633  00EE88  A0D8               	btfss	status,0,c
  6634  00EE8A  0626               	decf	sprintf@width+1,f,c
  6635  00EE8C  2825               	incf	sprintf@width,w,c
  6636  00EE8E  E1F2               	bnz	l2552
  6637  00EE90  2826               	incf	sprintf@width+1,w,c
  6638  00EE92  B4D8               	btfsc	status,2,c
  6639  00EE94  D012               	goto	l2564
  6640  00EE96  D7EE               	goto	l2552
  6641                           
  6642                           ;doprnt.c: 767: while(len--)
  6643  00EE98  D010               	goto	l2564
  6644  00EE9A                     l2558:
  6645                           
  6646                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6647  00EE9A  C021  FFF6         	movff	sprintf@cp,tblptrl
  6648  00EE9E  C022  FFF7         	movff	sprintf@cp+1,tblptrh
  6649  00EEA2                     	if	0	;tblptru may be non-zero
  6650  00EEA2                     	endif
  6651  00EEA2                     	if	0	;tblptru may be non-zero
  6652  00EEA2                     	endif
  6653  00EEA2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  6654  00EEA6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  6655  00EEAA  0008               	tblrd		*
  6656  00EEAC  CFF5 FFDF          	movff	tablat,indf2
  6657  00EEB0  4A21               	infsnz	sprintf@cp,f,c
  6658  00EEB2  2A22               	incf	sprintf@cp+1,f,c
  6659  00EEB4  4A0D               	infsnz	sprintf@sp,f,c
  6660  00EEB6  2A0E               	incf	sprintf@sp+1,f,c
  6661  00EEB8  D000               	goto	l2564
  6662  00EEBA                     l2564:
  6663  00EEBA  0623               	decf	sprintf@len,f,c
  6664  00EEBC  A0D8               	btfss	status,0,c
  6665  00EEBE  0624               	decf	sprintf@len+1,f,c
  6666  00EEC0  2823               	incf	sprintf@len,w,c
  6667  00EEC2  E1EB               	bnz	l2558
  6668  00EEC4  2824               	incf	sprintf@len+1,w,c
  6669  00EEC6  B4D8               	btfsc	status,2,c
  6670  00EEC8  D0B7               	goto	l2622
  6671  00EECA  D7E7               	goto	l2558
  6672                           
  6673                           ;doprnt.c: 813: continue;
  6674                           
  6675                           ;doprnt.c: 802: default:
  6676                           
  6677                           ;doprnt.c: 774: continue;
  6678  00EECC  D0B5               	goto	l2622
  6679  00EECE                     l2566:
  6680                           
  6681                           ;doprnt.c: 818: flag |= 0xC0;
  6682  00EECE  0EC0               	movlw	192
  6683  00EED0  121B               	iorwf	sprintf@flag,f,c
  6684                           
  6685                           ;doprnt.c: 822: }
  6686                           
  6687                           ;doprnt.c: 819: break;
  6688  00EED2  D014               	goto	l2572
  6689  00EED4                     l2570:
  6690  00EED4  C00F  FFF6         	movff	sprintf@f,tblptrl
  6691  00EED8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  6692  00EEDC  4A0F               	infsnz	sprintf@f,f,c
  6693  00EEDE  2A10               	incf	sprintf@f+1,f,c
  6694  00EEE0                     	if	0	;tblptru may be non-zero
  6695  00EEE0                     	endif
  6696  00EEE0                     	if	0	;tblptru may be non-zero
  6697  00EEE0                     	endif
  6698  00EEE0  0008               	tblrd		*
  6699  00EEE2  CFF5 F027          	movff	tablat,sprintf@c
  6700  00EEE6  5027               	movf	sprintf@c,w,c
  6701                           
  6702                           ; Switch size 1, requested type "space"
  6703                           ; Number of cases is 3, Range of values is 0 to 117
  6704                           ; switch strategies available:
  6705                           ; Name         Instructions Cycles
  6706                           ; simple_byte           10     6 (average)
  6707                           ;	Chosen strategy is simple_byte
  6708  00EEE8  0A00               	xorlw	0	; case 0
  6709  00EEEA  B4D8               	btfsc	status,2,c
  6710  00EEEC  D0B3               	goto	l2624
  6711  00EEEE  0A73               	xorlw	115	; case 115
  6712  00EEF0  B4D8               	btfsc	status,2,c
  6713  00EEF2  D784               	goto	l2532
  6714  00EEF4  0A06               	xorlw	6	; case 117
  6715  00EEF6  B4D8               	btfsc	status,2,c
  6716  00EEF8  D7EA               	goto	l2566
  6717  00EEFA  D09E               	goto	l2622
  6718  00EEFC                     l2572:
  6719                           
  6720                           ;doprnt.c: 1273: {
  6721                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6722  00EEFC  C01F  FFD9         	movff	sprintf@ap,fsr2l
  6723  00EF00  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  6724  00EF04  CFDE F01C          	movff	postinc2,sprintf@val
  6725  00EF08  CFDD F01D          	movff	postdec2,sprintf@val+1
  6726  00EF0C  0E02               	movlw	2
  6727  00EF0E  261F               	addwf	sprintf@ap,f,c
  6728  00EF10  0E00               	movlw	0
  6729  00EF12  2220               	addwfc	sprintf@ap+1,f,c
  6730                           
  6731                           ;doprnt.c: 1287: }
  6732                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6733  00EF14  0E01               	movlw	1
  6734  00EF16  6E27               	movwf	sprintf@c,c
  6735  00EF18                     l2578:
  6736  00EF18  0E05               	movlw	5
  6737  00EF1A  1827               	xorwf	sprintf@c,w,c
  6738  00EF1C  B4D8               	btfsc	status,2,c
  6739  00EF1E  D016               	goto	l2590
  6740  00EF20  D001               	goto	l2582
  6741  00EF22  D014               	goto	l2590
  6742  00EF24                     l2582:
  6743                           
  6744                           ;doprnt.c: 1306: if(val < dpowers[c])
  6745  00EF24  5027               	movf	sprintf@c,w,c
  6746  00EF26  0D02               	mullw	2
  6747  00EF28  0E95               	movlw	low _dpowers
  6748  00EF2A  24F3               	addwf	prodl,w,c
  6749  00EF2C  6EF6               	movwf	tblptrl,c
  6750  00EF2E  0EFE               	movlw	high _dpowers
  6751  00EF30  20F4               	addwfc	prodh,w,c
  6752  00EF32  6EF7               	movwf	tblptrh,c
  6753  00EF34                     	if	0	;There are less than 3 active tblptr bytes
  6754  00EF34                     	endif
  6755  00EF34  0009               	tblrd		*+
  6756  00EF36  50F5               	movf	tablat,w,c
  6757  00EF38  5C1C               	subwf	sprintf@val,w,c
  6758  00EF3A  0009               	tblrd		*+
  6759  00EF3C  50F5               	movf	tablat,w,c
  6760  00EF3E  581D               	subwfb	sprintf@val+1,w,c
  6761  00EF40  A0D8               	btfss	status,0,c
  6762  00EF42  D004               	goto	l2590
  6763  00EF44  D001               	goto	l2586
  6764                           
  6765                           ;doprnt.c: 1307: break;
  6766  00EF46  D002               	goto	l2590
  6767  00EF48                     l2586:
  6768  00EF48  2A27               	incf	sprintf@c,f,c
  6769  00EF4A  D7E6               	goto	l2578
  6770  00EF4C                     l2590:
  6771                           
  6772                           ;doprnt.c: 1381: if(width > c)
  6773  00EF4C  0E80               	movlw	128
  6774  00EF4E  BE27               	btfsc	sprintf@c,7,c
  6775  00EF50  0E7F               	movlw	127
  6776  00EF52  6E17               	movwf	??_sprintf& (0+255),c
  6777  00EF54  5025               	movf	sprintf@width,w,c
  6778  00EF56  5C27               	subwf	sprintf@c,w,c
  6779  00EF58  5026               	movf	sprintf@width+1,w,c
  6780  00EF5A  0A80               	xorlw	128
  6781  00EF5C  5817               	subwfb	??_sprintf& (0+255),w,c
  6782  00EF5E  B0D8               	btfsc	status,0,c
  6783  00EF60  D007               	goto	l2594
  6784                           
  6785                           ;doprnt.c: 1382: width -= c;
  6786  00EF62  5027               	movf	sprintf@c,w,c
  6787  00EF64  5E25               	subwf	sprintf@width,f,c
  6788  00EF66  0E00               	movlw	0
  6789  00EF68  BE27               	btfsc	sprintf@c,7,c
  6790  00EF6A  0EFF               	movlw	255
  6791  00EF6C  5A26               	subwfb	sprintf@width+1,f,c
  6792  00EF6E  D005               	goto	l2596
  6793  00EF70                     l2594:
  6794                           
  6795                           ;doprnt.c: 1383: else
  6796                           ;doprnt.c: 1384: width = 0;
  6797  00EF70  0E00               	movlw	0
  6798  00EF72  6E26               	movwf	sprintf@width+1,c
  6799  00EF74  0E00               	movlw	0
  6800  00EF76  6E25               	movwf	sprintf@width,c
  6801  00EF78  D000               	goto	l2596
  6802  00EF7A                     l2596:
  6803                           
  6804                           ;doprnt.c: 1387: if(flag & 0x04) {
  6805  00EF7A  A41B               	btfss	sprintf@flag,2,c
  6806  00EF7C  D015               	goto	l2606
  6807                           
  6808                           ;doprnt.c: 1415: if(width)
  6809  00EF7E  5025               	movf	sprintf@width,w,c
  6810  00EF80  1026               	iorwf	sprintf@width+1,w,c
  6811  00EF82  B4D8               	btfsc	status,2,c
  6812  00EF84  D026               	goto	l396
  6813  00EF86                     l2600:
  6814                           
  6815                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  6816  00EF86  C00D  FFD9         	movff	sprintf@sp,fsr2l
  6817  00EF8A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  6818  00EF8E  0E30               	movlw	48
  6819  00EF90  6EDF               	movwf	indf2,c
  6820  00EF92  4A0D               	infsnz	sprintf@sp,f,c
  6821  00EF94  2A0E               	incf	sprintf@sp+1,f,c
  6822                           
  6823                           ;doprnt.c: 1418: while(--width);
  6824  00EF96  0625               	decf	sprintf@width,f,c
  6825  00EF98  A0D8               	btfss	status,0,c
  6826  00EF9A  0626               	decf	sprintf@width+1,f,c
  6827  00EF9C  5025               	movf	sprintf@width,w,c
  6828  00EF9E  1026               	iorwf	sprintf@width+1,w,c
  6829  00EFA0  B4D8               	btfsc	status,2,c
  6830  00EFA2  D017               	goto	l396
  6831  00EFA4  D7F0               	goto	l2600
  6832                           
  6833                           ;doprnt.c: 1420: } else
  6834  00EFA6  D015               	goto	l396
  6835  00EFA8                     l2606:
  6836                           
  6837                           ;doprnt.c: 1422: {
  6838                           ;doprnt.c: 1424: if(width
  6839                           ;doprnt.c: 1428: )
  6840  00EFA8  5025               	movf	sprintf@width,w,c
  6841  00EFAA  1026               	iorwf	sprintf@width+1,w,c
  6842  00EFAC  B4D8               	btfsc	status,2,c
  6843  00EFAE  D011               	goto	l396
  6844  00EFB0                     l2608:
  6845                           
  6846                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  6847  00EFB0  C00D  FFD9         	movff	sprintf@sp,fsr2l
  6848  00EFB4  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  6849  00EFB8  0E20               	movlw	32
  6850  00EFBA  6EDF               	movwf	indf2,c
  6851  00EFBC  4A0D               	infsnz	sprintf@sp,f,c
  6852  00EFBE  2A0E               	incf	sprintf@sp+1,f,c
  6853                           
  6854                           ;doprnt.c: 1431: while(--width);
  6855  00EFC0  0625               	decf	sprintf@width,f,c
  6856  00EFC2  A0D8               	btfss	status,0,c
  6857  00EFC4  0626               	decf	sprintf@width+1,f,c
  6858  00EFC6  5025               	movf	sprintf@width,w,c
  6859  00EFC8  1026               	iorwf	sprintf@width+1,w,c
  6860  00EFCA  B4D8               	btfsc	status,2,c
  6861  00EFCC  D002               	goto	l396
  6862  00EFCE  D7F0               	goto	l2608
  6863  00EFD0  D000               	goto	l396
  6864  00EFD2                     l396:
  6865                           
  6866                           ;doprnt.c: 1469: }
  6867                           ;doprnt.c: 1472: prec = c;
  6868  00EFD2  C027  F01E         	movff	sprintf@c,sprintf@prec
  6869                           
  6870                           ;doprnt.c: 1474: while(prec--) {
  6871  00EFD6  D02A               	goto	l2620
  6872  00EFD8                     l2614:
  6873                           
  6874                           ;doprnt.c: 1478: {
  6875                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6876  00EFD8  501E               	movf	sprintf@prec,w,c
  6877  00EFDA  0D02               	mullw	2
  6878  00EFDC  0E95               	movlw	low _dpowers
  6879  00EFDE  24F3               	addwf	prodl,w,c
  6880  00EFE0  6EF6               	movwf	tblptrl,c
  6881  00EFE2  0EFE               	movlw	high _dpowers
  6882  00EFE4  20F4               	addwfc	prodh,w,c
  6883  00EFE6  6EF7               	movwf	tblptrh,c
  6884  00EFE8                     	if	0	;There are less than 3 active tblptr bytes
  6885  00EFE8                     	endif
  6886  00EFE8  0009               	tblrd		*+
  6887  00EFEA  CFF5 F003          	movff	tablat,___lwdiv@divisor
  6888  00EFEE  000A               	tblrd		*-
  6889  00EFF0  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  6890  00EFF4  C01C  F001         	movff	sprintf@val,___lwdiv@dividend
  6891  00EFF8  C01D  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  6892  00EFFC  EC08  F06F         	call	___lwdiv	;wreg free
  6893  00F000  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  6894  00F004  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  6895  00F008  0E00               	movlw	0
  6896  00F00A  6E0B               	movwf	___lwmod@divisor+1,c
  6897  00F00C  0E0A               	movlw	10
  6898  00F00E  6E0A               	movwf	___lwmod@divisor,c
  6899  00F010  ECE2  F06E         	call	___lwmod	;wreg free
  6900  00F014  5008               	movf	?___lwmod,w,c
  6901  00F016  0F30               	addlw	48
  6902  00F018  6E27               	movwf	sprintf@c,c
  6903                           
  6904                           ;doprnt.c: 1523: }
  6905                           ;doprnt.c: 1524: ((*sp++ = (c)));
  6906  00F01A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  6907  00F01E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  6908  00F022  C027  FFDF         	movff	sprintf@c,indf2
  6909  00F026  4A0D               	infsnz	sprintf@sp,f,c
  6910  00F028  2A0E               	incf	sprintf@sp+1,f,c
  6911  00F02A  D000               	goto	l2620
  6912  00F02C                     l2620:
  6913  00F02C  061E               	decf	sprintf@prec,f,c
  6914  00F02E  281E               	incf	sprintf@prec,w,c
  6915  00F030  B4D8               	btfsc	status,2,c
  6916  00F032  D002               	goto	l2622
  6917  00F034  D7D1               	goto	l2614
  6918  00F036  D000               	goto	l2622
  6919  00F038                     l2622:
  6920  00F038  C00F  FFF6         	movff	sprintf@f,tblptrl
  6921  00F03C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  6922  00F040  4A0F               	infsnz	sprintf@f,f,c
  6923  00F042  2A10               	incf	sprintf@f+1,f,c
  6924  00F044                     	if	0	;tblptru may be non-zero
  6925  00F044                     	endif
  6926  00F044                     	if	0	;tblptru may be non-zero
  6927  00F044                     	endif
  6928  00F044  0008               	tblrd		*
  6929  00F046  CFF5 F027          	movff	tablat,sprintf@c
  6930  00F04A  5027               	movf	sprintf@c,w,c
  6931  00F04C  B4D8               	btfsc	status,2,c
  6932  00F04E  D002               	goto	l2624
  6933  00F050  D671               	goto	l2506
  6934  00F052  D000               	goto	l2624
  6935  00F054                     l2624:
  6936                           
  6937                           ;doprnt.c: 1538: *sp = 0;
  6938  00F054  C00D  FFD9         	movff	sprintf@sp,fsr2l
  6939  00F058  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  6940  00F05C  0E00               	movlw	0
  6941  00F05E  6EDF               	movwf	indf2,c
  6942  00F060  0012               	return	
  6943                           
  6944                           ;doprnt.c: 1540: return 0;
  6945                           ;	Return value of _sprintf is never used
  6946  00F062  0012               	return		;funcret
  6947  00F064                     __end_of_sprintf:
  6948                           	opt stack 0
  6949                           tblptru	equ	0xFF8
  6950                           tblptrh	equ	0xFF7
  6951                           tblptrl	equ	0xFF6
  6952                           tablat	equ	0xFF5
  6953                           prodh	equ	0xFF4
  6954                           prodl	equ	0xFF3
  6955                           intcon	equ	0xFF2
  6956                           postinc0	equ	0xFEE
  6957                           wreg	equ	0xFE8
  6958                           postdec1	equ	0xFE5
  6959                           fsr1l	equ	0xFE1
  6960                           indf2	equ	0xFDF
  6961                           postinc2	equ	0xFDE
  6962                           postdec2	equ	0xFDD
  6963                           fsr2h	equ	0xFDA
  6964                           fsr2l	equ	0xFD9
  6965                           status	equ	0xFD8
  6966                           
  6967 ;; *************** function _isdigit *****************
  6968 ;; Defined at:
  6969 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;  c               1    wreg     unsigned char 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;  c               1    2[COMRAM] unsigned char 
  6974 ;; Return value:  Size  Location     Type
  6975 ;;		None               void
  6976 ;; Registers used:
  6977 ;;		wreg, status,2, status,0
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6986 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6987 ;;Total ram usage:        3 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_sprintf
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text17
  6997  00DD34                     __ptext17:
  6998                           	opt stack 0
  6999  00DD34                     _isdigit:
  7000                           	opt stack 29
  7001                           
  7002                           ;incstack = 0
  7003                           ;isdigit@c stored from wreg
  7004  00DD34  6E03               	movwf	isdigit@c,c
  7005  00DD36  0E00               	movlw	0
  7006  00DD38  6E02               	movwf	_isdigit$2159,c
  7007  00DD3A  0E3A               	movlw	58
  7008  00DD3C  6003               	cpfslt	isdigit@c,c
  7009  00DD3E  D006               	goto	l2410
  7010  00DD40  0E2F               	movlw	47
  7011  00DD42  6403               	cpfsgt	isdigit@c,c
  7012  00DD44  D003               	goto	l2410
  7013  00DD46  0E01               	movlw	1
  7014  00DD48  6E02               	movwf	_isdigit$2159,c
  7015  00DD4A  D000               	goto	l2410
  7016  00DD4C                     l2410:
  7017  00DD4C  C002  F001         	movff	_isdigit$2159,??_isdigit
  7018  00DD50  3001               	rrcf	??_isdigit,w,c
  7019  00DD52  0012               	return	
  7020  00DD54  0012               	return		;funcret
  7021  00DD56                     __end_of_isdigit:
  7022                           	opt stack 0
  7023                           tblptru	equ	0xFF8
  7024                           tblptrh	equ	0xFF7
  7025                           tblptrl	equ	0xFF6
  7026                           tablat	equ	0xFF5
  7027                           prodh	equ	0xFF4
  7028                           prodl	equ	0xFF3
  7029                           intcon	equ	0xFF2
  7030                           postinc0	equ	0xFEE
  7031                           wreg	equ	0xFE8
  7032                           postdec1	equ	0xFE5
  7033                           fsr1l	equ	0xFE1
  7034                           indf2	equ	0xFDF
  7035                           postinc2	equ	0xFDE
  7036                           postdec2	equ	0xFDD
  7037                           fsr2h	equ	0xFDA
  7038                           fsr2l	equ	0xFD9
  7039                           status	equ	0xFD8
  7040                           
  7041 ;; *************** function ___wmul *****************
  7042 ;; Defined at:
  7043 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  multiplier      2    0[COMRAM] unsigned int 
  7046 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  product         2    4[COMRAM] unsigned int 
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  2    0[COMRAM] unsigned int 
  7051 ;; Registers used:
  7052 ;;		wreg, status,2, status,0, prodl, prodh
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7061 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7062 ;;Total ram usage:        6 bytes
  7063 ;; Hardware stack levels used:    1
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_sprintf
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text18
  7072  00DD56                     __ptext18:
  7073                           	opt stack 0
  7074  00DD56                     ___wmul:
  7075                           	opt stack 29
  7076                           
  7077                           ;incstack = 0
  7078  00DD56  5001               	movf	___wmul@multiplier,w,c
  7079  00DD58  0203               	mulwf	___wmul@multiplicand,c
  7080  00DD5A  CFF3 F005          	movff	prodl,___wmul@product
  7081  00DD5E  CFF4 F006          	movff	prodh,___wmul@product+1
  7082  00DD62  5001               	movf	___wmul@multiplier,w,c
  7083  00DD64  0204               	mulwf	___wmul@multiplicand+1,c
  7084  00DD66  50F3               	movf	prodl,w,c
  7085  00DD68  2606               	addwf	___wmul@product+1,f,c
  7086  00DD6A  5002               	movf	___wmul@multiplier+1,w,c
  7087  00DD6C  0203               	mulwf	___wmul@multiplicand,c
  7088  00DD6E  50F3               	movf	prodl,w,c
  7089  00DD70  2606               	addwf	___wmul@product+1,f,c
  7090  00DD72  C005  F001         	movff	___wmul@product,?___wmul
  7091  00DD76  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7092  00DD7A  0012               	return	
  7093  00DD7C  0012               	return		;funcret
  7094  00DD7E                     __end_of___wmul:
  7095                           	opt stack 0
  7096                           tblptru	equ	0xFF8
  7097                           tblptrh	equ	0xFF7
  7098                           tblptrl	equ	0xFF6
  7099                           tablat	equ	0xFF5
  7100                           prodh	equ	0xFF4
  7101                           prodl	equ	0xFF3
  7102                           intcon	equ	0xFF2
  7103                           postinc0	equ	0xFEE
  7104                           wreg	equ	0xFE8
  7105                           postdec1	equ	0xFE5
  7106                           fsr1l	equ	0xFE1
  7107                           indf2	equ	0xFDF
  7108                           postinc2	equ	0xFDE
  7109                           postdec2	equ	0xFDD
  7110                           fsr2h	equ	0xFDA
  7111                           fsr2l	equ	0xFD9
  7112                           status	equ	0xFD8
  7113                           
  7114 ;; *************** function ___lwmod *****************
  7115 ;; Defined at:
  7116 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  dividend        2    7[COMRAM] unsigned int 
  7119 ;;  divisor         2    9[COMRAM] unsigned int 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  counter         1   11[COMRAM] unsigned char 
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  2    7[COMRAM] unsigned int 
  7124 ;; Registers used:
  7125 ;;		wreg, status,2, status,0
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7134 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7135 ;;Total ram usage:        5 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; This function calls:
  7138 ;;		Nothing
  7139 ;; This function is called by:
  7140 ;;		_sprintf
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text19
  7145  00DDC4                     __ptext19:
  7146                           	opt stack 0
  7147  00DDC4                     ___lwmod:
  7148                           	opt stack 29
  7149                           
  7150                           ;incstack = 0
  7151  00DDC4  500A               	movf	___lwmod@divisor,w,c
  7152  00DDC6  100B               	iorwf	___lwmod@divisor+1,w,c
  7153  00DDC8  B4D8               	btfsc	status,2,c
  7154  00DDCA  D01D               	goto	l1029
  7155  00DDCC  0E01               	movlw	1
  7156  00DDCE  6E0C               	movwf	___lwmod@counter,c
  7157  00DDD0  D005               	goto	l2448
  7158  00DDD2                     l2446:
  7159  00DDD2  90D8               	bcf	status,0,c
  7160  00DDD4  360A               	rlcf	___lwmod@divisor,f,c
  7161  00DDD6  360B               	rlcf	___lwmod@divisor+1,f,c
  7162  00DDD8  2A0C               	incf	___lwmod@counter,f,c
  7163  00DDDA  D000               	goto	l2448
  7164  00DDDC                     l2448:
  7165  00DDDC  BE0B               	btfsc	___lwmod@divisor+1,7,c
  7166  00DDDE  D002               	goto	l2450
  7167  00DDE0  D7F8               	goto	l2446
  7168  00DDE2  D000               	goto	l2450
  7169  00DDE4                     l2450:
  7170  00DDE4  500A               	movf	___lwmod@divisor,w,c
  7171  00DDE6  5C08               	subwf	___lwmod@dividend,w,c
  7172  00DDE8  500B               	movf	___lwmod@divisor+1,w,c
  7173  00DDEA  5809               	subwfb	___lwmod@dividend+1,w,c
  7174  00DDEC  A0D8               	btfss	status,0,c
  7175  00DDEE  D005               	goto	l2454
  7176  00DDF0  500A               	movf	___lwmod@divisor,w,c
  7177  00DDF2  5E08               	subwf	___lwmod@dividend,f,c
  7178  00DDF4  500B               	movf	___lwmod@divisor+1,w,c
  7179  00DDF6  5A09               	subwfb	___lwmod@dividend+1,f,c
  7180  00DDF8  D000               	goto	l2454
  7181  00DDFA                     l2454:
  7182  00DDFA  90D8               	bcf	status,0,c
  7183  00DDFC  320B               	rrcf	___lwmod@divisor+1,f,c
  7184  00DDFE  320A               	rrcf	___lwmod@divisor,f,c
  7185  00DE00  2E0C               	decfsz	___lwmod@counter,f,c
  7186  00DE02  D7F0               	goto	l2450
  7187  00DE04  D000               	goto	l1029
  7188  00DE06                     l1029:
  7189  00DE06  C008  F008         	movff	___lwmod@dividend,?___lwmod
  7190  00DE0A  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  7191  00DE0E  0012               	return		;funcret
  7192  00DE10                     __end_of___lwmod:
  7193                           	opt stack 0
  7194                           tblptru	equ	0xFF8
  7195                           tblptrh	equ	0xFF7
  7196                           tblptrl	equ	0xFF6
  7197                           tablat	equ	0xFF5
  7198                           prodh	equ	0xFF4
  7199                           prodl	equ	0xFF3
  7200                           intcon	equ	0xFF2
  7201                           postinc0	equ	0xFEE
  7202                           wreg	equ	0xFE8
  7203                           postdec1	equ	0xFE5
  7204                           fsr1l	equ	0xFE1
  7205                           indf2	equ	0xFDF
  7206                           postinc2	equ	0xFDE
  7207                           postdec2	equ	0xFDD
  7208                           fsr2h	equ	0xFDA
  7209                           fsr2l	equ	0xFD9
  7210                           status	equ	0xFD8
  7211                           
  7212 ;; *************** function ___lwdiv *****************
  7213 ;; Defined at:
  7214 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  dividend        2    0[COMRAM] unsigned int 
  7217 ;;  divisor         2    2[COMRAM] unsigned int 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  quotient        2    4[COMRAM] unsigned int 
  7220 ;;  counter         1    6[COMRAM] unsigned char 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  2    0[COMRAM] unsigned int 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7231 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7233 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7234 ;;Total ram usage:        7 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_sprintf
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           	psect	text20
  7244  00DE10                     __ptext20:
  7245                           	opt stack 0
  7246  00DE10                     ___lwdiv:
  7247                           	opt stack 29
  7248                           
  7249                           ;incstack = 0
  7250  00DE10  0E00               	movlw	0
  7251  00DE12  6E06               	movwf	___lwdiv@quotient+1,c
  7252  00DE14  0E00               	movlw	0
  7253  00DE16  6E05               	movwf	___lwdiv@quotient,c
  7254  00DE18  5003               	movf	___lwdiv@divisor,w,c
  7255  00DE1A  1004               	iorwf	___lwdiv@divisor+1,w,c
  7256  00DE1C  B4D8               	btfsc	status,2,c
  7257  00DE1E  D021               	goto	l1019
  7258  00DE20  0E01               	movlw	1
  7259  00DE22  6E07               	movwf	___lwdiv@counter,c
  7260  00DE24  D005               	goto	l2428
  7261  00DE26                     l2426:
  7262  00DE26  90D8               	bcf	status,0,c
  7263  00DE28  3603               	rlcf	___lwdiv@divisor,f,c
  7264  00DE2A  3604               	rlcf	___lwdiv@divisor+1,f,c
  7265  00DE2C  2A07               	incf	___lwdiv@counter,f,c
  7266  00DE2E  D000               	goto	l2428
  7267  00DE30                     l2428:
  7268  00DE30  BE04               	btfsc	___lwdiv@divisor+1,7,c
  7269  00DE32  D002               	goto	l2430
  7270  00DE34  D7F8               	goto	l2426
  7271  00DE36  D000               	goto	l2430
  7272  00DE38                     l2430:
  7273  00DE38  90D8               	bcf	status,0,c
  7274  00DE3A  3605               	rlcf	___lwdiv@quotient,f,c
  7275  00DE3C  3606               	rlcf	___lwdiv@quotient+1,f,c
  7276  00DE3E  5003               	movf	___lwdiv@divisor,w,c
  7277  00DE40  5C01               	subwf	___lwdiv@dividend,w,c
  7278  00DE42  5004               	movf	___lwdiv@divisor+1,w,c
  7279  00DE44  5802               	subwfb	___lwdiv@dividend+1,w,c
  7280  00DE46  A0D8               	btfss	status,0,c
  7281  00DE48  D006               	goto	l2438
  7282  00DE4A  5003               	movf	___lwdiv@divisor,w,c
  7283  00DE4C  5E01               	subwf	___lwdiv@dividend,f,c
  7284  00DE4E  5004               	movf	___lwdiv@divisor+1,w,c
  7285  00DE50  5A02               	subwfb	___lwdiv@dividend+1,f,c
  7286  00DE52  8005               	bsf	___lwdiv@quotient,0,c
  7287  00DE54  D000               	goto	l2438
  7288  00DE56                     l2438:
  7289  00DE56  90D8               	bcf	status,0,c
  7290  00DE58  3204               	rrcf	___lwdiv@divisor+1,f,c
  7291  00DE5A  3203               	rrcf	___lwdiv@divisor,f,c
  7292  00DE5C  2E07               	decfsz	___lwdiv@counter,f,c
  7293  00DE5E  D7EC               	goto	l2430
  7294  00DE60  D000               	goto	l1019
  7295  00DE62                     l1019:
  7296  00DE62  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7297  00DE66  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7298  00DE6A  0012               	return		;funcret
  7299  00DE6C                     __end_of___lwdiv:
  7300                           	opt stack 0
  7301                           tblptru	equ	0xFF8
  7302                           tblptrh	equ	0xFF7
  7303                           tblptrl	equ	0xFF6
  7304                           tablat	equ	0xFF5
  7305                           prodh	equ	0xFF4
  7306                           prodl	equ	0xFF3
  7307                           intcon	equ	0xFF2
  7308                           postinc0	equ	0xFEE
  7309                           wreg	equ	0xFE8
  7310                           postdec1	equ	0xFE5
  7311                           fsr1l	equ	0xFE1
  7312                           indf2	equ	0xFDF
  7313                           postinc2	equ	0xFDE
  7314                           postdec2	equ	0xFDD
  7315                           fsr2h	equ	0xFDA
  7316                           fsr2l	equ	0xFD9
  7317                           status	equ	0xFD8
  7318                           
  7319 ;; *************** function _Lcd_Init *****************
  7320 ;; Defined at:
  7321 ;;		line 42 in file "../lcd.h"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;		None
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;  data            1    4[COMRAM] unsigned char 
  7326 ;; Return value:  Size  Location     Type
  7327 ;;		None               void
  7328 ;; Registers used:
  7329 ;;		wreg, status,2, status,0, cstack
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7337 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7339 ;;Total ram usage:        2 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:    1
  7342 ;; This function calls:
  7343 ;;		_Lcd_Cmd
  7344 ;; This function is called by:
  7345 ;;		_main
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text21
  7350  00E2BE                     __ptext21:
  7351                           	opt stack 0
  7352  00E2BE                     _Lcd_Init:
  7353                           	opt stack 29
  7354                           
  7355                           ;lcd.h: 43: unsigned char data;
  7356                           ;lcd.h: 44: TRISBbits.TRISB0 = 0;
  7357                           
  7358                           ;incstack = 0
  7359  00E2BE  9093               	bcf	3987,0,c	;volatile
  7360                           
  7361                           ;lcd.h: 45: TRISBbits.TRISB1 = 0;
  7362  00E2C0  9293               	bcf	3987,1,c	;volatile
  7363                           
  7364                           ;lcd.h: 46: TRISBbits.TRISB2 = 0;
  7365  00E2C2  9493               	bcf	3987,2,c	;volatile
  7366                           
  7367                           ;lcd.h: 47: TRISBbits.TRISB3 = 0;
  7368  00E2C4  9693               	bcf	3987,3,c	;volatile
  7369                           
  7370                           ;lcd.h: 48: TRISBbits.TRISB4 = 0;
  7371  00E2C6  9893               	bcf	3987,4,c	;volatile
  7372                           
  7373                           ;lcd.h: 49: TRISBbits.TRISB5 = 0;
  7374  00E2C8  9A93               	bcf	3987,5,c	;volatile
  7375                           
  7376                           ;lcd.h: 50: LATBbits.LATB0 = 0;
  7377  00E2CA  908A               	bcf	3978,0,c	;volatile
  7378                           
  7379                           ;lcd.h: 51: LATBbits.LATB1 = 0;
  7380  00E2CC  928A               	bcf	3978,1,c	;volatile
  7381                           
  7382                           ;lcd.h: 52: LATBbits.LATB2 = 0;
  7383  00E2CE  948A               	bcf	3978,2,c	;volatile
  7384                           
  7385                           ;lcd.h: 53: LATBbits.LATB3 = 0;
  7386  00E2D0  968A               	bcf	3978,3,c	;volatile
  7387                           
  7388                           ;lcd.h: 54: LATBbits.LATB4 = 0;
  7389  00E2D2  988A               	bcf	3978,4,c	;volatile
  7390                           
  7391                           ;lcd.h: 55: LATBbits.LATB5 = 0;
  7392  00E2D4  9A8A               	bcf	3978,5,c	;volatile
  7393                           
  7394                           ;lcd.h: 56: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7395  00E2D6  0E0F               	movlw	15
  7396  00E2D8  6E04               	movwf	??_Lcd_Init& (0+255),c
  7397  00E2DA  0E48               	movlw	72
  7398  00E2DC                     u3827:
  7399  00E2DC  2EE8               	decfsz	wreg,f,c
  7400  00E2DE  D7FE               	goto	u3827
  7401  00E2E0  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7402  00E2E2  D7FC               	goto	u3827
  7403                           
  7404                           ;lcd.h: 57: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7405  00E2E4  0E0F               	movlw	15
  7406  00E2E6  6E04               	movwf	??_Lcd_Init& (0+255),c
  7407  00E2E8  0E48               	movlw	72
  7408  00E2EA                     u3837:
  7409  00E2EA  2EE8               	decfsz	wreg,f,c
  7410  00E2EC  D7FE               	goto	u3837
  7411  00E2EE  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7412  00E2F0  D7FC               	goto	u3837
  7413                           
  7414                           ;lcd.h: 58: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7415  00E2F2  0E0F               	movlw	15
  7416  00E2F4  6E04               	movwf	??_Lcd_Init& (0+255),c
  7417  00E2F6  0E48               	movlw	72
  7418  00E2F8                     u3847:
  7419  00E2F8  2EE8               	decfsz	wreg,f,c
  7420  00E2FA  D7FE               	goto	u3847
  7421  00E2FC  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7422  00E2FE  D7FC               	goto	u3847
  7423                           
  7424                           ;lcd.h: 59: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7425  00E300  0E0F               	movlw	15
  7426  00E302  6E04               	movwf	??_Lcd_Init& (0+255),c
  7427  00E304  0E48               	movlw	72
  7428  00E306                     u3857:
  7429  00E306  2EE8               	decfsz	wreg,f,c
  7430  00E308  D7FE               	goto	u3857
  7431  00E30A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7432  00E30C  D7FC               	goto	u3857
  7433                           
  7434                           ;lcd.h: 60: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7435  00E30E  0E0F               	movlw	15
  7436  00E310  6E04               	movwf	??_Lcd_Init& (0+255),c
  7437  00E312  0E48               	movlw	72
  7438  00E314                     u3867:
  7439  00E314  2EE8               	decfsz	wreg,f,c
  7440  00E316  D7FE               	goto	u3867
  7441  00E318  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7442  00E31A  D7FC               	goto	u3867
  7443                           
  7444                           ;lcd.h: 61: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7445  00E31C  0E0F               	movlw	15
  7446  00E31E  6E04               	movwf	??_Lcd_Init& (0+255),c
  7447  00E320  0E48               	movlw	72
  7448  00E322                     u3877:
  7449  00E322  2EE8               	decfsz	wreg,f,c
  7450  00E324  D7FE               	goto	u3877
  7451  00E326  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7452  00E328  D7FC               	goto	u3877
  7453                           
  7454                           ;lcd.h: 62: for(data = 1; data < 4; data ++)
  7455  00E32A  0E01               	movlw	1
  7456  00E32C  6E05               	movwf	Lcd_Init@data,c
  7457  00E32E  D01F               	goto	L6
  7458  00E330  D021               	goto	l74
  7459  00E332                     l73:
  7460                           
  7461                           ;lcd.h: 63: {
  7462                           ;lcd.h: 64: LATBbits.LATB0 = 0; LATBbits.LATB1 = 0; LATBbits.LATB2 = 1; LATBbits.LATB3 =
      +                           1; LATBbits.LATB4 = 0;
  7463  00E332  908A               	bcf	3978,0,c	;volatile
  7464  00E334  928A               	bcf	3978,1,c	;volatile
  7465  00E336  848A               	bsf	3978,2,c	;volatile
  7466  00E338  868A               	bsf	3978,3,c	;volatile
  7467  00E33A  988A               	bcf	3978,4,c	;volatile
  7468                           
  7469                           ;lcd.h: 65: LATBbits.LATB5 = 0; LATBbits.LATB0 = 0; LATBbits.LATB1 = 0; LATBbits.LATB2 =
      +                           1; LATBbits.LATB3 = 1;
  7470  00E33C  9A8A               	bcf	3978,5,c	;volatile
  7471  00E33E  908A               	bcf	3978,0,c	;volatile
  7472  00E340  928A               	bcf	3978,1,c	;volatile
  7473  00E342  848A               	bsf	3978,2,c	;volatile
  7474  00E344  868A               	bsf	3978,3,c	;volatile
  7475                           
  7476                           ;lcd.h: 66: LATBbits.LATB4 = 1; LATBbits.LATB5 = 0;
  7477  00E346  888A               	bsf	3978,4,c	;volatile
  7478  00E348  9A8A               	bcf	3978,5,c	;volatile
  7479                           
  7480                           ;lcd.h: 67: _delay((unsigned long)((5)*(8000000/4000000.0)));
  7481  00E34A  0E03               	movlw	3
  7482  00E34C                     u3887:
  7483  00E34C  2EE8               	decfsz	wreg,f,c
  7484  00E34E  D7FE               	goto	u3887
  7485  00E350  F000               	nop	
  7486                           
  7487                           ;lcd.h: 68: LATBbits.LATB0 = 0; LATBbits.LATB1 = 0; LATBbits.LATB2 = 1; LATBbits.LATB3 =
      +                           1; LATBbits.LATB4 = 0;
  7488  00E352  908A               	bcf	3978,0,c	;volatile
  7489  00E354  928A               	bcf	3978,1,c	;volatile
  7490  00E356  848A               	bsf	3978,2,c	;volatile
  7491  00E358  868A               	bsf	3978,3,c	;volatile
  7492  00E35A  988A               	bcf	3978,4,c	;volatile
  7493                           
  7494                           ;lcd.h: 69: LATBbits.LATB5 = 0;
  7495  00E35C  9A8A               	bcf	3978,5,c	;volatile
  7496                           
  7497                           ;lcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7498  00E35E  0E0F               	movlw	15
  7499  00E360  6E04               	movwf	??_Lcd_Init& (0+255),c
  7500  00E362  0E48               	movlw	72
  7501  00E364                     u3897:
  7502  00E364  2EE8               	decfsz	wreg,f,c
  7503  00E366  D7FE               	goto	u3897
  7504  00E368  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7505  00E36A  D7FC               	goto	u3897
  7506  00E36C  2A05               	incf	Lcd_Init@data,f,c
  7507  00E36E                     L6:
  7508  00E36E  0E03               	movlw	3
  7509  00E370  6405               	cpfsgt	Lcd_Init@data,c
  7510  00E372  D7DF               	goto	l73
  7511  00E374                     l74:
  7512                           
  7513                           ;lcd.h: 71: }
  7514                           ;lcd.h: 72: LATBbits.LATB0 = 0; LATBbits.LATB1 = 0; LATBbits.LATB2 = 1; LATBbits.LATB3 =
      +                           0; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  7515  00E374  908A               	bcf	3978,0,c	;volatile
  7516  00E376  928A               	bcf	3978,1,c	;volatile
  7517  00E378  848A               	bsf	3978,2,c	;volatile
  7518  00E37A  968A               	bcf	3978,3,c	;volatile
  7519  00E37C  988A               	bcf	3978,4,c	;volatile
  7520  00E37E  9A8A               	bcf	3978,5,c	;volatile
  7521                           
  7522                           ;lcd.h: 73: LATBbits.LATB0 = 0; LATBbits.LATB1 = 0; LATBbits.LATB2 = 1; LATBbits.LATB3 =
      +                           0; LATBbits.LATB4 = 1; LATBbits.LATB5 = 0;
  7523  00E380  908A               	bcf	3978,0,c	;volatile
  7524  00E382  928A               	bcf	3978,1,c	;volatile
  7525  00E384  848A               	bsf	3978,2,c	;volatile
  7526  00E386  968A               	bcf	3978,3,c	;volatile
  7527  00E388  888A               	bsf	3978,4,c	;volatile
  7528  00E38A  9A8A               	bcf	3978,5,c	;volatile
  7529                           
  7530                           ;lcd.h: 74: _delay((unsigned long)((5)*(8000000/4000000.0)));
  7531  00E38C  0E03               	movlw	3
  7532  00E38E                     u3907:
  7533  00E38E  2EE8               	decfsz	wreg,f,c
  7534  00E390  D7FE               	goto	u3907
  7535  00E392  F000               	nop	
  7536                           
  7537                           ;lcd.h: 75: LATBbits.LATB0 = 0; LATBbits.LATB1 = 0; LATBbits.LATB2 = 1; LATBbits.LATB3 =
      +                           0; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  7538  00E394  908A               	bcf	3978,0,c	;volatile
  7539  00E396  928A               	bcf	3978,1,c	;volatile
  7540  00E398  848A               	bsf	3978,2,c	;volatile
  7541  00E39A  968A               	bcf	3978,3,c	;volatile
  7542  00E39C  988A               	bcf	3978,4,c	;volatile
  7543  00E39E  9A8A               	bcf	3978,5,c	;volatile
  7544                           
  7545                           ;lcd.h: 76: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7546  00E3A0  0E0F               	movlw	15
  7547  00E3A2  6E04               	movwf	??_Lcd_Init& (0+255),c
  7548  00E3A4  0E48               	movlw	72
  7549  00E3A6                     u3917:
  7550  00E3A6  2EE8               	decfsz	wreg,f,c
  7551  00E3A8  D7FE               	goto	u3917
  7552  00E3AA  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7553  00E3AC  D7FC               	goto	u3917
  7554                           
  7555                           ;lcd.h: 77: data = 40; Lcd_Cmd(data);
  7556  00E3AE  0E28               	movlw	40
  7557  00E3B0  6E05               	movwf	Lcd_Init@data,c
  7558  00E3B2  5005               	movf	Lcd_Init@data,w,c
  7559  00E3B4  EC7B  F072         	call	_Lcd_Cmd
  7560                           
  7561                           ;lcd.h: 78: data = 16; Lcd_Cmd(data);
  7562  00E3B8  0E10               	movlw	16
  7563  00E3BA  6E05               	movwf	Lcd_Init@data,c
  7564  00E3BC  5005               	movf	Lcd_Init@data,w,c
  7565  00E3BE  EC7B  F072         	call	_Lcd_Cmd
  7566                           
  7567                           ;lcd.h: 79: data = 1; Lcd_Cmd(data);
  7568  00E3C2  0E01               	movlw	1
  7569  00E3C4  6E05               	movwf	Lcd_Init@data,c
  7570  00E3C6  5005               	movf	Lcd_Init@data,w,c
  7571  00E3C8  EC7B  F072         	call	_Lcd_Cmd
  7572                           
  7573                           ;lcd.h: 80: data = 15; Lcd_Cmd(data);
  7574  00E3CC  0E0F               	movlw	15
  7575  00E3CE  6E05               	movwf	Lcd_Init@data,c
  7576  00E3D0  5005               	movf	Lcd_Init@data,w,c
  7577  00E3D2  EC7B  F072         	call	_Lcd_Cmd
  7578  00E3D6  0012               	return		;funcret
  7579  00E3D8                     __end_of_Lcd_Init:
  7580                           	opt stack 0
  7581                           tblptru	equ	0xFF8
  7582                           tblptrh	equ	0xFF7
  7583                           tblptrl	equ	0xFF6
  7584                           tablat	equ	0xFF5
  7585                           prodh	equ	0xFF4
  7586                           prodl	equ	0xFF3
  7587                           intcon	equ	0xFF2
  7588                           postinc0	equ	0xFEE
  7589                           wreg	equ	0xFE8
  7590                           postdec1	equ	0xFE5
  7591                           fsr1l	equ	0xFE1
  7592                           indf2	equ	0xFDF
  7593                           postinc2	equ	0xFDE
  7594                           postdec2	equ	0xFDD
  7595                           fsr2h	equ	0xFDA
  7596                           fsr2l	equ	0xFD9
  7597                           status	equ	0xFD8
  7598                           
  7599 ;; *************** function _Lcd_Cmd *****************
  7600 ;; Defined at:
  7601 ;;		line 140 in file "../lcd.h"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  data            1    wreg     unsigned char 
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;  data            1    2[COMRAM] unsigned char 
  7606 ;; Return value:  Size  Location     Type
  7607 ;;		None               void
  7608 ;; Registers used:
  7609 ;;		wreg, status,2, status,0
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7618 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7619 ;;Total ram usage:        3 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; This function calls:
  7622 ;;		Nothing
  7623 ;; This function is called by:
  7624 ;;		_Lcd_Init
  7625 ;;		_Lcd_Out
  7626 ;;		_main
  7627 ;;		_V_ProgReloj
  7628 ;;		_V_ProgRiegoIlum
  7629 ;;		_Lcd_Out2
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           	psect	text22
  7634  00E4F6                     __ptext22:
  7635                           	opt stack 0
  7636  00E4F6                     _Lcd_Cmd:
  7637                           	opt stack 28
  7638                           
  7639                           ;incstack = 0
  7640                           ;Lcd_Cmd@data stored from wreg
  7641  00E4F6  6E03               	movwf	Lcd_Cmd@data,c
  7642                           
  7643                           ;lcd.h: 141: LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  7644  00E4F8  988A               	bcf	3978,4,c	;volatile
  7645  00E4FA  9A8A               	bcf	3978,5,c	;volatile
  7646                           
  7647                           ;lcd.h: 142: LATBbits.LATB0 = (data & 0b10000000)>>7; LATBbits.LATB1 = (data & 0b0100000
      +                          0)>>6;
  7648  00E4FC  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  7649  00E4FE  AE03               	btfss	Lcd_Cmd@data,7,c
  7650  00E500  D001               	bra	u1905
  7651  00E502  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  7652  00E504                     u1905:
  7653  00E504  0E01               	movlw	1
  7654  00E506  1601               	andwf	??_Lcd_Cmd,f,c
  7655  00E508  508A               	movf	3978,w,c	;volatile
  7656  00E50A  1801               	xorwf	??_Lcd_Cmd,w,c
  7657  00E50C  0BFE               	andlw	-2
  7658  00E50E  1801               	xorwf	??_Lcd_Cmd,w,c
  7659  00E510  6E8A               	movwf	3978,c	;volatile
  7660  00E512  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7661  00E516  0E06               	movlw	6
  7662  00E518  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7663  00E51A                     u1915:
  7664  00E51A  90D8               	bcf	status,0,c
  7665  00E51C  3201               	rrcf	??_Lcd_Cmd,f,c
  7666  00E51E  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7667  00E520  D7FC               	goto	u1915
  7668  00E522  0E01               	movlw	1
  7669  00E524  1601               	andwf	??_Lcd_Cmd,f,c
  7670  00E526  4601               	rlncf	??_Lcd_Cmd,f,c
  7671  00E528  508A               	movf	3978,w,c	;volatile
  7672  00E52A  1801               	xorwf	??_Lcd_Cmd,w,c
  7673  00E52C  0BFD               	andlw	-3
  7674  00E52E  1801               	xorwf	??_Lcd_Cmd,w,c
  7675  00E530  6E8A               	movwf	3978,c	;volatile
  7676                           
  7677                           ;lcd.h: 143: LATBbits.LATB2 = (data & 0b00100000)>>5; LATBbits.LATB3 = (data & 0b0001000
      +                          0)>>4;
  7678  00E532  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7679  00E536  0E05               	movlw	5
  7680  00E538  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7681  00E53A                     u1925:
  7682  00E53A  90D8               	bcf	status,0,c
  7683  00E53C  3201               	rrcf	??_Lcd_Cmd,f,c
  7684  00E53E  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7685  00E540  D7FC               	goto	u1925
  7686  00E542  0E01               	movlw	1
  7687  00E544  1601               	andwf	??_Lcd_Cmd,f,c
  7688  00E546  4601               	rlncf	??_Lcd_Cmd,f,c
  7689  00E548  4601               	rlncf	??_Lcd_Cmd,f,c
  7690  00E54A  508A               	movf	3978,w,c	;volatile
  7691  00E54C  1801               	xorwf	??_Lcd_Cmd,w,c
  7692  00E54E  0BFB               	andlw	-5
  7693  00E550  1801               	xorwf	??_Lcd_Cmd,w,c
  7694  00E552  6E8A               	movwf	3978,c	;volatile
  7695  00E554  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7696  00E558  3A01               	swapf	??_Lcd_Cmd,f,c
  7697  00E55A  0E0F               	movlw	15
  7698  00E55C  1601               	andwf	??_Lcd_Cmd,f,c
  7699  00E55E  0E01               	movlw	1
  7700  00E560  1601               	andwf	??_Lcd_Cmd,f,c
  7701  00E562  4601               	rlncf	??_Lcd_Cmd,f,c
  7702  00E564  4601               	rlncf	??_Lcd_Cmd,f,c
  7703  00E566  4601               	rlncf	??_Lcd_Cmd,f,c
  7704  00E568  508A               	movf	3978,w,c	;volatile
  7705  00E56A  1801               	xorwf	??_Lcd_Cmd,w,c
  7706  00E56C  0BF7               	andlw	-9
  7707  00E56E  1801               	xorwf	??_Lcd_Cmd,w,c
  7708  00E570  6E8A               	movwf	3978,c	;volatile
  7709                           
  7710                           ;lcd.h: 144: _delay(10);
  7711  00E572  0E03               	movlw	3
  7712  00E574                     u3927:
  7713  00E574  2EE8               	decfsz	wreg,f,c
  7714  00E576  D7FE               	goto	u3927
  7715  00E578  F000               	nop	
  7716                           
  7717                           ;lcd.h: 145: LATBbits.LATB4 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); LATBb
      +                          its.LATB4 = 0;
  7718  00E57A  888A               	bsf	3978,4,c	;volatile
  7719  00E57C  0E03               	movlw	3
  7720  00E57E                     u3937:
  7721  00E57E  2EE8               	decfsz	wreg,f,c
  7722  00E580  D7FE               	goto	u3937
  7723  00E582  F000               	nop	
  7724  00E584  988A               	bcf	3978,4,c	;volatile
  7725                           
  7726                           ;lcd.h: 146: LATBbits.LATB0 = (data & 0b00001000)>>3; LATBbits.LATB1 = (data & 0b0000010
      +                          0)>>2;
  7727  00E586  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7728  00E58A  90D8               	bcf	status,0,c
  7729  00E58C  3201               	rrcf	??_Lcd_Cmd,f,c
  7730  00E58E  90D8               	bcf	status,0,c
  7731  00E590  3201               	rrcf	??_Lcd_Cmd,f,c
  7732  00E592  90D8               	bcf	status,0,c
  7733  00E594  3201               	rrcf	??_Lcd_Cmd,f,c
  7734  00E596  0E01               	movlw	1
  7735  00E598  1601               	andwf	??_Lcd_Cmd,f,c
  7736  00E59A  508A               	movf	3978,w,c	;volatile
  7737  00E59C  1801               	xorwf	??_Lcd_Cmd,w,c
  7738  00E59E  0BFE               	andlw	-2
  7739  00E5A0  1801               	xorwf	??_Lcd_Cmd,w,c
  7740  00E5A2  6E8A               	movwf	3978,c	;volatile
  7741  00E5A4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7742  00E5A8  90D8               	bcf	status,0,c
  7743  00E5AA  3201               	rrcf	??_Lcd_Cmd,f,c
  7744  00E5AC  90D8               	bcf	status,0,c
  7745  00E5AE  3201               	rrcf	??_Lcd_Cmd,f,c
  7746  00E5B0  0E01               	movlw	1
  7747  00E5B2  1601               	andwf	??_Lcd_Cmd,f,c
  7748  00E5B4  4601               	rlncf	??_Lcd_Cmd,f,c
  7749  00E5B6  508A               	movf	3978,w,c	;volatile
  7750  00E5B8  1801               	xorwf	??_Lcd_Cmd,w,c
  7751  00E5BA  0BFD               	andlw	-3
  7752  00E5BC  1801               	xorwf	??_Lcd_Cmd,w,c
  7753  00E5BE  6E8A               	movwf	3978,c	;volatile
  7754                           
  7755                           ;lcd.h: 147: LATBbits.LATB2 = (data & 0b00000010)>>1; LATBbits.LATB3 = (data & 0b0000000
      +                          1);
  7756  00E5C0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7757  00E5C4  90D8               	bcf	status,0,c
  7758  00E5C6  3201               	rrcf	??_Lcd_Cmd,f,c
  7759  00E5C8  0E01               	movlw	1
  7760  00E5CA  1601               	andwf	??_Lcd_Cmd,f,c
  7761  00E5CC  4601               	rlncf	??_Lcd_Cmd,f,c
  7762  00E5CE  4601               	rlncf	??_Lcd_Cmd,f,c
  7763  00E5D0  508A               	movf	3978,w,c	;volatile
  7764  00E5D2  1801               	xorwf	??_Lcd_Cmd,w,c
  7765  00E5D4  0BFB               	andlw	-5
  7766  00E5D6  1801               	xorwf	??_Lcd_Cmd,w,c
  7767  00E5D8  6E8A               	movwf	3978,c	;volatile
  7768  00E5DA  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7769  00E5DE  0E01               	movlw	1
  7770  00E5E0  1601               	andwf	??_Lcd_Cmd,f,c
  7771  00E5E2  4601               	rlncf	??_Lcd_Cmd,f,c
  7772  00E5E4  4601               	rlncf	??_Lcd_Cmd,f,c
  7773  00E5E6  4601               	rlncf	??_Lcd_Cmd,f,c
  7774  00E5E8  508A               	movf	3978,w,c	;volatile
  7775  00E5EA  1801               	xorwf	??_Lcd_Cmd,w,c
  7776  00E5EC  0BF7               	andlw	-9
  7777  00E5EE  1801               	xorwf	??_Lcd_Cmd,w,c
  7778  00E5F0  6E8A               	movwf	3978,c	;volatile
  7779                           
  7780                           ;lcd.h: 148: _delay(10);
  7781  00E5F2  0E03               	movlw	3
  7782  00E5F4                     u3947:
  7783  00E5F4  2EE8               	decfsz	wreg,f,c
  7784  00E5F6  D7FE               	goto	u3947
  7785  00E5F8  F000               	nop	
  7786                           
  7787                           ;lcd.h: 149: LATBbits.LATB4 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); LATBb
      +                          its.LATB4 = 0;
  7788  00E5FA  888A               	bsf	3978,4,c	;volatile
  7789  00E5FC  0E03               	movlw	3
  7790  00E5FE                     u3957:
  7791  00E5FE  2EE8               	decfsz	wreg,f,c
  7792  00E600  D7FE               	goto	u3957
  7793  00E602  F000               	nop	
  7794  00E604  988A               	bcf	3978,4,c	;volatile
  7795                           
  7796                           ;lcd.h: 150: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7797  00E606  0E0F               	movlw	15
  7798  00E608  6E01               	movwf	??_Lcd_Cmd& (0+255),c
  7799  00E60A  0E48               	movlw	72
  7800  00E60C                     u3967:
  7801  00E60C  2EE8               	decfsz	wreg,f,c
  7802  00E60E  D7FE               	goto	u3967
  7803  00E610  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
  7804  00E612  D7FC               	goto	u3967
  7805  00E614  0012               	return		;funcret
  7806  00E616                     __end_of_Lcd_Cmd:
  7807                           	opt stack 0
  7808                           tblptru	equ	0xFF8
  7809                           tblptrh	equ	0xFF7
  7810                           tblptrl	equ	0xFF6
  7811                           tablat	equ	0xFF5
  7812                           prodh	equ	0xFF4
  7813                           prodl	equ	0xFF3
  7814                           intcon	equ	0xFF2
  7815                           postinc0	equ	0xFEE
  7816                           wreg	equ	0xFE8
  7817                           postdec1	equ	0xFE5
  7818                           fsr1l	equ	0xFE1
  7819                           indf2	equ	0xFDF
  7820                           postinc2	equ	0xFDE
  7821                           postdec2	equ	0xFDD
  7822                           fsr2h	equ	0xFDA
  7823                           fsr2l	equ	0xFD9
  7824                           status	equ	0xFD8
  7825                           tblptru	equ	0xFF8
  7826                           tblptrh	equ	0xFF7
  7827                           tblptrl	equ	0xFF6
  7828                           tablat	equ	0xFF5
  7829                           prodh	equ	0xFF4
  7830                           prodl	equ	0xFF3
  7831                           intcon	equ	0xFF2
  7832                           postinc0	equ	0xFEE
  7833                           wreg	equ	0xFE8
  7834                           postdec1	equ	0xFE5
  7835                           fsr1l	equ	0xFE1
  7836                           indf2	equ	0xFDF
  7837                           postinc2	equ	0xFDE
  7838                           postdec2	equ	0xFDD
  7839                           fsr2h	equ	0xFDA
  7840                           fsr2l	equ	0xFD9
  7841                           status	equ	0xFD8
  7842                           
  7843                           	psect	rparam
  7844  0000                     tblptru	equ	0xFF8
  7845                           tblptrh	equ	0xFF7
  7846                           tblptrl	equ	0xFF6
  7847                           tablat	equ	0xFF5
  7848                           prodh	equ	0xFF4
  7849                           prodl	equ	0xFF3
  7850                           intcon	equ	0xFF2
  7851                           postinc0	equ	0xFEE
  7852                           wreg	equ	0xFE8
  7853                           postdec1	equ	0xFE5
  7854                           fsr1l	equ	0xFE1
  7855                           indf2	equ	0xFDF
  7856                           postinc2	equ	0xFDE
  7857                           postdec2	equ	0xFDD
  7858                           fsr2h	equ	0xFDA
  7859                           fsr2l	equ	0xFD9
  7860                           status	equ	0xFD8


Data Sizes:
    Strings     343
    Constant    10
    Data        78
    BSS         72
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     81      95
    BANK0           160      0     149
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(BANK0[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(BANK0[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_88(CODE[7]), STR_87(CODE[21]), STR_85(CODE[21]), STR_83(CODE[21]), 
		 -> STR_81(CODE[21]), STR_79(CODE[21]), STR_77(CODE[21]), STR_75(CODE[21]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_86(CODE[3]), STR_84(CODE[3]), STR_82(CODE[3]), STR_80(CODE[3]), 
		 -> STR_78(CODE[3]), STR_76(CODE[3]), STR_74(CODE[3]), STR_72(CODE[5]), 
		 -> STR_70(CODE[5]), STR_68(CODE[5]), STR_66(CODE[5]), STR_64(CODE[5]), 
		 -> STR_62(CODE[5]), STR_60(CODE[5]), STR_58(CODE[5]), STR_54(CODE[5]), 
		 -> STR_52(CODE[5]), STR_50(CODE[5]), STR_48(CODE[5]), STR_46(CODE[5]), 
		 -> STR_44(CODE[5]), STR_42(CODE[5]), STR_40(CODE[5]), STR_38(CODE[14]), 
		 -> STR_37(CODE[15]), STR_35(CODE[14]), STR_34(CODE[15]), STR_31(CODE[5]), 
		 -> STR_29(CODE[5]), STR_27(CODE[5]), STR_25(CODE[5]), STR_23(CODE[5]), 
		 -> STR_18(CODE[5]), STR_16(CODE[5]), STR_14(CODE[5]), STR_12(CODE[5]), 
		 -> STR_10(CODE[5]), STR_6(CODE[28]), STR_5(CODE[28]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> Convert_diasem@buffer_dia(COMRAM[20]), buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__Convert_diasem	PTR unsigned char  size(2) Largest target is 20
		 -> Convert_diasem@buffer_dia(COMRAM[20]), 

    V_Principal@cte	PTR unsigned char  size(2) Largest target is 20
		 -> Convert_diasem@buffer_dia(COMRAM[20]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> Convert_diasem@buffer_dia(COMRAM[20]), STR_73(CODE[1]), STR_71(CODE[1]), STR_69(CODE[1]), 
		 -> STR_67(CODE[1]), STR_65(CODE[1]), STR_63(CODE[1]), STR_61(CODE[1]), 
		 -> STR_59(CODE[1]), STR_57(CODE[1]), STR_56(CODE[1]), STR_55(CODE[1]), 
		 -> STR_53(CODE[1]), STR_51(CODE[1]), STR_49(CODE[1]), STR_47(CODE[1]), 
		 -> STR_45(CODE[1]), STR_43(CODE[1]), STR_41(CODE[1]), STR_39(CODE[1]), 
		 -> STR_36(CODE[12]), STR_33(CODE[6]), STR_32(CODE[1]), STR_30(CODE[1]), 
		 -> STR_28(CODE[1]), STR_26(CODE[1]), STR_24(CODE[1]), STR_22(CODE[1]), 
		 -> STR_21(CODE[1]), STR_20(CODE[1]), STR_19(CODE[1]), STR_17(CODE[1]), 
		 -> STR_15(CODE[1]), STR_13(CODE[1]), STR_11(CODE[1]), STR_9(CODE[1]), 
		 -> STR_8(CODE[1]), STR_7(CODE[18]), STR_4(CODE[21]), STR_3(CODE[20]), 
		 -> STR_2(CODE[19]), buffer1(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_V_ProgRiegoIlum
    _V_ProgRiegoIlum->_Lcd_Out
    _V_ProgReloj->_Lcd_Out
    _Write_RTC->_RtccWriteDate
    _V_Principal->_Lcd_Out
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime
    _Lcd_Out->_Convert_diasem
    _Convert_diasem->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   95312
                                             80 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                        _V_Principal
                        _V_ProgReloj
                    _V_ProgRiegoIlum
                          _Write_RTC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _V_ProgRiegoIlum                                     12    12      0   21159
                                             68 COMRAM    12    12      0
                            _Lcd_Cmd
                            _Lcd_Out
                          _Write_RTC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _V_ProgReloj                                         10    10      0   28305
                                             68 COMRAM    10    10      0
                     _Convert_diasem
                            _Lcd_Cmd
                            _Lcd_Out
                          _Write_RTC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (2) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _V_Principal                                          2     2      0   25766
                                             68 COMRAM     2     2      0
                     _Convert_diasem
                            _Lcd_Out
                           _Read_RTC
                    _lee_temperatura
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lee_temperatura                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (3) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (3) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              5     2      3   10261
                                             63 COMRAM     5     2      3
                     _Convert_diasem (ARG)
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Convert_diasem                                      24    22      2    7460
                                             39 COMRAM    24    22      2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    7054
                                             12 COMRAM    27    17     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Convert_diasem (ARG)
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _Lcd_Chr_CP (ARG)
     _Lcd_Cmd (ARG)
   _V_Principal
     _Convert_diasem
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _Lcd_Out
       _Convert_diasem (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _Lcd_Chr_CP (ARG)
       _Lcd_Cmd (ARG)
     _Read_RTC
       _RtccReadDate
       _RtccReadTime
     _lee_temperatura
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _V_ProgReloj
     _Convert_diasem
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _Lcd_Cmd
     _Lcd_Out
       _Convert_diasem (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _Lcd_Chr_CP (ARG)
       _Lcd_Cmd (ARG)
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _V_ProgRiegoIlum
     _Lcd_Cmd
     _Lcd_Out
       _Convert_diasem (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _Lcd_Chr_CP (ARG)
       _Lcd_Cmd (ARG)
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _Write_RTC
     _RtccWrOn
     _RtccWriteDate
       _RtccWrOn
     _RtccWriteTime
       _RtccWrOn
     ___awdiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      95       5       93.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     51      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F4       6        0.0%
DATA                 0      0      F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Nov 27 00:06:15 2020

                V_Principal@cte 0045                               _i 00C4                              l73 E332  
                            l74 E374            V_ProgReloj@minuto_tr 004C                    ___awdiv@sign 0006  
           ___wmul@multiplicand 0003             V_ProgReloj@posicion 004D                    __CFG_CP0$OFF 000000  
                           l330 DD1A                             l396 EFD2                             _dia 009E  
                           _mes 00A2                             wreg 000FE8                 RtccReadDate@pDt 0001  
      __size_of_V_ProgRiegoIlum 083A                            l1019 DE62                            l1029 DE06  
                          l3000 E470                            l3002 E48E                            l3006 E4AC  
                          l3008 E4EA                            l2410 DD4C                            l3202 F36A  
                          l3212 F3EC                            l3132 F144                            l3116 F0D2  
                          l2430 DE38                            l3222 F41E                            l3150 F1AC  
                          l2600 EF86                            l2520 ED7C                            l2512 ED4E  
                          l3232 F462                            l3208 F39A                            l3144 F198  
                          l3128 F114                            l3400 F93C                            l2426 DE26  
                          l2450 DDE4                            l2514 ED5C                            l2506 ED34  
                          l3250 F4F6                            l3226 F44E                            l3162 F200  
                          l3138 F158                            l2428 DE30                            l2620 F02C  
                          l2540 EE26                            l2532 EDFC                            l2524 ED9A  
                          l3244 F4B6                            l3180 F294                            l3156 F1EC  
                          l3412 F990                            l3340 F7AA                            l2438 DE56  
                          l2454 DDFA                            l2446 DDD2                            l2614 EFD8  
                          l2606 EFA8                            l2550 EE6A                            l2542 EE30  
                          l2518 ED66                            l2622 F038                            l2710 E910  
                          l3262 F54A                            l3238 F4A2                            l3174 F254  
                          l3502 FC96                            l3430 FA24                            l3406 F97C  
                          l2448 DDDC                            l2608 EFB0                            l2552 EE74  
                          l2544 EE36                            l2624 F054                            l2720 E940  
                          l2704 E8D6                            l3280 F5B2                            l3256 F50A  
                          l3168 F240                            l3192 F2E8                            l3520 FCFE  
                          l3424 F9E4                            l3352 F7EC                            l2570 EED4  
                          l2714 E924                            l2642 E21A                            l3274 F59E  
                          l3186 F2A8                            l3514 FCEA                            l3418 F9D0  
                          l3370 F880                            l3442 FA78                            l2572 EEFC  
                          l2564 EEBA                            l2556 EE86                            l2652 E24A  
                          l2636 E1F0                            l3292 F63C                            l3268 F55E  
                          l3196 F30E                            l3532 FD52                            l3508 FCAA  
                          l3452 FAFA                            l3436 FA38                            l3364 F840  
                          l2590 EF4C                            l2582 EF24                            l2566 EECE  
                          l2558 EE9A                            l2646 E22E                            l2830 E074  
                          l3286 F5F2                            l3198 F318                            l3550 FDE6  
                          l3526 FD3E                            l3462 FB7C                            l3446 FA9E  
                          l3382 F8D4                            l3358 F82C                            l3630 EC1E  
                          l2760 E9AE                            l2752 E996                            l2680 E29A  
                          l3296 F652                            l3544 FDA6                            l3472 FBAE  
                          l3448 FAA8                            l3376 F894                            l2594 EF70  
                          l2586 EF48                            l2578 EF18                            l2842 E09C  
                          l3538 FD92                            l3490 FC42                            l3562 FE3A  
                          l3458 FB2A                            l3394 F928                            l3650 ECC8  
                          l3642 EC82                            l2596 EF7A                            l2764 DECE  
                          l2756 E9A2                            l2684 E2A6                            l2844 E0A6  
                          l2836 E086                            l3556 FDFA                            l3484 FC02  
                          l3388 F8E8                            l3572 FE8C                            l3636 EC3E  
                          l2870 DFD4                            l2790 DF3C                            l2862 E0E8  
                          l2854 E0CC                            l2846 E0AE                            l3478 FBEE  
                          l3646 ECAC                            l2872 DFDA                            l2880 E004  
                          l2688 E2B2                            l3568 FE76                            l3496 FC56  
                          l3656 ECF8                            l2882 E00C                            l2874 DFE0  
                          l2858 E0D8                            l2868 DFCE                            l2990 E3DA  
                          l2886 E036                            l2878 DFE8                            l2992 E3F8  
                          l2994 E416                            l2996 E434                            l2998 E452  
                          STR_1 FFEE                            STR_2 FF93                            STR_3 FF7F  
                          STR_4 FED7                            STR_5 FE9F                            STR_6 FEBB  
                          STR_7 FFA6                            STR_8 FEEB                            STR_9 FEEB  
                          u3200 FB02                            u3210 FB04                            u3230 FB20  
                          u3240 FB84                            u3160 FA80                            u2530 F0D0  
                          u3250 FB86                            u3170 FA82                            u2700 F2F2  
                          u2540 F0EA                            u2470 E02C                            u2550 F0EC  
                          u3430 FE42                            u3510 EC46                            u2480 E056  
                          u3440 FE44                            u3600 ECD0                            u3520 EC48  
                          u1905 E504                            u2730 F372                            u3610 ECD2  
                          u1915 E51A                            u2740 F374                            u3540 EC8A  
                          u1925 E53A                            u2477 E022                            u3550 EC8C  
                          u1935 E624                            u2487 E04C                            u2920 F5FA  
                          u2760 F390                            u3480 EC2A                            u1945 E63A  
                          u2930 F5FC                            u2770 F3F4                            u2690 F2F0  
                          u3570 ECB4                            u3490 EC2C                            u1955 E65A  
                          u3707 EC0C                            u2780 F3F6                            u3580 ECB6  
                          u3717 ED04                            u3637 EB9C                            u3807 E728  
                          u3727 ED1A                            u3647 EBAC                            u2960 F7A8  
                          u3817 E734                            u3737 F7B0                            u3657 EBBC  
                          u2970 F7C2                            u3907 E38E                            u3827 E2DC  
                          u3747 F0D8                            u3667 EBCC                            u2980 F7C4  
                          u3917 E3A6                            u3837 E2EA                            u3757 DD24  
                          u3677 EBDC                            u3927 E574                            u3847 E2F8  
                          u3767 E694                            u3687 EBEC                            u3937 E57E  
                          u3857 E306                            u3777 E69E                            u3697 EBFC  
                          u3947 E5F4                            u3867 E314                            u3787 E714  
                          u3957 E5FE                            u3877 E322                            u3797 E71E  
                          u3967 E60C                            u3887 E34C                            u3897 E364  
V_ProgRiegoIlum@i_hora_riego_tr 004B                            _anio 0052                            _main EB4E  
                          _hora 00A0                            fsr2h 000FDA                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                   __CFG_T1DIG$ON 000000  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                 __CFG_IESO$OFF 000000                RtccReadDate@rTD0 000B                RtccReadDate@rTD1 0003  
               __end_of_Lcd_Cmd E616                 __end_of_Lcd_Out E05E                    ___param_bank 000010  
               RtccReadTime@pTm 0001                      _Lcd_Chr_CP E616                   ??_V_ProgReloj 0045  
                 ??_V_Principal 0045                   __CFG_PLLDIV$1 000000                           ?_main 0001  
               __end_of___awdiv E0F4                           STR_10 FFC2                           STR_11 FEEB  
                         STR_20 FEEB                           STR_12 FFC2                           STR_21 FEEB  
                         STR_13 FEEB                           STR_30 FEEB                           STR_22 FEEB  
                         STR_14 FFC2                           STR_15 FEEB                           STR_31 FFC2  
                         STR_23 FFC2                           STR_32 FEEB                           STR_24 FEEB  
                         STR_40 FFC2                           STR_16 FFC2                           STR_41 FEEB  
                         STR_17 FEEB                           STR_25 FFC2                           STR_33 FFE8  
                         STR_26 FEEB                           STR_50 FFC2                           STR_42 FFC2  
                         STR_18 FFC2                           STR_34 FFB8                           STR_51 FEEB  
                         STR_43 FEEB                           STR_19 FEEB                           STR_27 FFC2  
                         STR_35 FFC7                           STR_28 FEEB                           STR_60 FFC2  
                         STR_52 FFC2                           STR_44 FFC2                           STR_36 FFD5  
                         STR_61 FEEB                           STR_53 FEEB                           STR_45 FEEB  
                         STR_29 FFC2                           STR_37 FFB8                           STR_70 FFC2  
                         STR_62 FFC2                           STR_54 FFC2                           STR_46 FFC2  
                         STR_38 FFC7                           STR_71 FEEB                           STR_63 FEEB  
                         STR_55 FEEB                           STR_47 FEEB                           STR_39 FEEB  
                         STR_56 FEEB                           STR_80 FFF3                           STR_72 FFC2  
                         STR_64 FFC2                           STR_48 FFC2                           STR_73 FEEB  
                         STR_65 FEEB                           STR_57 FEEB                           STR_49 FEEB  
                         STR_81 FF6A                           STR_82 FFF3                           STR_66 FFC2  
                         STR_58 FFC2                           STR_74 FFF3                           STR_67 FEEB  
                         STR_59 FEEB                           STR_75 FF40                           STR_83 FF2B  
                         STR_84 FFF3                           STR_76 FFF3                           STR_68 FFC2  
                         STR_69 FEEB                           STR_85 FF55                           STR_77 FEEC  
                         STR_86 FFF3                           STR_78 FFF3                           STR_79 FF16  
                         STR_87 FF01                           STR_88 FFE1                 ___awdiv@divisor 0003  
               __end_of___lwdiv DE6C                 __end_of___lwmod DE10                 ___awdiv@counter 0005  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                __CFG_FCMEN$OFF 000000                           _Sw_Up 00CE                 __end_of_dpowers FE9F  
                         _mes_d 00EF                           _mes_u 00F0                 __end_of_isdigit DD56  
                         tablat 000FF5                      _CuentamSeg 00C8                           status 000FD8  
               __end_of_sprintf F064                __end_of_Lcd_Init E3D8         __CFG_DSWDTOSC$INTOSCREF 000000  
               __initialization DE6C                    __end_of_main ED2A                RtccReadTime@rTD0 000B  
              RtccReadTime@rTD1 0003                __end_of_Read_RTC E874                          ??_main 0051  
                 __activetblptr 000002             __end_of_V_ProgReloj F65A             __end_of_V_Principal E1B2  
              __end_of_RtccWrOn DD14                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _ADRESH 000FC4                          _EECON2 000FA7                          _ANCON0 000F48  
                        _ANCON1 000F49                ___awdiv@dividend 0001                  __CFG_WDTEN$OFF 000000  
               _lee_temperatura DD14                       ??_Lcd_Cmd 0001               ??_V_ProgRiegoIlum 0045  
              RtccWriteDate@pDt 0001                          _RTCCFG 000F3F                       ??_Lcd_Out 0043  
                __CFG_WPCFG$OFF 000000                          _Flag_1 00C9                  __CFG_WPDIS$OFF 000000  
                        _Grados 0098                  __CFG_XINST$OFF 000000                     ?_Lcd_Chr_CP 0001  
                        ___wmul DD56                       ??___awdiv 0005                  __CFG_STVREN$ON 000000  
                        _diasem 00C2                          _anio_d 00E8                          _anio_u 00E9  
              ??_Convert_diasem 002A                       ??___lwdiv 0005                       ??___lwmod 000C  
                        _hora_d 00ED                          _hora_u 00EE                          clear_0 DE72  
              ___awdiv@quotient 0007                          _minuto 00A4           __end_of_RtccWriteDate E9BA  
         __end_of_RtccWriteTime E2BE                RtccWriteTime@pTm 0001   V_ProgRiegoIlum@i_hora_ilum_tr 0047  
                  __pdataCOMRAM 0052                       ??_isdigit 0001                    __mediumconst FE94  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
V_ProgRiegoIlum@f_hora_riego_tr 004D                       ??_sprintf 0017                      __accesstop 0060  
       __end_of__initialization DEC4              __size_of_Write_RTC 0194                   ___rparam_used 000001  
                __pcstackCOMRAM 0001                    __pidataBANK0 DD7E                     _V_ProgReloj F064  
                   _V_Principal E0F4                 __CFG_DSWDTPS$G2 000000   V_ProgRiegoIlum@i_min_riego_tr 004C  
               __CFG_OSC$INTOSC 000000         __end_of_lee_temperatura DD34               _inicio_hora_riego 0059  
                     ?_Lcd_Init 0001                    sprintf@width 0025             __size_of_Lcd_Chr_CP 0128  
                    __pbssBANK0 00A6                       ?_Read_RTC 0001                      _dia_semana 00EA  
     RtccWriteTime@tempHourWDay 000A                       ?_RtccWrOn 0001                         ?___wmul 0001  
                 ?_RtccReadDate 0001                   ?_RtccReadTime 0001               __end_of_Write_RTC EB4E  
                    ??_Lcd_Init 0004                         _RTCVALH 000F99                         _RTCVALL 000F98  
                    ??_Read_RTC 0013                         _Lcd_Cmd E4F6                         _Lcd_Out DFCA  
                       __Hparam 0000                         __Lparam 0000                         _Sw_Left 00CC  
                       _Sw_Down 00CB                      ??_RtccWrOn 0001                  ??_RtccReadDate 0003  
                ??_RtccReadTime 0003                         ___awdiv E05E                 __size_of___wmul 0028  
                       ___lwdiv DE10                         ___lwmod DDC4                     _RtccTimeVal 00BE  
                       __pcinit DE6C                         _fecha_d 00EB                         _fecha_u 00EC  
                       __ramtop 0F00                         __ptext0 EB4E                         __ptext1 F65A  
                       __ptext2 F064                         __ptext3 E9BA                         __ptext4 E05E  
                       __ptext5 E1B2                         __ptext6 E874                         __ptext7 DD02  
                       __ptext8 E0F4                         __ptext9 DD14                         _buffer1 00D0  
                     _T1CONbits 000FCD                         _lectura 00CF                         _dpowers FE95  
                       _isdigit DD34                 _V_ProgRiegoIlum F65A                         _segundo 00C6  
              ?_lee_temperatura 0001    V_ProgRiegoIlum@f_min_ilum_tr 004A                         _sprintf ED2A  
          end_of_initialization DEC4                    _fin_min_ilum 0056                   __Lmediumconst FE94  
                  ??_Lcd_Chr_CP 0001                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE                       _PORTAbits 000F80  
                     _PORTCbits 000F82                __CFG_DSBOREN$OFF 000000              V_ProgReloj@anio_tr 004A  
              __CFG_CPUDIV$OSC1 000000              V_ProgReloj@hora_tr 004B                       _TRISBbits 000F93  
            __end_of_Lcd_Chr_CP E73E                __CFG_IOL1WAY$OFF 000000       RtccWriteDate@tempDayMonth 000A  
           __CFG_MSSP7B_EN$MSK7 000000                    ?_V_ProgReloj 0001                    ?_V_Principal 0001  
       __end_of_V_ProgRiegoIlum FE94                  __end_of___wmul DD7E                   __pidataCOMRAM DCFA  
     RtccWriteDate@tempHourWDay 000C                __CFG_DSWDTEN$OFF 000000             start_initialization DE6C  
          __end_of_RtccReadDate DFCA                   Lcd_Out@buffer 0041            __end_of_RtccReadTime DF3C  
             __size_of_Lcd_Init 011A            RtccWriteTime@wasAlrm 0006            RtccWriteTime@wasWrEn 0007  
        __size_of_RtccWriteDate 0146                 RtccWriteDate@di 0003          __size_of_RtccWriteTime 010C  
             __size_of_Read_RTC 0136                       _Sw_Center 00CA                       _Temp_prog 009B  
                      ??___wmul 0005                     __pdataBANK0 0060               __size_of_RtccWrOn 0012  
               RtccWriteTime@di 0003                __CFG_LPT1OSC$OFF 000000               Convert_diasem@dia 0028  
                   _ALRMCFGbits 000F91                     __pbssCOMRAM 005A         __size_of_Convert_diasem 011E  
                     _Write_RTC E9BA    V_ProgRiegoIlum@i_min_ilum_tr 0048                    _isdigit$2159 0002  
              _inicio_hora_ilum 0058                        ?_Lcd_Cmd 0001                     sprintf@flag 001B  
                      ?_Lcd_Out 0040                     sprintf@prec 001E                _inicio_min_riego 005B  
                     __pnvBANK0 00E8                ___lwdiv@dividend 0001                   __pmediumconst FE94  
                      ?___awdiv 0001                        ?___lwdiv 0001                        ?___lwmod 0008  
              ?_V_ProgRiegoIlum 0001         RtccWriteTime@tempMinSec 0008                   _RtccWriteDate E874  
                 _RtccWriteTime E1B2                        ?_isdigit 0001         V_ProgRiegoIlum@posicion 004F  
          __CFG_RTCOSC$T1OSCREF 000000        Convert_diasem@buffer_dia 002C                      ?_Write_RTC 0001  
              ___lwdiv@quotient 0005                        ?_sprintf 000D                _RtccAlrmTimeDate 00A6  
                ___wmul@product 0005                        _LATAbits 000F89                        _LATBbits 000F8A  
                      _PIE3bits 000FA3                       _segundo_d 00F3                       _segundo_u 00F4  
                      Lcd_Out@x 0040                __CFG_WDTPS$32768 000000                        Lcd_Out@y 0043  
            RtccWriteDate@wasOn 0005               V_ProgReloj@dia_tr 0048               V_ProgReloj@mes_tr 0049  
            _Rtcc_read_TimeDate 00B6                    Lcd_Init@data 0005                  ?_RtccWriteDate 0001  
          __size_of_V_ProgReloj 05F6                      _ADCON0bits 000FC2               ___wmul@multiplier 0001  
          __size_of_V_Principal 00BE                  ?_RtccWriteTime 0001           __size_of_RtccReadDate 008E  
         __size_of_RtccReadTime 006E                        _Lcd_Init E2BE                       copy_data0 DE98  
                     copy_data1 DEB8                        _Read_RTC E73E                  _fin_hora_riego 0055  
      __size_of_lee_temperatura 0020                __size_of_Lcd_Cmd 0120                __size_of_Lcd_Out 0094  
                      __Hrparam 0000                        _RtccDate 005C                        __Lrparam 0000  
                      _RtccTime 00E4                        _RtccWrOn DD02                        _Sw_Right 00CD  
                  _RtccReadDate DF3C                __size_of___awdiv 0096                    _RtccReadTime DECE  
              __size_of___lwdiv 005C                __size_of___lwmod 004C   V_ProgRiegoIlum@f_hora_ilum_tr 0049  
                _posicionesLeft 0080                    _RtccTimeDate 00AE                      sprintf@len 0023  
                    sprintf@val 001C                 _inicio_min_ilum 005A                  _Convert_diasem E3D8  
              __size_of_isdigit 0022                  Lcd_Chr_CP@data 0003                 ___lwdiv@divisor 0003  
                   ??_Write_RTC 000E                 ___lwdiv@counter 0007                        __ptext10 E73E  
                      __ptext11 DECE                        __ptext20 DE10                        __ptext12 DF3C  
                      __ptext21 E2BE                        __ptext13 DFCA                        __ptext22 E4F6  
                      __ptext14 E616                        __ptext15 E3D8                        __ptext16 ED2A  
                      __ptext17 DD34                        __ptext18 DD56                        __ptext19 DDC4  
              __size_of_sprintf 033A                     Lcd_Cmd@data 0003                   __size_of_main 01DC  
                      _minuto_d 00F1                        _minuto_u 00F2   V_ProgRiegoIlum@f_min_riego_tr 004E  
               ??_RtccWriteDate 0004                 ??_RtccWriteTime 0004          __end_of_Convert_diasem E4F6  
                 _fin_hora_ilum 0054                     Lcd_Out@data 0044                     _OSCTUNEbits 000F9B  
                    _INTCONbits 000FF2              RtccWriteTime@wasOn 0005                   _fin_min_riego 0057  
                      isdigit@c 0003                       sprintf@ap 001F                       sprintf@cp 0021  
                     sprintf@sp 000D                ___lwmod@dividend 0008                      _OSCCONbits 000FD3  
         RtccWriteDate@tempYear 0007               ??_lee_temperatura 0001                      _RTCCFGbits 000F3F  
          V_ProgReloj@diasem_tr 0047                        sprintf@c 0027                        sprintf@f 000F  
                  _posicionesUp 0060                 ?_Convert_diasem 0028                 ___lwmod@divisor 000A  
               ___lwmod@counter 000C            RtccWriteDate@wasAlrm 0006            RtccWriteDate@wasWrEn 0009  
