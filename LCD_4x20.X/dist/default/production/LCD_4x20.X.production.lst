

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Nov 27 13:46:33 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataCOMRAM
    44  00DC5A                     __pidataCOMRAM:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _anio
    48  00DC5A  0014               	dw	20
    49                           
    50                           ;initializer for _hora
    51  00DC5C  0017               	dw	23
    52                           
    53                           ;initializer for _minuto
    54  00DC5E  003A               	dw	58
    55                           
    56                           ;initializer for _inicio_hora_ilum
    57  00DC60  17                 	db	23
    58                           
    59                           ;initializer for _inicio_hora_riego
    60  00DC61  17                 	db	23
    61                           
    62                           ;initializer for _inicio_min_ilum
    63  00DC62  3B                 	db	59
    64                           
    65                           ;initializer for _inicio_min_riego
    66  00DC63  3B                 	db	59
    67                           
    68                           	psect	idataBANK0
    69  00DCE0                     __pidataBANK0:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _posicionesUp
    73  00DCE0  0002               	dw	2
    74  00DCE2  0005               	dw	5
    75  00DCE4  0002               	dw	2
    76  00DCE6  0008               	dw	8
    77  00DCE8  0002               	dw	2
    78  00DCEA  000F               	dw	15
    79  00DCEC  0002               	dw	2
    80  00DCEE  0012               	dw	18
    81  00DCF0  0004               	dw	4
    82  00DCF2  0005               	dw	5
    83  00DCF4  0004               	dw	4
    84  00DCF6  0008               	dw	8
    85  00DCF8  0004               	dw	4
    86  00DCFA  000F               	dw	15
    87  00DCFC  0004               	dw	4
    88  00DCFE  0012               	dw	18
    89                           
    90                           ;initializer for _posicionesLeft
    91  00DD00  0002               	dw	2
    92  00DD02  0000               	dw	0
    93  00DD04  0003               	dw	3
    94  00DD06  0000               	dw	0
    95  00DD08  0003               	dw	3
    96  00DD0A  0003               	dw	3
    97  00DD0C  0003               	dw	3
    98  00DD0E  0006               	dw	6
    99  00DD10  0004               	dw	4
   100  00DD12  0000               	dw	0
   101  00DD14  0004               	dw	4
   102  00DD16  0003               	dw	3
   103                           
   104                           ;initializer for _Grados
   105  00DD18  00                 	db	0
   106  00DD19  A0                 	db	160
   107  00DD1A  41                 	db	65
   108                           
   109                           ;initializer for _Temp_prog
   110  00DD1B  00                 	db	0
   111  00DD1C  B4                 	db	180
   112  00DD1D  41                 	db	65
   113                           
   114                           ;initializer for _dia
   115  00DD1E  0006               	dw	6
   116                           
   117                           ;initializer for _mes
   118  00DD20  000B               	dw	11
   119                           
   120                           	psect	mediumconst
   121  00FE94                     __pmediumconst:
   122                           	opt stack 0
   123  00FE94  00                 	db	0
   124  00FE95                     _dpowers:
   125                           	opt stack 0
   126  00FE95  0001               	dw	1
   127  00FE97  000A               	dw	10
   128  00FE99  0064               	dw	100
   129  00FE9B  03E8               	dw	1000
   130  00FE9D  2710               	dw	10000
   131  00FE9F                     __end_of_dpowers:
   132                           	opt stack 0
   133  00FE9F                     STR_5:
   134  00FE9F  25                 	db	37
   135  00FEA0  30                 	db	48	;'0'
   136  00FEA1  32                 	db	50	;'2'
   137  00FEA2  75                 	db	117	;'u'
   138  00FEA3  2F                 	db	47
   139  00FEA4  25                 	db	37
   140  00FEA5  30                 	db	48	;'0'
   141  00FEA6  32                 	db	50	;'2'
   142  00FEA7  75                 	db	117	;'u'
   143  00FEA8  2F                 	db	47
   144  00FEA9  25                 	db	37
   145  00FEAA  30                 	db	48	;'0'
   146  00FEAB  32                 	db	50	;'2'
   147  00FEAC  75                 	db	117	;'u'
   148  00FEAD  20                 	db	32
   149  00FEAE  20                 	db	32
   150  00FEAF  20                 	db	32
   151  00FEB0  20                 	db	32
   152  00FEB1  20                 	db	32
   153  00FEB2  20                 	db	32
   154  00FEB3  20                 	db	32
   155  00FEB4  20                 	db	32
   156  00FEB5  20                 	db	32
   157  00FEB6  20                 	db	32
   158  00FEB7  20                 	db	32
   159  00FEB8  20                 	db	32
   160  00FEB9  20                 	db	32
   161  00FEBA  00                 	db	0
   162  00FEBB                     STR_6:
   163  00FEBB  25                 	db	37
   164  00FEBC  30                 	db	48	;'0'
   165  00FEBD  32                 	db	50	;'2'
   166  00FEBE  75                 	db	117	;'u'
   167  00FEBF  3A                 	db	58	;':'
   168  00FEC0  25                 	db	37
   169  00FEC1  30                 	db	48	;'0'
   170  00FEC2  32                 	db	50	;'2'
   171  00FEC3  75                 	db	117	;'u'
   172  00FEC4  3A                 	db	58	;':'
   173  00FEC5  25                 	db	37
   174  00FEC6  30                 	db	48	;'0'
   175  00FEC7  32                 	db	50	;'2'
   176  00FEC8  75                 	db	117	;'u'
   177  00FEC9  20                 	db	32
   178  00FECA  20                 	db	32
   179  00FECB  20                 	db	32
   180  00FECC  20                 	db	32
   181  00FECD  20                 	db	32
   182  00FECE  20                 	db	32
   183  00FECF  20                 	db	32
   184  00FED0  20                 	db	32
   185  00FED1  20                 	db	32
   186  00FED2  20                 	db	32
   187  00FED3  20                 	db	32
   188  00FED4  20                 	db	32
   189  00FED5  20                 	db	32
   190  00FED6  00                 	db	0
   191  00FED7                     STR_4:
   192  00FED7  20                 	db	32
   193  00FED8  20                 	db	32
   194  00FED9  20                 	db	32
   195  00FEDA  20                 	db	32
   196  00FEDB  20                 	db	32
   197  00FEDC  20                 	db	32
   198  00FEDD  20                 	db	32
   199  00FEDE  20                 	db	32
   200  00FEDF  20                 	db	32
   201  00FEE0  20                 	db	32
   202  00FEE1  20                 	db	32
   203  00FEE2  20                 	db	32
   204  00FEE3  20                 	db	32
   205  00FEE4  20                 	db	32
   206  00FEE5  20                 	db	32
   207  00FEE6  20                 	db	32
   208  00FEE7  20                 	db	32
   209  00FEE8  20                 	db	32
   210  00FEE9  20                 	db	32
   211  00FEEA  20                 	db	32
   212  00FEEB  00                 	db	0
   213  00FEEC                     STR_77:
   214  00FEEC  4C                 	db	76	;'L'
   215  00FEED  75                 	db	117	;'u'
   216  00FEEE  6E                 	db	110	;'n'
   217  00FEEF  65                 	db	101	;'e'
   218  00FEF0  73                 	db	115	;'s'
   219  00FEF1  20                 	db	32
   220  00FEF2  20                 	db	32
   221  00FEF3  20                 	db	32
   222  00FEF4  20                 	db	32
   223  00FEF5  20                 	db	32
   224  00FEF6  20                 	db	32
   225  00FEF7  20                 	db	32
   226  00FEF8  20                 	db	32
   227  00FEF9  20                 	db	32
   228  00FEFA  20                 	db	32
   229  00FEFB  20                 	db	32
   230  00FEFC  20                 	db	32
   231  00FEFD  20                 	db	32
   232  00FEFE  20                 	db	32
   233  00FEFF  20                 	db	32
   234  00FF00  00                 	db	0
   235  00FF01                     STR_87:
   236  00FF01  53                 	db	83	;'S'
   237  00FF02  61                 	db	97	;'a'
   238  00FF03  62                 	db	98	;'b'
   239  00FF04  61                 	db	97	;'a'
   240  00FF05  64                 	db	100	;'d'
   241  00FF06  6F                 	db	111	;'o'
   242  00FF07  20                 	db	32
   243  00FF08  20                 	db	32
   244  00FF09  20                 	db	32
   245  00FF0A  20                 	db	32
   246  00FF0B  20                 	db	32
   247  00FF0C  20                 	db	32
   248  00FF0D  20                 	db	32
   249  00FF0E  20                 	db	32
   250  00FF0F  20                 	db	32
   251  00FF10  20                 	db	32
   252  00FF11  20                 	db	32
   253  00FF12  20                 	db	32
   254  00FF13  20                 	db	32
   255  00FF14  20                 	db	32
   256  00FF15  00                 	db	0
   257  00FF16                     STR_79:
   258  00FF16  4D                 	db	77	;'M'
   259  00FF17  61                 	db	97	;'a'
   260  00FF18  72                 	db	114	;'r'
   261  00FF19  74                 	db	116	;'t'
   262  00FF1A  65                 	db	101	;'e'
   263  00FF1B  73                 	db	115	;'s'
   264  00FF1C  20                 	db	32
   265  00FF1D  20                 	db	32
   266  00FF1E  20                 	db	32
   267  00FF1F  20                 	db	32
   268  00FF20  20                 	db	32
   269  00FF21  20                 	db	32
   270  00FF22  20                 	db	32
   271  00FF23  20                 	db	32
   272  00FF24  20                 	db	32
   273  00FF25  20                 	db	32
   274  00FF26  20                 	db	32
   275  00FF27  20                 	db	32
   276  00FF28  20                 	db	32
   277  00FF29  20                 	db	32
   278  00FF2A  00                 	db	0
   279  00FF2B                     STR_83:
   280  00FF2B  4A                 	db	74	;'J'
   281  00FF2C  75                 	db	117	;'u'
   282  00FF2D  65                 	db	101	;'e'
   283  00FF2E  76                 	db	118	;'v'
   284  00FF2F  65                 	db	101	;'e'
   285  00FF30  73                 	db	115	;'s'
   286  00FF31  20                 	db	32
   287  00FF32  20                 	db	32
   288  00FF33  20                 	db	32
   289  00FF34  20                 	db	32
   290  00FF35  20                 	db	32
   291  00FF36  20                 	db	32
   292  00FF37  20                 	db	32
   293  00FF38  20                 	db	32
   294  00FF39  20                 	db	32
   295  00FF3A  20                 	db	32
   296  00FF3B  20                 	db	32
   297  00FF3C  20                 	db	32
   298  00FF3D  20                 	db	32
   299  00FF3E  20                 	db	32
   300  00FF3F  00                 	db	0
   301  00FF40                     STR_75:
   302  00FF40  44                 	db	68	;'D'
   303  00FF41  6F                 	db	111	;'o'
   304  00FF42  6D                 	db	109	;'m'
   305  00FF43  69                 	db	105	;'i'
   306  00FF44  6E                 	db	110	;'n'
   307  00FF45  67                 	db	103	;'g'
   308  00FF46  6F                 	db	111	;'o'
   309  00FF47  20                 	db	32
   310  00FF48  20                 	db	32
   311  00FF49  20                 	db	32
   312  00FF4A  20                 	db	32
   313  00FF4B  20                 	db	32
   314  00FF4C  20                 	db	32
   315  00FF4D  20                 	db	32
   316  00FF4E  20                 	db	32
   317  00FF4F  20                 	db	32
   318  00FF50  20                 	db	32
   319  00FF51  20                 	db	32
   320  00FF52  20                 	db	32
   321  00FF53  20                 	db	32
   322  00FF54  00                 	db	0
   323  00FF55                     STR_85:
   324  00FF55  56                 	db	86	;'V'
   325  00FF56  69                 	db	105	;'i'
   326  00FF57  65                 	db	101	;'e'
   327  00FF58  72                 	db	114	;'r'
   328  00FF59  6E                 	db	110	;'n'
   329  00FF5A  65                 	db	101	;'e'
   330  00FF5B  73                 	db	115	;'s'
   331  00FF5C  20                 	db	32
   332  00FF5D  20                 	db	32
   333  00FF5E  20                 	db	32
   334  00FF5F  20                 	db	32
   335  00FF60  20                 	db	32
   336  00FF61  20                 	db	32
   337  00FF62  20                 	db	32
   338  00FF63  20                 	db	32
   339  00FF64  20                 	db	32
   340  00FF65  20                 	db	32
   341  00FF66  20                 	db	32
   342  00FF67  20                 	db	32
   343  00FF68  20                 	db	32
   344  00FF69  00                 	db	0
   345  00FF6A                     STR_81:
   346  00FF6A  4D                 	db	77	;'M'
   347  00FF6B  69                 	db	105	;'i'
   348  00FF6C  65                 	db	101	;'e'
   349  00FF6D  72                 	db	114	;'r'
   350  00FF6E  63                 	db	99	;'c'
   351  00FF6F  6F                 	db	111	;'o'
   352  00FF70  6C                 	db	108	;'l'
   353  00FF71  65                 	db	101	;'e'
   354  00FF72  73                 	db	115	;'s'
   355  00FF73  20                 	db	32
   356  00FF74  20                 	db	32
   357  00FF75  20                 	db	32
   358  00FF76  20                 	db	32
   359  00FF77  20                 	db	32
   360  00FF78  20                 	db	32
   361  00FF79  20                 	db	32
   362  00FF7A  20                 	db	32
   363  00FF7B  20                 	db	32
   364  00FF7C  20                 	db	32
   365  00FF7D  20                 	db	32
   366  00FF7E  00                 	db	0
   367  00FF7F                     STR_3:
   368  00FF7F  43                 	db	67	;'C'
   369  00FF80  45                 	db	69	;'E'
   370  00FF81  4E                 	db	78	;'N'
   371  00FF82  54                 	db	84	;'T'
   372  00FF83  45                 	db	69	;'E'
   373  00FF84  52                 	db	82	;'R'
   374  00FF85  20                 	db	32
   375  00FF86  20                 	db	32
   376  00FF87  20                 	db	32
   377  00FF88  20                 	db	32
   378  00FF89  20                 	db	32
   379  00FF8A  20                 	db	32
   380  00FF8B  20                 	db	32
   381  00FF8C  20                 	db	32
   382  00FF8D  20                 	db	32
   383  00FF8E  20                 	db	32
   384  00FF8F  20                 	db	32
   385  00FF90  20                 	db	32
   386  00FF91  20                 	db	32
   387  00FF92  00                 	db	0
   388  00FF93                     STR_2:
   389  00FF93  52                 	db	82	;'R'
   390  00FF94  49                 	db	73	;'I'
   391  00FF95  47                 	db	71	;'G'
   392  00FF96  48                 	db	72	;'H'
   393  00FF97  54                 	db	84	;'T'
   394  00FF98  20                 	db	32
   395  00FF99  20                 	db	32
   396  00FF9A  20                 	db	32
   397  00FF9B  20                 	db	32
   398  00FF9C  20                 	db	32
   399  00FF9D  20                 	db	32
   400  00FF9E  20                 	db	32
   401  00FF9F  20                 	db	32
   402  00FFA0  20                 	db	32
   403  00FFA1  20                 	db	32
   404  00FFA2  20                 	db	32
   405  00FFA3  20                 	db	32
   406  00FFA4  20                 	db	32
   407  00FFA5  00                 	db	0
   408  00FFA6                     STR_7:
   409  00FFA6  50                 	db	80	;'P'
   410  00FFA7  72                 	db	114	;'r'
   411  00FFA8  6F                 	db	111	;'o'
   412  00FFA9  67                 	db	103	;'g'
   413  00FFAA  72                 	db	114	;'r'
   414  00FFAB  61                 	db	97	;'a'
   415  00FFAC  6D                 	db	109	;'m'
   416  00FFAD  20                 	db	32
   417  00FFAE  64                 	db	100	;'d'
   418  00FFAF  65                 	db	101	;'e'
   419  00FFB0  6C                 	db	108	;'l'
   420  00FFB1  20                 	db	32
   421  00FFB2  72                 	db	114	;'r'
   422  00FFB3  65                 	db	101	;'e'
   423  00FFB4  6C                 	db	108	;'l'
   424  00FFB5  6F                 	db	111	;'o'
   425  00FFB6  6A                 	db	106	;'j'
   426  00FFB7  00                 	db	0
   427  00FFB8                     STR_34:
   428  00FFB8  49                 	db	73	;'I'
   429  00FFB9  6E                 	db	110	;'n'
   430  00FFBA  69                 	db	105	;'i'
   431  00FFBB  63                 	db	99	;'c'
   432  00FFBC  20                 	db	32
   433  00FFBD  25                 	db	37
   434  00FFBE  30                 	db	48	;'0'
   435  00FFBF  32                 	db	50	;'2'
   436  00FFC0  75                 	db	117	;'u'
   437  00FFC1  3A                 	db	58	;':'
   438  00FFC2  25                 	db	37
   439  00FFC3  30                 	db	48	;'0'
   440  00FFC4  32                 	db	50	;'2'
   441  00FFC5  75                 	db	117	;'u'
   442  00FFC6  00                 	db	0
   443  00FFC7                     STR_35:
   444  00FFC7  46                 	db	70	;'F'
   445  00FFC8  69                 	db	105	;'i'
   446  00FFC9  6E                 	db	110	;'n'
   447  00FFCA  20                 	db	32
   448  00FFCB  25                 	db	37
   449  00FFCC  30                 	db	48	;'0'
   450  00FFCD  32                 	db	50	;'2'
   451  00FFCE  75                 	db	117	;'u'
   452  00FFCF  3A                 	db	58	;':'
   453  00FFD0  25                 	db	37
   454  00FFD1  30                 	db	48	;'0'
   455  00FFD2  32                 	db	50	;'2'
   456  00FFD3  75                 	db	117	;'u'
   457  00FFD4  00                 	db	0
   458  00FFD5                     STR_36:
   459  00FFD5  49                 	db	73	;'I'
   460  00FFD6  6C                 	db	108	;'l'
   461  00FFD7  75                 	db	117	;'u'
   462  00FFD8  6D                 	db	109	;'m'
   463  00FFD9  69                 	db	105	;'i'
   464  00FFDA  6E                 	db	110	;'n'
   465  00FFDB  61                 	db	97	;'a'
   466  00FFDC  63                 	db	99	;'c'
   467  00FFDD  69                 	db	105	;'i'
   468  00FFDE  6F                 	db	111	;'o'
   469  00FFDF  6E                 	db	110	;'n'
   470  00FFE0  00                 	db	0
   471  00FFE1                     STR_88:
   472  00FFE1  28                 	db	40
   473  00FFE2  6E                 	db	110	;'n'
   474  00FFE3  75                 	db	117	;'u'
   475  00FFE4  6C                 	db	108	;'l'
   476  00FFE5  6C                 	db	108	;'l'
   477  00FFE6  29                 	db	41
   478  00FFE7  00                 	db	0
   479  00FFE8                     STR_33:
   480  00FFE8  52                 	db	82	;'R'
   481  00FFE9  69                 	db	105	;'i'
   482  00FFEA  65                 	db	101	;'e'
   483  00FFEB  67                 	db	103	;'g'
   484  00FFEC  6F                 	db	111	;'o'
   485  00FFED  00                 	db	0
   486  00FFEE                     STR_1:
   487  00FFEE  25                 	db	37
   488  00FFEF  30                 	db	48	;'0'
   489  00FFF0  33                 	db	51	;'3'
   490  00FFF1  75                 	db	117	;'u'
   491  00FFF2  00                 	db	0
   492  00FFF3                     STR_74:
   493  00FFF3  25                 	db	37
   494  00FFF4  73                 	db	115	;'s'
   495  00FFF5  00                 	db	0
   496  0000                     
   497                           ; #config settings
   498  00FFF6  00                 	db	0	; dummy byte at the end
   499  0000                     
   500                           	psect	nvBANK0
   501  0000E9                     __pnvBANK0:
   502                           	opt stack 0
   503  0000E9                     _anio_d:
   504                           	opt stack 0
   505  0000E9                     	ds	1
   506  0000EA                     _anio_u:
   507                           	opt stack 0
   508  0000EA                     	ds	1
   509  0000EB                     _dia_semana:
   510                           	opt stack 0
   511  0000EB                     	ds	1
   512  0000EC                     _fecha_d:
   513                           	opt stack 0
   514  0000EC                     	ds	1
   515  0000ED                     _fecha_u:
   516                           	opt stack 0
   517  0000ED                     	ds	1
   518  0000EE                     _hora_d:
   519                           	opt stack 0
   520  0000EE                     	ds	1
   521  0000EF                     _hora_u:
   522                           	opt stack 0
   523  0000EF                     	ds	1
   524  0000F0                     _mes_d:
   525                           	opt stack 0
   526  0000F0                     	ds	1
   527  0000F1                     _mes_u:
   528                           	opt stack 0
   529  0000F1                     	ds	1
   530  0000F2                     _minuto_d:
   531                           	opt stack 0
   532  0000F2                     	ds	1
   533  0000F3                     _minuto_u:
   534                           	opt stack 0
   535  0000F3                     	ds	1
   536  0000F4                     _segundo_d:
   537                           	opt stack 0
   538  0000F4                     	ds	1
   539  0000F5                     _segundo_u:
   540                           	opt stack 0
   541  0000F5                     	ds	1
   542  0000                     _ANCON0	set	3912
   543  0000                     _ANCON1	set	3913
   544  0000                     _RTCCFG	set	3903
   545  0000                     _RTCCFGbits	set	3903
   546  0000                     _ADCON0	set	4034
   547  0000                     _ADCON0bits	set	4034
   548  0000                     _ADCON1	set	4033
   549  0000                     _ADRESH	set	4036
   550  0000                     _ALRMCFGbits	set	3985
   551  0000                     _EECON2	set	4007
   552  0000                     _INTCONbits	set	4082
   553  0000                     _LATBbits	set	3978
   554  0000                     _OSCCONbits	set	4051
   555  0000                     _OSCTUNEbits	set	3995
   556  0000                     _PIE3bits	set	4003
   557  0000                     _PORTAbits	set	3968
   558  0000                     _PORTCbits	set	3970
   559  0000                     _RTCVALH	set	3993
   560  0000                     _RTCVALL	set	3992
   561  0000                     _T1CONbits	set	4045
   562  0000                     _TRISA	set	3986
   563  0000                     _TRISB	set	3987
   564  0000                     _TRISBbits	set	3987
   565  0000                     _TRISC	set	3988
   566                           
   567                           	psect	cinit
   568  00DE24                     __pcinit:
   569                           	opt stack 0
   570  00DE24                     start_initialization:
   571                           	opt stack 0
   572  00DE24                     __initialization:
   573                           	opt stack 0
   574                           
   575                           ; Clear objects allocated to BANK0 (71 bytes)
   576  00DE24  EE00  F060         	lfsr	0,__pbssBANK0
   577  00DE28  0E47               	movlw	71
   578  00DE2A                     clear_0:
   579  00DE2A  6AEE               	clrf	postinc0,c
   580  00DE2C  06E8               	decf	wreg,f,c
   581  00DE2E  E1FD               	bnz	clear_0
   582                           
   583                           ; Clear objects allocated to COMRAM (4 bytes)
   584  00DE30  6A5F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   585  00DE32  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   586  00DE34  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   587  00DE36  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   588                           
   589                           ; Initialize objects allocated to BANK0 (66 bytes)
   590                           ; load TBLPTR registers with __pidataBANK0
   591  00DE38  0EE0               	movlw	low __pidataBANK0
   592  00DE3A  6EF6               	movwf	tblptrl,c
   593  00DE3C  0EDC               	movlw	high __pidataBANK0
   594  00DE3E  6EF7               	movwf	tblptrh,c
   595  00DE40  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   596  00DE42  6EF8               	movwf	tblptru,c
   597  00DE44  EE00  F0A7         	lfsr	0,__pdataBANK0
   598  00DE48  EE10 F042          	lfsr	1,66
   599  00DE4C                     copy_data0:
   600  00DE4C  0009               	tblrd		*+
   601  00DE4E  CFF5 FFEE          	movff	tablat,postinc0
   602  00DE52  50E5               	movf	postdec1,w,c
   603  00DE54  50E1               	movf	fsr1l,w,c
   604  00DE56  E1FA               	bnz	copy_data0
   605                           
   606                           ; Initialize objects allocated to COMRAM (10 bytes)
   607                           ; load TBLPTR registers with __pidataCOMRAM
   608  00DE58  0E5A               	movlw	low __pidataCOMRAM
   609  00DE5A  6EF6               	movwf	tblptrl,c
   610  00DE5C  0EDC               	movlw	high __pidataCOMRAM
   611  00DE5E  6EF7               	movwf	tblptrh,c
   612  00DE60  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   613  00DE62  6EF8               	movwf	tblptru,c
   614  00DE64  EE00  F052         	lfsr	0,__pdataCOMRAM
   615  00DE68  EE10 F00A          	lfsr	1,10
   616  00DE6C                     copy_data1:
   617  00DE6C  0009               	tblrd		*+
   618  00DE6E  CFF5 FFEE          	movff	tablat,postinc0
   619  00DE72  50E5               	movf	postdec1,w,c
   620  00DE74  50E1               	movf	fsr1l,w,c
   621  00DE76  E1FA               	bnz	copy_data1
   622  00DE78                     end_of_initialization:
   623                           	opt stack 0
   624  00DE78                     __end_of__initialization:
   625                           	opt stack 0
   626  00DE78  0E00               	movlw	low (__Lmediumconst shr (0+16))
   627  00DE7A  6EF8               	movwf	tblptru,c
   628  00DE7C  0100               	movlb	0
   629  00DE7E  EFBC  F075         	goto	_main	;jump to C main() function
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           postdec1	equ	0xFE5
   637                           fsr1l	equ	0xFE1
   638                           
   639                           	psect	bssCOMRAM
   640  00005C                     __pbssCOMRAM:
   641                           	opt stack 0
   642  00005C                     _fin_hora_ilum:
   643                           	opt stack 0
   644  00005C                     	ds	1
   645  00005D                     _fin_hora_riego:
   646                           	opt stack 0
   647  00005D                     	ds	1
   648  00005E                     _fin_min_ilum:
   649                           	opt stack 0
   650  00005E                     	ds	1
   651  00005F                     _fin_min_riego:
   652                           	opt stack 0
   653  00005F                     	ds	1
   654                           tblptru	equ	0xFF8
   655                           tblptrh	equ	0xFF7
   656                           tblptrl	equ	0xFF6
   657                           tablat	equ	0xFF5
   658                           postinc0	equ	0xFEE
   659                           wreg	equ	0xFE8
   660                           postdec1	equ	0xFE5
   661                           fsr1l	equ	0xFE1
   662                           
   663                           	psect	dataCOMRAM
   664  000052                     __pdataCOMRAM:
   665                           	opt stack 0
   666  000052                     _anio:
   667                           	opt stack 0
   668  000052                     	ds	2
   669  000054                     _hora:
   670                           	opt stack 0
   671  000054                     	ds	2
   672  000056                     _minuto:
   673                           	opt stack 0
   674  000056                     	ds	2
   675  000058                     _inicio_hora_ilum:
   676                           	opt stack 0
   677  000058                     	ds	1
   678  000059                     _inicio_hora_riego:
   679                           	opt stack 0
   680  000059                     	ds	1
   681  00005A                     _inicio_min_ilum:
   682                           	opt stack 0
   683  00005A                     	ds	1
   684  00005B                     _inicio_min_riego:
   685                           	opt stack 0
   686  00005B                     	ds	1
   687                           tblptru	equ	0xFF8
   688                           tblptrh	equ	0xFF7
   689                           tblptrl	equ	0xFF6
   690                           tablat	equ	0xFF5
   691                           postinc0	equ	0xFEE
   692                           wreg	equ	0xFE8
   693                           postdec1	equ	0xFE5
   694                           fsr1l	equ	0xFE1
   695                           
   696                           	psect	bssBANK0
   697  000060                     __pbssBANK0:
   698                           	opt stack 0
   699  000060                     _RtccAlrmTimeDate:
   700                           	opt stack 0
   701  000060                     	ds	8
   702  000068                     _RtccTimeDate:
   703                           	opt stack 0
   704  000068                     	ds	8
   705  000070                     _Rtcc_read_TimeDate:
   706                           	opt stack 0
   707  000070                     	ds	8
   708  000078                     _RtccTimeVal:
   709                           	opt stack 0
   710  000078                     	ds	4
   711  00007C                     _diasem:
   712                           	opt stack 0
   713  00007C                     	ds	2
   714  00007E                     _i:
   715                           	opt stack 0
   716  00007E                     	ds	2
   717  000080                     _segundo:
   718                           	opt stack 0
   719  000080                     	ds	2
   720  000082                     _CuentamSeg:
   721                           	opt stack 0
   722  000082                     	ds	1
   723  000083                     _Flag_1:
   724                           	opt stack 0
   725  000083                     	ds	1
   726  000084                     _Humedad:
   727                           	opt stack 0
   728  000084                     	ds	1
   729  000085                     _Sw_Center:
   730                           	opt stack 0
   731  000085                     	ds	1
   732  000086                     _Sw_Down:
   733                           	opt stack 0
   734  000086                     	ds	1
   735  000087                     _Sw_Left:
   736                           	opt stack 0
   737  000087                     	ds	1
   738  000088                     _Sw_Right:
   739                           	opt stack 0
   740  000088                     	ds	1
   741  000089                     _Sw_Up:
   742                           	opt stack 0
   743  000089                     	ds	1
   744  00008A                     _lectura:
   745                           	opt stack 0
   746  00008A                     	ds	1
   747  00008B                     _buffer1:
   748                           	opt stack 0
   749  00008B                     	ds	20
   750  00009F                     _RtccDate:
   751                           	opt stack 0
   752  00009F                     	ds	4
   753  0000A3                     _RtccTime:
   754                           	opt stack 0
   755  0000A3                     	ds	4
   756                           tblptru	equ	0xFF8
   757                           tblptrh	equ	0xFF7
   758                           tblptrl	equ	0xFF6
   759                           tablat	equ	0xFF5
   760                           postinc0	equ	0xFEE
   761                           wreg	equ	0xFE8
   762                           postdec1	equ	0xFE5
   763                           fsr1l	equ	0xFE1
   764                           
   765                           	psect	dataBANK0
   766  0000A7                     __pdataBANK0:
   767                           	opt stack 0
   768  0000A7                     _posicionesUp:
   769                           	opt stack 0
   770  0000A7                     	ds	32
   771  0000C7                     _posicionesLeft:
   772                           	opt stack 0
   773  0000C7                     	ds	24
   774  0000DF                     _Grados:
   775                           	opt stack 0
   776  0000DF                     	ds	3
   777  0000E2                     _Temp_prog:
   778                           	opt stack 0
   779  0000E2                     	ds	3
   780  0000E5                     _dia:
   781                           	opt stack 0
   782  0000E5                     	ds	2
   783  0000E7                     _mes:
   784                           	opt stack 0
   785  0000E7                     	ds	2
   786                           tblptru	equ	0xFF8
   787                           tblptrh	equ	0xFF7
   788                           tblptrl	equ	0xFF6
   789                           tablat	equ	0xFF5
   790                           postinc0	equ	0xFEE
   791                           wreg	equ	0xFE8
   792                           postdec1	equ	0xFE5
   793                           fsr1l	equ	0xFE1
   794                           
   795                           	psect	cstackCOMRAM
   796  000001                     __pcstackCOMRAM:
   797                           	opt stack 0
   798  000001                     ??_Lcd_Cmd:
   799  000001                     ??_Lcd_Chr_CP:
   800  000001                     ??_control_leds_iluminacion:
   801  000001                     ??_control_leds_riego:
   802  000001                     ??_lee_temperatura:
   803  000001                     ??_isdigit:
   804  000001                     ?___wmul:
   805                           	opt stack 0
   806  000001                     ?___awdiv:
   807                           	opt stack 0
   808  000001                     ?___lwdiv:
   809                           	opt stack 0
   810  000001                     RtccReadDate@pDt:
   811                           	opt stack 0
   812  000001                     RtccReadTime@pTm:
   813                           	opt stack 0
   814  000001                     RtccWriteDate@pDt:
   815                           	opt stack 0
   816  000001                     RtccWriteTime@pTm:
   817                           	opt stack 0
   818  000001                     ___wmul@multiplier:
   819                           	opt stack 0
   820  000001                     ___awdiv@dividend:
   821                           	opt stack 0
   822  000001                     ___lwdiv@dividend:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x0
   826  000001                     	ds	1
   827  000002                     _isdigit$2093:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x1
   831  000002                     	ds	1
   832  000003                     Lcd_Chr_CP@data:
   833                           	opt stack 0
   834  000003                     Lcd_Cmd@data:
   835                           	opt stack 0
   836  000003                     RtccWriteDate@di:
   837                           	opt stack 0
   838  000003                     RtccWriteTime@di:
   839                           	opt stack 0
   840  000003                     isdigit@c:
   841                           	opt stack 0
   842  000003                     ___wmul@multiplicand:
   843                           	opt stack 0
   844  000003                     ___awdiv@divisor:
   845                           	opt stack 0
   846  000003                     ___lwdiv@divisor:
   847                           	opt stack 0
   848  000003                     RtccReadDate@rTD1:
   849                           	opt stack 0
   850  000003                     RtccReadTime@rTD1:
   851                           	opt stack 0
   852                           
   853                           ; 8 bytes @ 0x2
   854  000003                     	ds	1
   855  000004                     ??_Lcd_Init:
   856                           
   857                           ; 0 bytes @ 0x3
   858  000004                     	ds	1
   859  000005                     Lcd_Init@data:
   860                           	opt stack 0
   861  000005                     RtccWriteDate@wasOn:
   862                           	opt stack 0
   863  000005                     RtccWriteTime@wasOn:
   864                           	opt stack 0
   865  000005                     ___awdiv@counter:
   866                           	opt stack 0
   867  000005                     ___wmul@product:
   868                           	opt stack 0
   869  000005                     ___lwdiv@quotient:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x4
   873  000005                     	ds	1
   874  000006                     RtccWriteDate@wasAlrm:
   875                           	opt stack 0
   876  000006                     RtccWriteTime@wasAlrm:
   877                           	opt stack 0
   878  000006                     ___awdiv@sign:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x5
   882  000006                     	ds	1
   883  000007                     RtccWriteTime@wasWrEn:
   884                           	opt stack 0
   885  000007                     ___lwdiv@counter:
   886                           	opt stack 0
   887  000007                     RtccWriteDate@tempYear:
   888                           	opt stack 0
   889  000007                     ___awdiv@quotient:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0x6
   893  000007                     	ds	1
   894  000008                     ?___lwmod:
   895                           	opt stack 0
   896  000008                     RtccWriteTime@tempMinSec:
   897                           	opt stack 0
   898  000008                     ___lwmod@dividend:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x7
   902  000008                     	ds	1
   903  000009                     RtccWriteDate@wasWrEn:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x8
   907  000009                     	ds	1
   908  00000A                     RtccWriteDate@tempDayMonth:
   909                           	opt stack 0
   910  00000A                     RtccWriteTime@tempHourWDay:
   911                           	opt stack 0
   912  00000A                     ___lwmod@divisor:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0x9
   916  00000A                     	ds	1
   917  00000B                     RtccReadDate@rTD0:
   918                           	opt stack 0
   919  00000B                     RtccReadTime@rTD0:
   920                           	opt stack 0
   921                           
   922                           ; 8 bytes @ 0xA
   923  00000B                     	ds	1
   924  00000C                     ___lwmod@counter:
   925                           	opt stack 0
   926  00000C                     RtccWriteDate@tempHourWDay:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0xB
   930  00000C                     	ds	1
   931  00000D                     ?_sprintf:
   932                           	opt stack 0
   933  00000D                     sprintf@sp:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0xC
   937  00000D                     	ds	1
   938  00000E                     
   939                           ; 0 bytes @ 0xD
   940  00000E                     	ds	1
   941  00000F                     sprintf@f:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0xE
   945  00000F                     	ds	4
   946  000013                     
   947                           ; 0 bytes @ 0x12
   948  000013                     	ds	4
   949  000017                     ??_sprintf:
   950                           
   951                           ; 0 bytes @ 0x16
   952  000017                     	ds	4
   953  00001B                     sprintf@flag:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x1A
   957  00001B                     	ds	1
   958  00001C                     sprintf@val:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x1B
   962  00001C                     	ds	2
   963  00001E                     sprintf@prec:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x1D
   967  00001E                     	ds	1
   968  00001F                     sprintf@ap:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0x1E
   972  00001F                     	ds	2
   973  000021                     sprintf@cp:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x20
   977  000021                     	ds	2
   978  000023                     sprintf@len:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0x22
   982  000023                     	ds	2
   983  000025                     sprintf@width:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x24
   987  000025                     	ds	2
   988  000027                     sprintf@c:
   989                           	opt stack 0
   990                           
   991                           ; 1 bytes @ 0x26
   992  000027                     	ds	1
   993  000028                     ?_Convert_diasem:
   994                           	opt stack 0
   995  000028                     Convert_diasem@dia:
   996                           	opt stack 0
   997                           
   998                           ; 2 bytes @ 0x27
   999  000028                     	ds	2
  1000  00002A                     ??_Convert_diasem:
  1001                           
  1002                           ; 0 bytes @ 0x29
  1003  00002A                     	ds	2
  1004  00002C                     Convert_diasem@buffer_dia:
  1005                           	opt stack 0
  1006                           
  1007                           ; 20 bytes @ 0x2B
  1008  00002C                     	ds	20
  1009  000040                     Lcd_Out@x:
  1010                           	opt stack 0
  1011                           
  1012                           ; 1 bytes @ 0x3F
  1013  000040                     	ds	1
  1014  000041                     Lcd_Out@buffer:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x40
  1018  000041                     	ds	2
  1019  000043                     Lcd_Out@y:
  1020                           	opt stack 0
  1021                           
  1022                           ; 1 bytes @ 0x42
  1023  000043                     	ds	1
  1024  000044                     Lcd_Out@data:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x43
  1028  000044                     	ds	1
  1029  000045                     ??_V_ProgReloj:
  1030  000045                     ??_V_ProgRiegoIlum:
  1031  000045                     V_Principal@cte:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0x44
  1035  000045                     	ds	2
  1036  000047                     V_ProgReloj@diasem_tr:
  1037                           	opt stack 0
  1038  000047                     V_ProgRiegoIlum@i_hora_ilum_tr:
  1039                           	opt stack 0
  1040                           
  1041                           ; 1 bytes @ 0x46
  1042  000047                     	ds	1
  1043  000048                     V_ProgReloj@dia_tr:
  1044                           	opt stack 0
  1045  000048                     V_ProgRiegoIlum@i_min_ilum_tr:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x47
  1049  000048                     	ds	1
  1050  000049                     V_ProgReloj@mes_tr:
  1051                           	opt stack 0
  1052  000049                     V_ProgRiegoIlum@d_hora_ilum_tr:
  1053                           	opt stack 0
  1054                           
  1055                           ; 1 bytes @ 0x48
  1056  000049                     	ds	1
  1057  00004A                     V_ProgReloj@anio_tr:
  1058                           	opt stack 0
  1059  00004A                     V_ProgRiegoIlum@d_min_ilum_tr:
  1060                           	opt stack 0
  1061                           
  1062                           ; 1 bytes @ 0x49
  1063  00004A                     	ds	1
  1064  00004B                     V_ProgReloj@hora_tr:
  1065                           	opt stack 0
  1066  00004B                     V_ProgRiegoIlum@i_hora_riego_tr:
  1067                           	opt stack 0
  1068                           
  1069                           ; 1 bytes @ 0x4A
  1070  00004B                     	ds	1
  1071  00004C                     V_ProgReloj@minuto_tr:
  1072                           	opt stack 0
  1073  00004C                     V_ProgRiegoIlum@i_min_riego_tr:
  1074                           	opt stack 0
  1075                           
  1076                           ; 1 bytes @ 0x4B
  1077  00004C                     	ds	1
  1078  00004D                     V_ProgRiegoIlum@d_hora_riego_tr:
  1079                           	opt stack 0
  1080  00004D                     V_ProgReloj@posicion:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x4C
  1084  00004D                     	ds	1
  1085  00004E                     V_ProgRiegoIlum@d_min_riego_tr:
  1086                           	opt stack 0
  1087                           
  1088                           ; 1 bytes @ 0x4D
  1089  00004E                     	ds	1
  1090  00004F                     V_ProgRiegoIlum@posicion:
  1091                           	opt stack 0
  1092                           
  1093                           ; 2 bytes @ 0x4E
  1094  00004F                     	ds	2
  1095  000051                     ??_main:
  1096                           
  1097                           ; 0 bytes @ 0x50
  1098  000051                     	ds	1
  1099                           tblptru	equ	0xFF8
  1100                           tblptrh	equ	0xFF7
  1101                           tblptrl	equ	0xFF6
  1102                           tablat	equ	0xFF5
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           postdec1	equ	0xFE5
  1106                           fsr1l	equ	0xFE1
  1107                           
  1108 ;;
  1109 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1110 ;;
  1111 ;; *************** function _main *****************
  1112 ;; Defined at:
  1113 ;;		line 143 in file "../main.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;		None               void
  1120 ;; Registers used:
  1121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1130 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1131 ;;Total ram usage:        1 bytes
  1132 ;; Hardware stack levels required when called:    4
  1133 ;; This function calls:
  1134 ;;		_Lcd_Cmd
  1135 ;;		_Lcd_Init
  1136 ;;		_Lcd_Out
  1137 ;;		_V_Principal
  1138 ;;		_V_ProgReloj
  1139 ;;		_V_ProgRiegoIlum
  1140 ;;		_Write_RTC
  1141 ;;		_control_leds_iluminacion
  1142 ;;		_control_leds_riego
  1143 ;;		_sprintf
  1144 ;; This function is called by:
  1145 ;;		Startup code after reset
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text0
  1150  00EB78                     __ptext0:
  1151                           	opt stack 0
  1152  00EB78                     _main:
  1153                           	opt stack 27
  1154                           
  1155                           ;main.c: 144: OSCTUNEbits.INTSRC = 1;
  1156                           
  1157                           ;incstack = 0
  1158  00EB78  8E9B               	bsf	3995,7,c	;volatile
  1159                           
  1160                           ;main.c: 145: OSCTUNEbits.PLLEN = 0;
  1161  00EB7A  9C9B               	bcf	3995,6,c	;volatile
  1162                           
  1163                           ;main.c: 146: OSCCONbits.IRCF0 = 1;
  1164  00EB7C  88D3               	bsf	4051,4,c	;volatile
  1165                           
  1166                           ;main.c: 147: OSCCONbits.IRCF1 = 1;
  1167  00EB7E  8AD3               	bsf	4051,5,c	;volatile
  1168                           
  1169                           ;main.c: 148: OSCCONbits.IRCF2 = 1;
  1170  00EB80  8CD3               	bsf	4051,6,c	;volatile
  1171                           
  1172                           ;main.c: 149: OSCCONbits.SCS0 = 0;
  1173  00EB82  90D3               	bcf	4051,0,c	;volatile
  1174                           
  1175                           ;main.c: 150: OSCCONbits.SCS1 = 0;
  1176  00EB84  92D3               	bcf	4051,1,c	;volatile
  1177                           
  1178                           ;main.c: 152: RTCCFGbits.RTCEN = 1;
  1179  00EB86  010F               	movlb	15	; () banked
  1180  00EB88  8F3F               	bsf	63,7,b	;volatile
  1181                           
  1182                           ;main.c: 153: RTCCFGbits.RTCWREN = 1;
  1183  00EB8A  010F               	movlb	15	; () banked
  1184  00EB8C  8B3F               	bsf	63,5,b	;volatile
  1185                           
  1186                           ;main.c: 154: T1CONbits.T1OSCEN = 1;
  1187  00EB8E  86CD               	bsf	4045,3,c	;volatile
  1188                           
  1189                           ; BSR set to: 15
  1190                           ;main.c: 156: TRISA = 0b11111101;
  1191  00EB90  0EFD               	movlw	253
  1192  00EB92  6E92               	movwf	3986,c	;volatile
  1193                           
  1194                           ;main.c: 157: TRISB = 0;
  1195  00EB94  0E00               	movlw	0
  1196  00EB96  6E93               	movwf	3987,c	;volatile
  1197                           
  1198                           ; BSR set to: 15
  1199                           ;main.c: 158: TRISC = 0b11111111;
  1200  00EB98  6894               	setf	3988,c	;volatile
  1201                           
  1202                           ; BSR set to: 15
  1203                           ;main.c: 159: ANCON0 = 0b11111111;
  1204  00EB9A  010F               	movlb	15	; () banked
  1205  00EB9C  6948               	setf	72,b	;volatile
  1206                           
  1207                           ;main.c: 160: ANCON1 = 0b11110111;
  1208  00EB9E  0EF7               	movlw	247
  1209  00EBA0  010F               	movlb	15	; () banked
  1210  00EBA2  6F49               	movwf	73,b	;volatile
  1211                           
  1212                           ;main.c: 161: ADCON0 = 0b00101111;
  1213  00EBA4  0E2F               	movlw	47
  1214  00EBA6  6EC2               	movwf	4034,c	;volatile
  1215                           
  1216                           ;main.c: 162: ADCON1 = 0b00111001;
  1217  00EBA8  0E39               	movlw	57
  1218  00EBAA  6EC1               	movwf	4033,c	;volatile
  1219                           
  1220                           ; BSR set to: 15
  1221                           ;main.c: 164: Write_RTC();
  1222  00EBAC  ECF1  F074         	call	_Write_RTC	;wreg free
  1223                           
  1224                           ;main.c: 165: Lcd_Init();
  1225  00EBB0  EC71  F071         	call	_Lcd_Init	;wreg free
  1226                           
  1227                           ;main.c: 166: Lcd_Cmd(1);
  1228  00EBB4  0E01               	movlw	1
  1229  00EBB6  EC8D  F072         	call	_Lcd_Cmd
  1230                           
  1231                           ;main.c: 167: Lcd_Cmd(12);
  1232  00EBBA  0E0C               	movlw	12
  1233  00EBBC  EC8D  F072         	call	_Lcd_Cmd
  1234                           
  1235                           ;main.c: 170: _delay((unsigned long)((98)*(8000000/4000.0)));
  1236  00EBC0  0EFF               	movlw	255
  1237  00EBC2  6E51               	movwf	??_main& (0+255),c
  1238  00EBC4  0E8A               	movlw	138
  1239  00EBC6                     u3857:
  1240  00EBC6  2EE8               	decfsz	wreg,f,c
  1241  00EBC8  D7FE               	goto	u3857
  1242  00EBCA  2E51               	decfsz	??_main& (0+255),f,c
  1243  00EBCC  D7FC               	goto	u3857
  1244  00EBCE  D000               	nop2	
  1245                           
  1246                           ;main.c: 171: _delay((unsigned long)((98)*(8000000/4000.0)));
  1247  00EBD0  0EFF               	movlw	255
  1248  00EBD2  6E51               	movwf	??_main& (0+255),c
  1249  00EBD4  0E8A               	movlw	138
  1250  00EBD6                     u3867:
  1251  00EBD6  2EE8               	decfsz	wreg,f,c
  1252  00EBD8  D7FE               	goto	u3867
  1253  00EBDA  2E51               	decfsz	??_main& (0+255),f,c
  1254  00EBDC  D7FC               	goto	u3867
  1255  00EBDE  D000               	nop2	
  1256                           
  1257                           ;main.c: 172: _delay((unsigned long)((98)*(8000000/4000.0)));
  1258  00EBE0  0EFF               	movlw	255
  1259  00EBE2  6E51               	movwf	??_main& (0+255),c
  1260  00EBE4  0E8A               	movlw	138
  1261  00EBE6                     u3877:
  1262  00EBE6  2EE8               	decfsz	wreg,f,c
  1263  00EBE8  D7FE               	goto	u3877
  1264  00EBEA  2E51               	decfsz	??_main& (0+255),f,c
  1265  00EBEC  D7FC               	goto	u3877
  1266  00EBEE  D000               	nop2	
  1267                           
  1268                           ;main.c: 173: _delay((unsigned long)((98)*(8000000/4000.0)));
  1269  00EBF0  0EFF               	movlw	255
  1270  00EBF2  6E51               	movwf	??_main& (0+255),c
  1271  00EBF4  0E8A               	movlw	138
  1272  00EBF6                     u3887:
  1273  00EBF6  2EE8               	decfsz	wreg,f,c
  1274  00EBF8  D7FE               	goto	u3887
  1275  00EBFA  2E51               	decfsz	??_main& (0+255),f,c
  1276  00EBFC  D7FC               	goto	u3887
  1277  00EBFE  D000               	nop2	
  1278                           
  1279                           ;main.c: 174: _delay((unsigned long)((98)*(8000000/4000.0)));
  1280  00EC00  0EFF               	movlw	255
  1281  00EC02  6E51               	movwf	??_main& (0+255),c
  1282  00EC04  0E8A               	movlw	138
  1283  00EC06                     u3897:
  1284  00EC06  2EE8               	decfsz	wreg,f,c
  1285  00EC08  D7FE               	goto	u3897
  1286  00EC0A  2E51               	decfsz	??_main& (0+255),f,c
  1287  00EC0C  D7FC               	goto	u3897
  1288  00EC0E  D000               	nop2	
  1289                           
  1290                           ;main.c: 175: _delay((unsigned long)((98)*(8000000/4000.0)));
  1291  00EC10  0EFF               	movlw	255
  1292  00EC12  6E51               	movwf	??_main& (0+255),c
  1293  00EC14  0E8A               	movlw	138
  1294  00EC16                     u3907:
  1295  00EC16  2EE8               	decfsz	wreg,f,c
  1296  00EC18  D7FE               	goto	u3907
  1297  00EC1A  2E51               	decfsz	??_main& (0+255),f,c
  1298  00EC1C  D7FC               	goto	u3907
  1299  00EC1E  D000               	nop2	
  1300                           
  1301                           ;main.c: 176: _delay((unsigned long)((98)*(8000000/4000.0)));
  1302  00EC20  0EFF               	movlw	255
  1303  00EC22  6E51               	movwf	??_main& (0+255),c
  1304  00EC24  0E8A               	movlw	138
  1305  00EC26                     u3917:
  1306  00EC26  2EE8               	decfsz	wreg,f,c
  1307  00EC28  D7FE               	goto	u3917
  1308  00EC2A  2E51               	decfsz	??_main& (0+255),f,c
  1309  00EC2C  D7FC               	goto	u3917
  1310  00EC2E  D000               	nop2	
  1311                           
  1312                           ;main.c: 177: _delay((unsigned long)((98)*(8000000/4000.0)));
  1313  00EC30  0EFF               	movlw	255
  1314  00EC32  6E51               	movwf	??_main& (0+255),c
  1315  00EC34  0E8A               	movlw	138
  1316  00EC36                     u3927:
  1317  00EC36  2EE8               	decfsz	wreg,f,c
  1318  00EC38  D7FE               	goto	u3927
  1319  00EC3A  2E51               	decfsz	??_main& (0+255),f,c
  1320  00EC3C  D7FC               	goto	u3927
  1321  00EC3E  D000               	nop2	
  1322                           
  1323                           ;main.c: 178: Lcd_Cmd(1);
  1324  00EC40  0E01               	movlw	1
  1325  00EC42  EC8D  F072         	call	_Lcd_Cmd
  1326  00EC46  D000               	goto	l3685
  1327  00EC48                     l3685:
  1328                           
  1329                           ;main.c: 185: V_Principal();
  1330  00EC48  EC8C  F070         	call	_V_Principal	;wreg free
  1331                           
  1332                           ;main.c: 186: control_leds_iluminacion();
  1333  00EC4C  ECB7  F06E         	call	_control_leds_iluminacion	;wreg free
  1334                           
  1335                           ;main.c: 187: control_leds_riego();
  1336  00EC50  EC78  F06F         	call	_control_leds_riego	;wreg free
  1337                           
  1338                           ;main.c: 188: if (Sw_Left = PORTAbits.RA0 == 0) {
  1339  00EC54  B080               	btfsc	3968,0,c	;volatile
  1340  00EC56  D002               	goto	u3700
  1341  00EC58  0E01               	movlw	1
  1342  00EC5A  D001               	goto	u3710
  1343  00EC5C                     u3700:
  1344  00EC5C  0E00               	movlw	0
  1345  00EC5E                     u3710:
  1346  00EC5E  0100               	movlb	0	; () banked
  1347  00EC60  6F87               	movwf	_Sw_Left& (0+255),b
  1348  00EC62  0100               	movlb	0	; () banked
  1349  00EC64  5187               	movf	_Sw_Left& (0+255),w,b
  1350  00EC66  B4D8               	btfsc	status,2,c
  1351  00EC68  D003               	goto	l3695
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;main.c: 190: V_ProgReloj();
  1355  00EC6A  EC34  F078         	call	_V_ProgReloj	;wreg free
  1356  00EC6E  D000               	goto	l3695
  1357  00EC70                     l3695:
  1358                           
  1359                           ;main.c: 191: }
  1360                           ;main.c: 193: if (Sw_Down = PORTCbits.RC4 == 0) {
  1361  00EC70  B882               	btfsc	3970,4,c	;volatile
  1362  00EC72  D002               	goto	u3730
  1363  00EC74  0E01               	movlw	1
  1364  00EC76  D001               	goto	u3740
  1365  00EC78                     u3730:
  1366  00EC78  0E00               	movlw	0
  1367  00EC7A                     u3740:
  1368  00EC7A  0100               	movlb	0	; () banked
  1369  00EC7C  6F86               	movwf	_Sw_Down& (0+255),b
  1370  00EC7E  0100               	movlb	0	; () banked
  1371  00EC80  5186               	movf	_Sw_Down& (0+255),w,b
  1372  00EC82  B4D8               	btfsc	status,2,c
  1373  00EC84  D017               	goto	l3701
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;main.c: 194: sprintf(buffer1, "%03u", lectura);
  1377  00EC86  0E8B               	movlw	low _buffer1
  1378  00EC88  6E0D               	movwf	sprintf@sp,c
  1379  00EC8A  0E00               	movlw	high _buffer1
  1380  00EC8C  6E0E               	movwf	sprintf@sp+1,c
  1381  00EC8E  0EEE               	movlw	low STR_1
  1382  00EC90  6E0F               	movwf	sprintf@f,c
  1383  00EC92  0EFF               	movlw	high STR_1
  1384  00EC94  6E10               	movwf	sprintf@f+1,c
  1385  00EC96  C08A  F011         	movff	_lectura,?_sprintf+4
  1386  00EC9A  6A12               	clrf	?_sprintf+5,c
  1387  00EC9C  EC97  F076         	call	_sprintf	;wreg free
  1388                           
  1389                           ;main.c: 195: Lcd_Out(4, 0, buffer1);
  1390  00ECA0  0E00               	movlw	0
  1391  00ECA2  6E40               	movwf	Lcd_Out@x,c
  1392  00ECA4  0E8B               	movlw	low _buffer1
  1393  00ECA6  6E41               	movwf	Lcd_Out@buffer,c
  1394  00ECA8  0E00               	movlw	high _buffer1
  1395  00ECAA  6E42               	movwf	Lcd_Out@buffer+1,c
  1396  00ECAC  0E04               	movlw	4
  1397  00ECAE  ECF7  F06F         	call	_Lcd_Out
  1398  00ECB2  D000               	goto	l3701
  1399  00ECB4                     l3701:
  1400                           
  1401                           ;main.c: 196: }
  1402                           ;main.c: 198: if (Sw_Right = PORTAbits.RA2 == 0) {
  1403  00ECB4  B480               	btfsc	3968,2,c	;volatile
  1404  00ECB6  D002               	goto	u3760
  1405  00ECB8  0E01               	movlw	1
  1406  00ECBA  D001               	goto	u3770
  1407  00ECBC                     u3760:
  1408  00ECBC  0E00               	movlw	0
  1409  00ECBE                     u3770:
  1410  00ECBE  0100               	movlb	0	; () banked
  1411  00ECC0  6F88               	movwf	_Sw_Right& (0+255),b
  1412  00ECC2  0100               	movlb	0	; () banked
  1413  00ECC4  5188               	movf	_Sw_Right& (0+255),w,b
  1414  00ECC6  B4D8               	btfsc	status,2,c
  1415  00ECC8  D00A               	goto	l3705
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;main.c: 199: Lcd_Out(3, 0, "RIGHT             ");
  1419  00ECCA  0E00               	movlw	0
  1420  00ECCC  6E40               	movwf	Lcd_Out@x,c
  1421  00ECCE  0E93               	movlw	low STR_2
  1422  00ECD0  6E41               	movwf	Lcd_Out@buffer,c
  1423  00ECD2  0EFF               	movlw	high STR_2
  1424  00ECD4  6E42               	movwf	Lcd_Out@buffer+1,c
  1425  00ECD6  0E03               	movlw	3
  1426  00ECD8  ECF7  F06F         	call	_Lcd_Out
  1427  00ECDC  D000               	goto	l3705
  1428  00ECDE                     l3705:
  1429                           
  1430                           ;main.c: 200: }
  1431                           ;main.c: 202: if (Sw_Up = PORTAbits.RA3 == 0) {
  1432  00ECDE  B680               	btfsc	3968,3,c	;volatile
  1433  00ECE0  D002               	goto	u3790
  1434  00ECE2  0E01               	movlw	1
  1435  00ECE4  D001               	goto	u3800
  1436  00ECE6                     u3790:
  1437  00ECE6  0E00               	movlw	0
  1438  00ECE8                     u3800:
  1439  00ECE8  0100               	movlb	0	; () banked
  1440  00ECEA  6F89               	movwf	_Sw_Up& (0+255),b
  1441  00ECEC  0100               	movlb	0	; () banked
  1442  00ECEE  5189               	movf	_Sw_Up& (0+255),w,b
  1443  00ECF0  B4D8               	btfsc	status,2,c
  1444  00ECF2  D003               	goto	l3709
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;main.c: 203: V_ProgRiegoIlum();
  1448  00ECF4  EC2D  F07B         	call	_V_ProgRiegoIlum	;wreg free
  1449  00ECF8  D000               	goto	l3709
  1450  00ECFA                     l3709:
  1451                           
  1452                           ;main.c: 204: }
  1453                           ;main.c: 206: if (Sw_Center = PORTAbits.RA5 == 0) {
  1454  00ECFA  BA80               	btfsc	3968,5,c	;volatile
  1455  00ECFC  D002               	goto	u3820
  1456  00ECFE  0E01               	movlw	1
  1457  00ED00  D001               	goto	u3830
  1458  00ED02                     u3820:
  1459  00ED02  0E00               	movlw	0
  1460  00ED04                     u3830:
  1461  00ED04  0100               	movlb	0	; () banked
  1462  00ED06  6F85               	movwf	_Sw_Center& (0+255),b
  1463  00ED08  0100               	movlb	0	; () banked
  1464  00ED0A  5185               	movf	_Sw_Center& (0+255),w,b
  1465  00ED0C  B4D8               	btfsc	status,2,c
  1466  00ED0E  D79C               	goto	l3685
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;main.c: 207: Lcd_Cmd(1);
  1470  00ED10  0E01               	movlw	1
  1471  00ED12  EC8D  F072         	call	_Lcd_Cmd
  1472                           
  1473                           ;main.c: 208: Lcd_Out(2, 0, "CENTER             ");
  1474  00ED16  0E00               	movlw	0
  1475  00ED18  6E40               	movwf	Lcd_Out@x,c
  1476  00ED1A  0E7F               	movlw	low STR_3
  1477  00ED1C  6E41               	movwf	Lcd_Out@buffer,c
  1478  00ED1E  0EFF               	movlw	high STR_3
  1479  00ED20  6E42               	movwf	Lcd_Out@buffer+1,c
  1480  00ED22  0E02               	movlw	2
  1481  00ED24  ECF7  F06F         	call	_Lcd_Out
  1482  00ED28  D78F               	goto	l3685
  1483  00ED2A  EF00  F000         	goto	start
  1484  00ED2E                     __end_of_main:
  1485                           	opt stack 0
  1486                           tblptru	equ	0xFF8
  1487                           tblptrh	equ	0xFF7
  1488                           tblptrl	equ	0xFF6
  1489                           tablat	equ	0xFF5
  1490                           postinc0	equ	0xFEE
  1491                           wreg	equ	0xFE8
  1492                           postdec1	equ	0xFE5
  1493                           fsr1l	equ	0xFE1
  1494                           status	equ	0xFD8
  1495                           
  1496 ;; *************** function _control_leds_riego *****************
  1497 ;; Defined at:
  1498 ;;		line 705 in file "../main.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;		None               void
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1516 ;;Total ram usage:        2 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text1
  1526  00DEF0                     __ptext1:
  1527                           	opt stack 0
  1528  00DEF0                     _control_leds_riego:
  1529                           	opt stack 30
  1530                           
  1531                           ;main.c: 707: if(inicio_hora_riego == hora && inicio_min_riego == minuto){
  1532                           
  1533                           ;incstack = 0
  1534  00DEF0  5059               	movf	_inicio_hora_riego,w,c
  1535  00DEF2  6E01               	movwf	??_control_leds_riego& (0+255),c
  1536  00DEF4  6A02               	clrf	(??_control_leds_riego+1)& (0+255),c
  1537  00DEF6  5054               	movf	_hora,w,c
  1538  00DEF8  1801               	xorwf	??_control_leds_riego,w,c
  1539  00DEFA  E11B               	bnz	l3139
  1540  00DEFC  5055               	movf	_hora+1,w,c
  1541  00DEFE  1802               	xorwf	??_control_leds_riego+1,w,c
  1542  00DF00  A4D8               	btfss	status,2,c
  1543  00DF02  D017               	goto	l3139
  1544  00DF04  505B               	movf	_inicio_min_riego,w,c
  1545  00DF06  6E01               	movwf	??_control_leds_riego& (0+255),c
  1546  00DF08  6A02               	clrf	(??_control_leds_riego+1)& (0+255),c
  1547  00DF0A  5056               	movf	_minuto,w,c
  1548  00DF0C  1801               	xorwf	??_control_leds_riego,w,c
  1549  00DF0E  E111               	bnz	l3139
  1550  00DF10  5057               	movf	_minuto+1,w,c
  1551  00DF12  1802               	xorwf	??_control_leds_riego+1,w,c
  1552  00DF14  A4D8               	btfss	status,2,c
  1553  00DF16  D00D               	goto	l3139
  1554                           
  1555                           ;main.c: 708: if(Humedad = PORTCbits.RC7 == 0){
  1556  00DF18  BE82               	btfsc	3970,7,c	;volatile
  1557  00DF1A  D002               	goto	u2700
  1558  00DF1C  0E01               	movlw	1
  1559  00DF1E  D001               	goto	u2710
  1560  00DF20                     u2700:
  1561  00DF20  0E00               	movlw	0
  1562  00DF22                     u2710:
  1563  00DF22  0100               	movlb	0	; () banked
  1564  00DF24  6F84               	movwf	_Humedad& (0+255),b
  1565  00DF26  0100               	movlb	0	; () banked
  1566  00DF28  5184               	movf	_Humedad& (0+255),w,b
  1567  00DF2A  B4D8               	btfsc	status,2,c
  1568  00DF2C  D002               	goto	l3139
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;main.c: 709: LATBbits.LATB6 = 1;
  1572  00DF2E  8C8A               	bsf	3978,6,c	;volatile
  1573                           
  1574                           ; BSR set to: 0
  1575  00DF30  D000               	goto	l3139
  1576  00DF32                     l3139:
  1577                           
  1578                           ;main.c: 710: }
  1579                           ;main.c: 712: }
  1580                           ;main.c: 714: if(fin_hora_riego == hora && fin_min_riego == minuto){
  1581  00DF32  505D               	movf	_fin_hora_riego,w,c
  1582  00DF34  6E01               	movwf	??_control_leds_riego& (0+255),c
  1583  00DF36  6A02               	clrf	(??_control_leds_riego+1)& (0+255),c
  1584  00DF38  5054               	movf	_hora,w,c
  1585  00DF3A  1801               	xorwf	??_control_leds_riego,w,c
  1586  00DF3C  E110               	bnz	l360
  1587  00DF3E  5055               	movf	_hora+1,w,c
  1588  00DF40  1802               	xorwf	??_control_leds_riego+1,w,c
  1589  00DF42  A4D8               	btfss	status,2,c
  1590  00DF44  0012               	return	
  1591  00DF46  505F               	movf	_fin_min_riego,w,c
  1592  00DF48  6E01               	movwf	??_control_leds_riego& (0+255),c
  1593  00DF4A  6A02               	clrf	(??_control_leds_riego+1)& (0+255),c
  1594  00DF4C  5056               	movf	_minuto,w,c
  1595  00DF4E  1801               	xorwf	??_control_leds_riego,w,c
  1596  00DF50  E106               	bnz	l360
  1597  00DF52  5057               	movf	_minuto+1,w,c
  1598  00DF54  1802               	xorwf	??_control_leds_riego+1,w,c
  1599  00DF56  A4D8               	btfss	status,2,c
  1600  00DF58  0012               	return	
  1601                           
  1602                           ;main.c: 715: LATBbits.LATB6 = 0;
  1603  00DF5A  9C8A               	bcf	3978,6,c	;volatile
  1604  00DF5C  0012               	return	
  1605  00DF5E                     l360:
  1606  00DF5E  0012               	return		;funcret
  1607  00DF60                     __end_of_control_leds_riego:
  1608                           	opt stack 0
  1609                           tblptru	equ	0xFF8
  1610                           tblptrh	equ	0xFF7
  1611                           tblptrl	equ	0xFF6
  1612                           tablat	equ	0xFF5
  1613                           postinc0	equ	0xFEE
  1614                           wreg	equ	0xFE8
  1615                           postdec1	equ	0xFE5
  1616                           fsr1l	equ	0xFE1
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _control_leds_iluminacion *****************
  1620 ;; Defined at:
  1621 ;;		line 694 in file "../main.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;		None               void
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1637 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1639 ;;Total ram usage:        2 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text2
  1649  00DD6E                     __ptext2:
  1650                           	opt stack 0
  1651  00DD6E                     _control_leds_iluminacion:
  1652                           	opt stack 30
  1653                           
  1654                           ;main.c: 696: if(inicio_hora_ilum == hora && inicio_min_ilum == minuto){
  1655                           
  1656                           ;incstack = 0
  1657  00DD6E  5058               	movf	_inicio_hora_ilum,w,c
  1658  00DD70  6E01               	movwf	??_control_leds_iluminacion& (0+255),c
  1659  00DD72  6A02               	clrf	(??_control_leds_iluminacion+1)& (0+255),c
  1660  00DD74  5054               	movf	_hora,w,c
  1661  00DD76  1801               	xorwf	??_control_leds_iluminacion,w,c
  1662  00DD78  E110               	bnz	l3125
  1663  00DD7A  5055               	movf	_hora+1,w,c
  1664  00DD7C  1802               	xorwf	??_control_leds_iluminacion+1,w,c
  1665  00DD7E  A4D8               	btfss	status,2,c
  1666  00DD80  D00C               	goto	l3125
  1667  00DD82  505A               	movf	_inicio_min_ilum,w,c
  1668  00DD84  6E01               	movwf	??_control_leds_iluminacion& (0+255),c
  1669  00DD86  6A02               	clrf	(??_control_leds_iluminacion+1)& (0+255),c
  1670  00DD88  5056               	movf	_minuto,w,c
  1671  00DD8A  1801               	xorwf	??_control_leds_iluminacion,w,c
  1672  00DD8C  E106               	bnz	l3125
  1673  00DD8E  5057               	movf	_minuto+1,w,c
  1674  00DD90  1802               	xorwf	??_control_leds_iluminacion+1,w,c
  1675  00DD92  A4D8               	btfss	status,2,c
  1676  00DD94  D002               	goto	l3125
  1677                           
  1678                           ;main.c: 697: LATBbits.LATB7 = 1;
  1679  00DD96  8E8A               	bsf	3978,7,c	;volatile
  1680  00DD98  D000               	goto	l3125
  1681  00DD9A                     l3125:
  1682                           
  1683                           ;main.c: 698: }
  1684                           ;main.c: 700: if(fin_hora_ilum == hora && fin_min_ilum == minuto){
  1685  00DD9A  505C               	movf	_fin_hora_ilum,w,c
  1686  00DD9C  6E01               	movwf	??_control_leds_iluminacion& (0+255),c
  1687  00DD9E  6A02               	clrf	(??_control_leds_iluminacion+1)& (0+255),c
  1688  00DDA0  5054               	movf	_hora,w,c
  1689  00DDA2  1801               	xorwf	??_control_leds_iluminacion,w,c
  1690  00DDA4  E110               	bnz	l354
  1691  00DDA6  5055               	movf	_hora+1,w,c
  1692  00DDA8  1802               	xorwf	??_control_leds_iluminacion+1,w,c
  1693  00DDAA  A4D8               	btfss	status,2,c
  1694  00DDAC  0012               	return	
  1695  00DDAE  505E               	movf	_fin_min_ilum,w,c
  1696  00DDB0  6E01               	movwf	??_control_leds_iluminacion& (0+255),c
  1697  00DDB2  6A02               	clrf	(??_control_leds_iluminacion+1)& (0+255),c
  1698  00DDB4  5056               	movf	_minuto,w,c
  1699  00DDB6  1801               	xorwf	??_control_leds_iluminacion,w,c
  1700  00DDB8  E106               	bnz	l354
  1701  00DDBA  5057               	movf	_minuto+1,w,c
  1702  00DDBC  1802               	xorwf	??_control_leds_iluminacion+1,w,c
  1703  00DDBE  A4D8               	btfss	status,2,c
  1704  00DDC0  0012               	return	
  1705                           
  1706                           ;main.c: 701: LATBbits.LATB7 = 0;
  1707  00DDC2  9E8A               	bcf	3978,7,c	;volatile
  1708  00DDC4  0012               	return	
  1709  00DDC6                     l354:
  1710  00DDC6  0012               	return		;funcret
  1711  00DDC8                     __end_of_control_leds_iluminacion:
  1712                           	opt stack 0
  1713                           tblptru	equ	0xFF8
  1714                           tblptrh	equ	0xFF7
  1715                           tblptrl	equ	0xFF6
  1716                           tablat	equ	0xFF5
  1717                           postinc0	equ	0xFEE
  1718                           wreg	equ	0xFE8
  1719                           postdec1	equ	0xFE5
  1720                           fsr1l	equ	0xFE1
  1721                           status	equ	0xFD8
  1722                           
  1723 ;; *************** function _V_ProgRiegoIlum *****************
  1724 ;; Defined at:
  1725 ;;		line 381 in file "../main.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  posicion        2   78[COMRAM] int 
  1730 ;;  d_min_riego_    1   77[COMRAM] unsigned char 
  1731 ;;  d_hora_riego    1   76[COMRAM] unsigned char 
  1732 ;;  i_min_riego_    1   75[COMRAM] unsigned char 
  1733 ;;  i_hora_riego    1   74[COMRAM] unsigned char 
  1734 ;;  d_min_ilum_t    1   73[COMRAM] unsigned char 
  1735 ;;  d_hora_ilum_    1   72[COMRAM] unsigned char 
  1736 ;;  i_min_ilum_t    1   71[COMRAM] unsigned char 
  1737 ;;  i_hora_ilum_    1   70[COMRAM] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;		None               void
  1740 ;; Registers used:
  1741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1748 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1749 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1750 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1751 ;;Total ram usage:       12 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    3
  1754 ;; This function calls:
  1755 ;;		_Lcd_Cmd
  1756 ;;		_Lcd_Out
  1757 ;;		_Write_RTC
  1758 ;;		_sprintf
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text3
  1765  00F65A                     __ptext3:
  1766                           	opt stack 0
  1767  00F65A                     _V_ProgRiegoIlum:
  1768                           	opt stack 27
  1769                           
  1770                           ;main.c: 383: Lcd_Out(1, 0, "Riego");
  1771                           
  1772                           ;incstack = 0
  1773  00F65A  0E00               	movlw	0
  1774  00F65C  6E40               	movwf	Lcd_Out@x,c
  1775  00F65E  0EE8               	movlw	low STR_33
  1776  00F660  6E41               	movwf	Lcd_Out@buffer,c
  1777  00F662  0EFF               	movlw	high STR_33
  1778  00F664  6E42               	movwf	Lcd_Out@buffer+1,c
  1779  00F666  0E01               	movlw	1
  1780  00F668  ECF7  F06F         	call	_Lcd_Out
  1781                           
  1782                           ;main.c: 384: sprintf(buffer1, "Inic %02u:%02u", inicio_hora_riego, inicio_min_riego);
  1783  00F66C  0E8B               	movlw	low _buffer1
  1784  00F66E  6E0D               	movwf	sprintf@sp,c
  1785  00F670  0E00               	movlw	high _buffer1
  1786  00F672  6E0E               	movwf	sprintf@sp+1,c
  1787  00F674  0EB8               	movlw	low STR_34
  1788  00F676  6E0F               	movwf	sprintf@f,c
  1789  00F678  0EFF               	movlw	high STR_34
  1790  00F67A  6E10               	movwf	sprintf@f+1,c
  1791  00F67C  C059  F011         	movff	_inicio_hora_riego,?_sprintf+4
  1792  00F680  6A12               	clrf	?_sprintf+5,c
  1793  00F682  C05B  F013         	movff	_inicio_min_riego,?_sprintf+6
  1794  00F686  6A14               	clrf	?_sprintf+7,c
  1795  00F688  EC97  F076         	call	_sprintf	;wreg free
  1796                           
  1797                           ;main.c: 385: Lcd_Out(2, 0, buffer1);
  1798  00F68C  0E00               	movlw	0
  1799  00F68E  6E40               	movwf	Lcd_Out@x,c
  1800  00F690  0E8B               	movlw	low _buffer1
  1801  00F692  6E41               	movwf	Lcd_Out@buffer,c
  1802  00F694  0E00               	movlw	high _buffer1
  1803  00F696  6E42               	movwf	Lcd_Out@buffer+1,c
  1804  00F698  0E02               	movlw	2
  1805  00F69A  ECF7  F06F         	call	_Lcd_Out
  1806                           
  1807                           ;main.c: 386: sprintf(buffer1, "Fin %02u:%02u", fin_hora_riego, fin_min_riego);
  1808  00F69E  0E8B               	movlw	low _buffer1
  1809  00F6A0  6E0D               	movwf	sprintf@sp,c
  1810  00F6A2  0E00               	movlw	high _buffer1
  1811  00F6A4  6E0E               	movwf	sprintf@sp+1,c
  1812  00F6A6  0EC7               	movlw	low STR_35
  1813  00F6A8  6E0F               	movwf	sprintf@f,c
  1814  00F6AA  0EFF               	movlw	high STR_35
  1815  00F6AC  6E10               	movwf	sprintf@f+1,c
  1816  00F6AE  C05D  F011         	movff	_fin_hora_riego,?_sprintf+4
  1817  00F6B2  6A12               	clrf	?_sprintf+5,c
  1818  00F6B4  C05F  F013         	movff	_fin_min_riego,?_sprintf+6
  1819  00F6B8  6A14               	clrf	?_sprintf+7,c
  1820  00F6BA  EC97  F076         	call	_sprintf	;wreg free
  1821                           
  1822                           ;main.c: 387: Lcd_Out(2, 11, buffer1);
  1823  00F6BE  0E0B               	movlw	11
  1824  00F6C0  6E40               	movwf	Lcd_Out@x,c
  1825  00F6C2  0E8B               	movlw	low _buffer1
  1826  00F6C4  6E41               	movwf	Lcd_Out@buffer,c
  1827  00F6C6  0E00               	movlw	high _buffer1
  1828  00F6C8  6E42               	movwf	Lcd_Out@buffer+1,c
  1829  00F6CA  0E02               	movlw	2
  1830  00F6CC  ECF7  F06F         	call	_Lcd_Out
  1831                           
  1832                           ;main.c: 388: Lcd_Out(3, 0, "Iluminacion");
  1833  00F6D0  0E00               	movlw	0
  1834  00F6D2  6E40               	movwf	Lcd_Out@x,c
  1835  00F6D4  0ED5               	movlw	low STR_36
  1836  00F6D6  6E41               	movwf	Lcd_Out@buffer,c
  1837  00F6D8  0EFF               	movlw	high STR_36
  1838  00F6DA  6E42               	movwf	Lcd_Out@buffer+1,c
  1839  00F6DC  0E03               	movlw	3
  1840  00F6DE  ECF7  F06F         	call	_Lcd_Out
  1841                           
  1842                           ;main.c: 389: sprintf(buffer1, "Inic %02u:%02u", inicio_hora_ilum, inicio_min_ilum);
  1843  00F6E2  0E8B               	movlw	low _buffer1
  1844  00F6E4  6E0D               	movwf	sprintf@sp,c
  1845  00F6E6  0E00               	movlw	high _buffer1
  1846  00F6E8  6E0E               	movwf	sprintf@sp+1,c
  1847  00F6EA  0EB8               	movlw	low STR_34
  1848  00F6EC  6E0F               	movwf	sprintf@f,c
  1849  00F6EE  0EFF               	movlw	high STR_34
  1850  00F6F0  6E10               	movwf	sprintf@f+1,c
  1851  00F6F2  C058  F011         	movff	_inicio_hora_ilum,?_sprintf+4
  1852  00F6F6  6A12               	clrf	?_sprintf+5,c
  1853  00F6F8  C05A  F013         	movff	_inicio_min_ilum,?_sprintf+6
  1854  00F6FC  6A14               	clrf	?_sprintf+7,c
  1855  00F6FE  EC97  F076         	call	_sprintf	;wreg free
  1856                           
  1857                           ;main.c: 390: Lcd_Out(4, 0, buffer1);
  1858  00F702  0E00               	movlw	0
  1859  00F704  6E40               	movwf	Lcd_Out@x,c
  1860  00F706  0E8B               	movlw	low _buffer1
  1861  00F708  6E41               	movwf	Lcd_Out@buffer,c
  1862  00F70A  0E00               	movlw	high _buffer1
  1863  00F70C  6E42               	movwf	Lcd_Out@buffer+1,c
  1864  00F70E  0E04               	movlw	4
  1865  00F710  ECF7  F06F         	call	_Lcd_Out
  1866                           
  1867                           ;main.c: 391: sprintf(buffer1, "Fin %02u:%02u", fin_hora_ilum, fin_min_ilum);
  1868  00F714  0E8B               	movlw	low _buffer1
  1869  00F716  6E0D               	movwf	sprintf@sp,c
  1870  00F718  0E00               	movlw	high _buffer1
  1871  00F71A  6E0E               	movwf	sprintf@sp+1,c
  1872  00F71C  0EC7               	movlw	low STR_35
  1873  00F71E  6E0F               	movwf	sprintf@f,c
  1874  00F720  0EFF               	movlw	high STR_35
  1875  00F722  6E10               	movwf	sprintf@f+1,c
  1876  00F724  C05C  F011         	movff	_fin_hora_ilum,?_sprintf+4
  1877  00F728  6A12               	clrf	?_sprintf+5,c
  1878  00F72A  C05E  F013         	movff	_fin_min_ilum,?_sprintf+6
  1879  00F72E  6A14               	clrf	?_sprintf+7,c
  1880  00F730  EC97  F076         	call	_sprintf	;wreg free
  1881                           
  1882                           ;main.c: 392: Lcd_Out(4, 11, buffer1);
  1883  00F734  0E0B               	movlw	11
  1884  00F736  6E40               	movwf	Lcd_Out@x,c
  1885  00F738  0E8B               	movlw	low _buffer1
  1886  00F73A  6E41               	movwf	Lcd_Out@buffer,c
  1887  00F73C  0E00               	movlw	high _buffer1
  1888  00F73E  6E42               	movwf	Lcd_Out@buffer+1,c
  1889  00F740  0E04               	movlw	4
  1890  00F742  ECF7  F06F         	call	_Lcd_Out
  1891                           
  1892                           ;main.c: 394: char i_hora_ilum_tr = inicio_hora_ilum;
  1893  00F746  C058  F047         	movff	_inicio_hora_ilum,V_ProgRiegoIlum@i_hora_ilum_tr
  1894                           
  1895                           ;main.c: 395: char i_min_ilum_tr = inicio_min_ilum;
  1896  00F74A  C05A  F048         	movff	_inicio_min_ilum,V_ProgRiegoIlum@i_min_ilum_tr
  1897                           
  1898                           ;main.c: 396: char d_hora_ilum_tr = fin_hora_ilum;
  1899  00F74E  C05C  F049         	movff	_fin_hora_ilum,V_ProgRiegoIlum@d_hora_ilum_tr
  1900                           
  1901                           ;main.c: 397: char d_min_ilum_tr = fin_min_ilum;
  1902  00F752  C05E  F04A         	movff	_fin_min_ilum,V_ProgRiegoIlum@d_min_ilum_tr
  1903                           
  1904                           ;main.c: 398: char i_hora_riego_tr = inicio_hora_riego;
  1905  00F756  C059  F04B         	movff	_inicio_hora_riego,V_ProgRiegoIlum@i_hora_riego_tr
  1906                           
  1907                           ;main.c: 399: char i_min_riego_tr = inicio_min_riego;
  1908  00F75A  C05B  F04C         	movff	_inicio_min_riego,V_ProgRiegoIlum@i_min_riego_tr
  1909                           
  1910                           ;main.c: 400: char d_hora_riego_tr = fin_hora_riego;
  1911  00F75E  C05D  F04D         	movff	_fin_hora_riego,V_ProgRiegoIlum@d_hora_riego_tr
  1912                           
  1913                           ;main.c: 401: char d_min_riego_tr = fin_min_riego;
  1914  00F762  C05F  F04E         	movff	_fin_min_riego,V_ProgRiegoIlum@d_min_riego_tr
  1915                           
  1916                           ;main.c: 402: int posicion = 0;
  1917  00F766  0E00               	movlw	0
  1918  00F768  6E50               	movwf	V_ProgRiegoIlum@posicion+1,c
  1919  00F76A  0E00               	movlw	0
  1920  00F76C  6E4F               	movwf	V_ProgRiegoIlum@posicion,c
  1921                           
  1922                           ;main.c: 403: Lcd_Cmd(14);
  1923  00F76E  0E0E               	movlw	14
  1924  00F770  EC8D  F072         	call	_Lcd_Cmd
  1925                           
  1926                           ;main.c: 404: Lcd_Out(2, 5, "");
  1927  00F774  0E05               	movlw	5
  1928  00F776  6E40               	movwf	Lcd_Out@x,c
  1929  00F778  0EEB               	movlw	low (STR_4+20)
  1930  00F77A  6E41               	movwf	Lcd_Out@buffer,c
  1931  00F77C  0EFE               	movlw	high (STR_4+20)
  1932  00F77E  6E42               	movwf	Lcd_Out@buffer+1,c
  1933  00F780  0E02               	movlw	2
  1934  00F782  ECF7  F06F         	call	_Lcd_Out
  1935                           
  1936                           ;main.c: 406: for (i = 0; i < 30; i++) {
  1937  00F786  0E00               	movlw	0
  1938  00F788  0100               	movlb	0	; () banked
  1939  00F78A  6F7F               	movwf	(_i+1)& (0+255),b
  1940  00F78C  0E00               	movlw	0
  1941  00F78E  6F7E               	movwf	_i& (0+255),b
  1942                           
  1943                           ; BSR set to: 0
  1944  00F790  0100               	movlb	0	; () banked
  1945  00F792  BF7F               	btfsc	(_i+1)& (0+255),7,b
  1946  00F794  D00A               	goto	l3395
  1947  00F796  0100               	movlb	0	; () banked
  1948  00F798  517F               	movf	(_i+1)& (0+255),w,b
  1949  00F79A  E106               	bnz	u3180
  1950  00F79C  0E1E               	movlw	30
  1951  00F79E  0100               	movlb	0	; () banked
  1952  00F7A0  5D7E               	subwf	_i& (0+255),w,b
  1953  00F7A2  B0D8               	btfsc	status,0,c
  1954  00F7A4  D373               	goto	l3627
  1955  00F7A6  D001               	goto	l3395
  1956  00F7A8                     u3180:
  1957                           
  1958                           ; BSR set to: 0
  1959  00F7A8  D371               	goto	l3627
  1960  00F7AA                     l3395:
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;main.c: 407: _delay((unsigned long)((90)*(8000000/4000.0)));
  1964  00F7AA  0EEA               	movlw	234
  1965  00F7AC  6E45               	movwf	??_V_ProgRiegoIlum& (0+255),c
  1966  00F7AE  0EC3               	movlw	195
  1967  00F7B0                     u3937:
  1968  00F7B0  2EE8               	decfsz	wreg,f,c
  1969  00F7B2  D7FE               	goto	u3937
  1970  00F7B4  2E45               	decfsz	??_V_ProgRiegoIlum& (0+255),f,c
  1971  00F7B6  D7FC               	goto	u3937
  1972  00F7B8  F000               	nop	
  1973                           
  1974                           ;main.c: 409: if (Sw_Up = PORTAbits.RA3 == 0) {
  1975  00F7BA  B680               	btfsc	3968,3,c	;volatile
  1976  00F7BC  D002               	goto	u3190
  1977  00F7BE  0E01               	movlw	1
  1978  00F7C0  D001               	goto	u3200
  1979  00F7C2                     u3190:
  1980  00F7C2  0E00               	movlw	0
  1981  00F7C4                     u3200:
  1982  00F7C4  0100               	movlb	0	; () banked
  1983  00F7C6  6F89               	movwf	_Sw_Up& (0+255),b
  1984  00F7C8  0100               	movlb	0	; () banked
  1985  00F7CA  5189               	movf	_Sw_Up& (0+255),w,b
  1986  00F7CC  B4D8               	btfsc	status,2,c
  1987  00F7CE  D154               	goto	l3497
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;main.c: 410: i = 0;
  1991  00F7D0  0E00               	movlw	0
  1992  00F7D2  0100               	movlb	0	; () banked
  1993  00F7D4  6F7F               	movwf	(_i+1)& (0+255),b
  1994  00F7D6  0E00               	movlw	0
  1995  00F7D8  6F7E               	movwf	_i& (0+255),b
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;main.c: 411: if (posicion == 0) {
  1999  00F7DA  504F               	movf	V_ProgRiegoIlum@posicion,w,c
  2000  00F7DC  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2001  00F7DE  A4D8               	btfss	status,2,c
  2002  00F7E0  D025               	goto	l3413
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;main.c: 412: if (i_hora_riego_tr < 23) {
  2006  00F7E2  0E17               	movlw	23
  2007  00F7E4  604B               	cpfslt	V_ProgRiegoIlum@i_hora_riego_tr,c
  2008  00F7E6  D002               	goto	l3407
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;main.c: 413: i_hora_riego_tr++;
  2012  00F7E8  2A4B               	incf	V_ProgRiegoIlum@i_hora_riego_tr,f,c
  2013  00F7EA  D000               	goto	l3407
  2014  00F7EC                     l3407:
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;main.c: 414: }
  2018                           ;main.c: 415: sprintf(buffer1, "%02u", i_hora_riego_tr);
  2019  00F7EC  0E8B               	movlw	low _buffer1
  2020  00F7EE  6E0D               	movwf	sprintf@sp,c
  2021  00F7F0  0E00               	movlw	high _buffer1
  2022  00F7F2  6E0E               	movwf	sprintf@sp+1,c
  2023  00F7F4  0EC2               	movlw	low (STR_34+10)
  2024  00F7F6  6E0F               	movwf	sprintf@f,c
  2025  00F7F8  0EFF               	movlw	high (STR_34+10)
  2026  00F7FA  6E10               	movwf	sprintf@f+1,c
  2027  00F7FC  C04B  F011         	movff	V_ProgRiegoIlum@i_hora_riego_tr,?_sprintf+4
  2028  00F800  6A12               	clrf	?_sprintf+5,c
  2029  00F802  EC97  F076         	call	_sprintf	;wreg free
  2030                           
  2031                           ;main.c: 416: Lcd_Out(2, 5, buffer1);
  2032  00F806  0E05               	movlw	5
  2033  00F808  6E40               	movwf	Lcd_Out@x,c
  2034  00F80A  0E8B               	movlw	low _buffer1
  2035  00F80C  6E41               	movwf	Lcd_Out@buffer,c
  2036  00F80E  0E00               	movlw	high _buffer1
  2037  00F810  6E42               	movwf	Lcd_Out@buffer+1,c
  2038  00F812  0E02               	movlw	2
  2039  00F814  ECF7  F06F         	call	_Lcd_Out
  2040                           
  2041                           ;main.c: 417: Lcd_Out(2, 5, "");
  2042  00F818  0E05               	movlw	5
  2043  00F81A  6E40               	movwf	Lcd_Out@x,c
  2044  00F81C  0EEB               	movlw	low (STR_4+20)
  2045  00F81E  6E41               	movwf	Lcd_Out@buffer,c
  2046  00F820  0EFE               	movlw	high (STR_4+20)
  2047  00F822  6E42               	movwf	Lcd_Out@buffer+1,c
  2048  00F824  0E02               	movlw	2
  2049  00F826  ECF7  F06F         	call	_Lcd_Out
  2050                           
  2051                           ;main.c: 418: } else if (posicion == 2) {
  2052  00F82A  D126               	goto	l3497
  2053  00F82C                     l3413:
  2054  00F82C  0E02               	movlw	2
  2055  00F82E  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2056  00F830  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2057  00F832  A4D8               	btfss	status,2,c
  2058  00F834  D025               	goto	l3425
  2059                           
  2060                           ;main.c: 419: if (i_min_riego_tr < 59) {
  2061  00F836  0E3B               	movlw	59
  2062  00F838  604C               	cpfslt	V_ProgRiegoIlum@i_min_riego_tr,c
  2063  00F83A  D002               	goto	l3419
  2064                           
  2065                           ;main.c: 420: i_min_riego_tr++;
  2066  00F83C  2A4C               	incf	V_ProgRiegoIlum@i_min_riego_tr,f,c
  2067  00F83E  D000               	goto	l3419
  2068  00F840                     l3419:
  2069                           
  2070                           ;main.c: 421: }
  2071                           ;main.c: 422: sprintf(buffer1, "%02u", i_min_riego_tr);
  2072  00F840  0E8B               	movlw	low _buffer1
  2073  00F842  6E0D               	movwf	sprintf@sp,c
  2074  00F844  0E00               	movlw	high _buffer1
  2075  00F846  6E0E               	movwf	sprintf@sp+1,c
  2076  00F848  0EC2               	movlw	low (STR_34+10)
  2077  00F84A  6E0F               	movwf	sprintf@f,c
  2078  00F84C  0EFF               	movlw	high (STR_34+10)
  2079  00F84E  6E10               	movwf	sprintf@f+1,c
  2080  00F850  C04C  F011         	movff	V_ProgRiegoIlum@i_min_riego_tr,?_sprintf+4
  2081  00F854  6A12               	clrf	?_sprintf+5,c
  2082  00F856  EC97  F076         	call	_sprintf	;wreg free
  2083                           
  2084                           ;main.c: 423: Lcd_Out(2, 8, buffer1);
  2085  00F85A  0E08               	movlw	8
  2086  00F85C  6E40               	movwf	Lcd_Out@x,c
  2087  00F85E  0E8B               	movlw	low _buffer1
  2088  00F860  6E41               	movwf	Lcd_Out@buffer,c
  2089  00F862  0E00               	movlw	high _buffer1
  2090  00F864  6E42               	movwf	Lcd_Out@buffer+1,c
  2091  00F866  0E02               	movlw	2
  2092  00F868  ECF7  F06F         	call	_Lcd_Out
  2093                           
  2094                           ;main.c: 424: Lcd_Out(2, 8, "");
  2095  00F86C  0E08               	movlw	8
  2096  00F86E  6E40               	movwf	Lcd_Out@x,c
  2097  00F870  0EEB               	movlw	low (STR_4+20)
  2098  00F872  6E41               	movwf	Lcd_Out@buffer,c
  2099  00F874  0EFE               	movlw	high (STR_4+20)
  2100  00F876  6E42               	movwf	Lcd_Out@buffer+1,c
  2101  00F878  0E02               	movlw	2
  2102  00F87A  ECF7  F06F         	call	_Lcd_Out
  2103                           
  2104                           ;main.c: 425: } else if (posicion == 4) {
  2105  00F87E  D0FC               	goto	l3497
  2106  00F880                     l3425:
  2107  00F880  0E04               	movlw	4
  2108  00F882  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2109  00F884  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2110  00F886  A4D8               	btfss	status,2,c
  2111  00F888  D025               	goto	l3437
  2112                           
  2113                           ;main.c: 426: if (d_hora_riego_tr < 3) {
  2114  00F88A  0E03               	movlw	3
  2115  00F88C  604D               	cpfslt	V_ProgRiegoIlum@d_hora_riego_tr,c
  2116  00F88E  D002               	goto	l3431
  2117                           
  2118                           ;main.c: 427: d_hora_riego_tr++;
  2119  00F890  2A4D               	incf	V_ProgRiegoIlum@d_hora_riego_tr,f,c
  2120  00F892  D000               	goto	l3431
  2121  00F894                     l3431:
  2122                           
  2123                           ;main.c: 428: }
  2124                           ;main.c: 429: sprintf(buffer1, "%02u", d_hora_riego_tr);
  2125  00F894  0E8B               	movlw	low _buffer1
  2126  00F896  6E0D               	movwf	sprintf@sp,c
  2127  00F898  0E00               	movlw	high _buffer1
  2128  00F89A  6E0E               	movwf	sprintf@sp+1,c
  2129  00F89C  0EC2               	movlw	low (STR_34+10)
  2130  00F89E  6E0F               	movwf	sprintf@f,c
  2131  00F8A0  0EFF               	movlw	high (STR_34+10)
  2132  00F8A2  6E10               	movwf	sprintf@f+1,c
  2133  00F8A4  C04D  F011         	movff	V_ProgRiegoIlum@d_hora_riego_tr,?_sprintf+4
  2134  00F8A8  6A12               	clrf	?_sprintf+5,c
  2135  00F8AA  EC97  F076         	call	_sprintf	;wreg free
  2136                           
  2137                           ;main.c: 430: Lcd_Out(2, 15, buffer1);
  2138  00F8AE  0E0F               	movlw	15
  2139  00F8B0  6E40               	movwf	Lcd_Out@x,c
  2140  00F8B2  0E8B               	movlw	low _buffer1
  2141  00F8B4  6E41               	movwf	Lcd_Out@buffer,c
  2142  00F8B6  0E00               	movlw	high _buffer1
  2143  00F8B8  6E42               	movwf	Lcd_Out@buffer+1,c
  2144  00F8BA  0E02               	movlw	2
  2145  00F8BC  ECF7  F06F         	call	_Lcd_Out
  2146                           
  2147                           ;main.c: 431: Lcd_Out(2, 15, "");
  2148  00F8C0  0E0F               	movlw	15
  2149  00F8C2  6E40               	movwf	Lcd_Out@x,c
  2150  00F8C4  0EEB               	movlw	low (STR_4+20)
  2151  00F8C6  6E41               	movwf	Lcd_Out@buffer,c
  2152  00F8C8  0EFE               	movlw	high (STR_4+20)
  2153  00F8CA  6E42               	movwf	Lcd_Out@buffer+1,c
  2154  00F8CC  0E02               	movlw	2
  2155  00F8CE  ECF7  F06F         	call	_Lcd_Out
  2156                           
  2157                           ;main.c: 432: } else if (posicion == 6) {
  2158  00F8D2  D0D2               	goto	l3497
  2159  00F8D4                     l3437:
  2160  00F8D4  0E06               	movlw	6
  2161  00F8D6  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2162  00F8D8  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2163  00F8DA  A4D8               	btfss	status,2,c
  2164  00F8DC  D025               	goto	l3449
  2165                           
  2166                           ;main.c: 433: if (d_min_riego_tr < 59) {
  2167  00F8DE  0E3B               	movlw	59
  2168  00F8E0  604E               	cpfslt	V_ProgRiegoIlum@d_min_riego_tr,c
  2169  00F8E2  D002               	goto	l3443
  2170                           
  2171                           ;main.c: 434: d_min_riego_tr++;
  2172  00F8E4  2A4E               	incf	V_ProgRiegoIlum@d_min_riego_tr,f,c
  2173  00F8E6  D000               	goto	l3443
  2174  00F8E8                     l3443:
  2175                           
  2176                           ;main.c: 435: }
  2177                           ;main.c: 436: sprintf(buffer1, "%02u", d_min_riego_tr);
  2178  00F8E8  0E8B               	movlw	low _buffer1
  2179  00F8EA  6E0D               	movwf	sprintf@sp,c
  2180  00F8EC  0E00               	movlw	high _buffer1
  2181  00F8EE  6E0E               	movwf	sprintf@sp+1,c
  2182  00F8F0  0EC2               	movlw	low (STR_34+10)
  2183  00F8F2  6E0F               	movwf	sprintf@f,c
  2184  00F8F4  0EFF               	movlw	high (STR_34+10)
  2185  00F8F6  6E10               	movwf	sprintf@f+1,c
  2186  00F8F8  C04E  F011         	movff	V_ProgRiegoIlum@d_min_riego_tr,?_sprintf+4
  2187  00F8FC  6A12               	clrf	?_sprintf+5,c
  2188  00F8FE  EC97  F076         	call	_sprintf	;wreg free
  2189                           
  2190                           ;main.c: 437: Lcd_Out(2, 18, buffer1);
  2191  00F902  0E12               	movlw	18
  2192  00F904  6E40               	movwf	Lcd_Out@x,c
  2193  00F906  0E8B               	movlw	low _buffer1
  2194  00F908  6E41               	movwf	Lcd_Out@buffer,c
  2195  00F90A  0E00               	movlw	high _buffer1
  2196  00F90C  6E42               	movwf	Lcd_Out@buffer+1,c
  2197  00F90E  0E02               	movlw	2
  2198  00F910  ECF7  F06F         	call	_Lcd_Out
  2199                           
  2200                           ;main.c: 438: Lcd_Out(2, 18, "");
  2201  00F914  0E12               	movlw	18
  2202  00F916  6E40               	movwf	Lcd_Out@x,c
  2203  00F918  0EEB               	movlw	low (STR_4+20)
  2204  00F91A  6E41               	movwf	Lcd_Out@buffer,c
  2205  00F91C  0EFE               	movlw	high (STR_4+20)
  2206  00F91E  6E42               	movwf	Lcd_Out@buffer+1,c
  2207  00F920  0E02               	movlw	2
  2208  00F922  ECF7  F06F         	call	_Lcd_Out
  2209                           
  2210                           ;main.c: 439: } else if (posicion == 8) {
  2211  00F926  D0A8               	goto	l3497
  2212  00F928                     l3449:
  2213  00F928  0E08               	movlw	8
  2214  00F92A  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2215  00F92C  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2216  00F92E  A4D8               	btfss	status,2,c
  2217  00F930  D025               	goto	l3461
  2218                           
  2219                           ;main.c: 440: if (i_hora_ilum_tr < 23) {
  2220  00F932  0E17               	movlw	23
  2221  00F934  6047               	cpfslt	V_ProgRiegoIlum@i_hora_ilum_tr,c
  2222  00F936  D002               	goto	l3455
  2223                           
  2224                           ;main.c: 441: i_hora_ilum_tr++;
  2225  00F938  2A47               	incf	V_ProgRiegoIlum@i_hora_ilum_tr,f,c
  2226  00F93A  D000               	goto	l3455
  2227  00F93C                     l3455:
  2228                           
  2229                           ;main.c: 442: }
  2230                           ;main.c: 443: sprintf(buffer1, "%02u", i_hora_ilum_tr);
  2231  00F93C  0E8B               	movlw	low _buffer1
  2232  00F93E  6E0D               	movwf	sprintf@sp,c
  2233  00F940  0E00               	movlw	high _buffer1
  2234  00F942  6E0E               	movwf	sprintf@sp+1,c
  2235  00F944  0EC2               	movlw	low (STR_34+10)
  2236  00F946  6E0F               	movwf	sprintf@f,c
  2237  00F948  0EFF               	movlw	high (STR_34+10)
  2238  00F94A  6E10               	movwf	sprintf@f+1,c
  2239  00F94C  C047  F011         	movff	V_ProgRiegoIlum@i_hora_ilum_tr,?_sprintf+4
  2240  00F950  6A12               	clrf	?_sprintf+5,c
  2241  00F952  EC97  F076         	call	_sprintf	;wreg free
  2242                           
  2243                           ;main.c: 444: Lcd_Out(4, 5, buffer1);
  2244  00F956  0E05               	movlw	5
  2245  00F958  6E40               	movwf	Lcd_Out@x,c
  2246  00F95A  0E8B               	movlw	low _buffer1
  2247  00F95C  6E41               	movwf	Lcd_Out@buffer,c
  2248  00F95E  0E00               	movlw	high _buffer1
  2249  00F960  6E42               	movwf	Lcd_Out@buffer+1,c
  2250  00F962  0E04               	movlw	4
  2251  00F964  ECF7  F06F         	call	_Lcd_Out
  2252                           
  2253                           ;main.c: 445: Lcd_Out(4, 5, "");
  2254  00F968  0E05               	movlw	5
  2255  00F96A  6E40               	movwf	Lcd_Out@x,c
  2256  00F96C  0EEB               	movlw	low (STR_4+20)
  2257  00F96E  6E41               	movwf	Lcd_Out@buffer,c
  2258  00F970  0EFE               	movlw	high (STR_4+20)
  2259  00F972  6E42               	movwf	Lcd_Out@buffer+1,c
  2260  00F974  0E04               	movlw	4
  2261  00F976  ECF7  F06F         	call	_Lcd_Out
  2262                           
  2263                           ;main.c: 446: } else if (posicion == 10) {
  2264  00F97A  D07E               	goto	l3497
  2265  00F97C                     l3461:
  2266  00F97C  0E0A               	movlw	10
  2267  00F97E  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2268  00F980  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2269  00F982  A4D8               	btfss	status,2,c
  2270  00F984  D025               	goto	l3473
  2271                           
  2272                           ;main.c: 447: if (i_min_ilum_tr < 59) {
  2273  00F986  0E3B               	movlw	59
  2274  00F988  6048               	cpfslt	V_ProgRiegoIlum@i_min_ilum_tr,c
  2275  00F98A  D002               	goto	l3467
  2276                           
  2277                           ;main.c: 448: i_min_ilum_tr++;
  2278  00F98C  2A48               	incf	V_ProgRiegoIlum@i_min_ilum_tr,f,c
  2279  00F98E  D000               	goto	l3467
  2280  00F990                     l3467:
  2281                           
  2282                           ;main.c: 449: }
  2283                           ;main.c: 450: sprintf(buffer1, "%02u", i_min_ilum_tr);
  2284  00F990  0E8B               	movlw	low _buffer1
  2285  00F992  6E0D               	movwf	sprintf@sp,c
  2286  00F994  0E00               	movlw	high _buffer1
  2287  00F996  6E0E               	movwf	sprintf@sp+1,c
  2288  00F998  0EC2               	movlw	low (STR_34+10)
  2289  00F99A  6E0F               	movwf	sprintf@f,c
  2290  00F99C  0EFF               	movlw	high (STR_34+10)
  2291  00F99E  6E10               	movwf	sprintf@f+1,c
  2292  00F9A0  C048  F011         	movff	V_ProgRiegoIlum@i_min_ilum_tr,?_sprintf+4
  2293  00F9A4  6A12               	clrf	?_sprintf+5,c
  2294  00F9A6  EC97  F076         	call	_sprintf	;wreg free
  2295                           
  2296                           ;main.c: 451: Lcd_Out(4, 8, buffer1);
  2297  00F9AA  0E08               	movlw	8
  2298  00F9AC  6E40               	movwf	Lcd_Out@x,c
  2299  00F9AE  0E8B               	movlw	low _buffer1
  2300  00F9B0  6E41               	movwf	Lcd_Out@buffer,c
  2301  00F9B2  0E00               	movlw	high _buffer1
  2302  00F9B4  6E42               	movwf	Lcd_Out@buffer+1,c
  2303  00F9B6  0E04               	movlw	4
  2304  00F9B8  ECF7  F06F         	call	_Lcd_Out
  2305                           
  2306                           ;main.c: 452: Lcd_Out(4, 8, "");
  2307  00F9BC  0E08               	movlw	8
  2308  00F9BE  6E40               	movwf	Lcd_Out@x,c
  2309  00F9C0  0EEB               	movlw	low (STR_4+20)
  2310  00F9C2  6E41               	movwf	Lcd_Out@buffer,c
  2311  00F9C4  0EFE               	movlw	high (STR_4+20)
  2312  00F9C6  6E42               	movwf	Lcd_Out@buffer+1,c
  2313  00F9C8  0E04               	movlw	4
  2314  00F9CA  ECF7  F06F         	call	_Lcd_Out
  2315                           
  2316                           ;main.c: 453: } else if (posicion == 12) {
  2317  00F9CE  D054               	goto	l3497
  2318  00F9D0                     l3473:
  2319  00F9D0  0E0C               	movlw	12
  2320  00F9D2  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2321  00F9D4  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2322  00F9D6  A4D8               	btfss	status,2,c
  2323  00F9D8  D025               	goto	l3485
  2324                           
  2325                           ;main.c: 454: if (d_hora_ilum_tr < 11) {
  2326  00F9DA  0E0B               	movlw	11
  2327  00F9DC  6049               	cpfslt	V_ProgRiegoIlum@d_hora_ilum_tr,c
  2328  00F9DE  D002               	goto	l3479
  2329                           
  2330                           ;main.c: 455: d_hora_ilum_tr++;
  2331  00F9E0  2A49               	incf	V_ProgRiegoIlum@d_hora_ilum_tr,f,c
  2332  00F9E2  D000               	goto	l3479
  2333  00F9E4                     l3479:
  2334                           
  2335                           ;main.c: 456: }
  2336                           ;main.c: 457: sprintf(buffer1, "%02u", d_hora_ilum_tr);
  2337  00F9E4  0E8B               	movlw	low _buffer1
  2338  00F9E6  6E0D               	movwf	sprintf@sp,c
  2339  00F9E8  0E00               	movlw	high _buffer1
  2340  00F9EA  6E0E               	movwf	sprintf@sp+1,c
  2341  00F9EC  0EC2               	movlw	low (STR_34+10)
  2342  00F9EE  6E0F               	movwf	sprintf@f,c
  2343  00F9F0  0EFF               	movlw	high (STR_34+10)
  2344  00F9F2  6E10               	movwf	sprintf@f+1,c
  2345  00F9F4  C049  F011         	movff	V_ProgRiegoIlum@d_hora_ilum_tr,?_sprintf+4
  2346  00F9F8  6A12               	clrf	?_sprintf+5,c
  2347  00F9FA  EC97  F076         	call	_sprintf	;wreg free
  2348                           
  2349                           ;main.c: 458: Lcd_Out(4, 15, buffer1);
  2350  00F9FE  0E0F               	movlw	15
  2351  00FA00  6E40               	movwf	Lcd_Out@x,c
  2352  00FA02  0E8B               	movlw	low _buffer1
  2353  00FA04  6E41               	movwf	Lcd_Out@buffer,c
  2354  00FA06  0E00               	movlw	high _buffer1
  2355  00FA08  6E42               	movwf	Lcd_Out@buffer+1,c
  2356  00FA0A  0E04               	movlw	4
  2357  00FA0C  ECF7  F06F         	call	_Lcd_Out
  2358                           
  2359                           ;main.c: 459: Lcd_Out(4, 15, "");
  2360  00FA10  0E0F               	movlw	15
  2361  00FA12  6E40               	movwf	Lcd_Out@x,c
  2362  00FA14  0EEB               	movlw	low (STR_4+20)
  2363  00FA16  6E41               	movwf	Lcd_Out@buffer,c
  2364  00FA18  0EFE               	movlw	high (STR_4+20)
  2365  00FA1A  6E42               	movwf	Lcd_Out@buffer+1,c
  2366  00FA1C  0E04               	movlw	4
  2367  00FA1E  ECF7  F06F         	call	_Lcd_Out
  2368                           
  2369                           ;main.c: 460: } else if (posicion == 14) {
  2370  00FA22  D02A               	goto	l3497
  2371  00FA24                     l3485:
  2372  00FA24  0E0E               	movlw	14
  2373  00FA26  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2374  00FA28  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2375  00FA2A  A4D8               	btfss	status,2,c
  2376  00FA2C  D025               	goto	l3497
  2377                           
  2378                           ;main.c: 461: if (d_min_ilum_tr < 59) {
  2379  00FA2E  0E3B               	movlw	59
  2380  00FA30  604A               	cpfslt	V_ProgRiegoIlum@d_min_ilum_tr,c
  2381  00FA32  D002               	goto	l3491
  2382                           
  2383                           ;main.c: 462: d_min_ilum_tr++;
  2384  00FA34  2A4A               	incf	V_ProgRiegoIlum@d_min_ilum_tr,f,c
  2385  00FA36  D000               	goto	l3491
  2386  00FA38                     l3491:
  2387                           
  2388                           ;main.c: 463: }
  2389                           ;main.c: 464: sprintf(buffer1, "%02u", d_min_ilum_tr);
  2390  00FA38  0E8B               	movlw	low _buffer1
  2391  00FA3A  6E0D               	movwf	sprintf@sp,c
  2392  00FA3C  0E00               	movlw	high _buffer1
  2393  00FA3E  6E0E               	movwf	sprintf@sp+1,c
  2394  00FA40  0EC2               	movlw	low (STR_34+10)
  2395  00FA42  6E0F               	movwf	sprintf@f,c
  2396  00FA44  0EFF               	movlw	high (STR_34+10)
  2397  00FA46  6E10               	movwf	sprintf@f+1,c
  2398  00FA48  C04A  F011         	movff	V_ProgRiegoIlum@d_min_ilum_tr,?_sprintf+4
  2399  00FA4C  6A12               	clrf	?_sprintf+5,c
  2400  00FA4E  EC97  F076         	call	_sprintf	;wreg free
  2401                           
  2402                           ;main.c: 465: Lcd_Out(4, 18, buffer1);
  2403  00FA52  0E12               	movlw	18
  2404  00FA54  6E40               	movwf	Lcd_Out@x,c
  2405  00FA56  0E8B               	movlw	low _buffer1
  2406  00FA58  6E41               	movwf	Lcd_Out@buffer,c
  2407  00FA5A  0E00               	movlw	high _buffer1
  2408  00FA5C  6E42               	movwf	Lcd_Out@buffer+1,c
  2409  00FA5E  0E04               	movlw	4
  2410  00FA60  ECF7  F06F         	call	_Lcd_Out
  2411                           
  2412                           ;main.c: 466: Lcd_Out(4, 18, "");
  2413  00FA64  0E12               	movlw	18
  2414  00FA66  6E40               	movwf	Lcd_Out@x,c
  2415  00FA68  0EEB               	movlw	low (STR_4+20)
  2416  00FA6A  6E41               	movwf	Lcd_Out@buffer,c
  2417  00FA6C  0EFE               	movlw	high (STR_4+20)
  2418  00FA6E  6E42               	movwf	Lcd_Out@buffer+1,c
  2419  00FA70  0E04               	movlw	4
  2420  00FA72  ECF7  F06F         	call	_Lcd_Out
  2421  00FA76  D000               	goto	l3497
  2422  00FA78                     l3497:
  2423                           
  2424                           ;main.c: 467: }
  2425                           ;main.c: 468: }
  2426                           ;main.c: 470: if (Sw_Right = PORTAbits.RA2 == 0) {
  2427  00FA78  B480               	btfsc	3968,2,c	;volatile
  2428  00FA7A  D002               	goto	u3380
  2429  00FA7C  0E01               	movlw	1
  2430  00FA7E  D001               	goto	u3390
  2431  00FA80                     u3380:
  2432  00FA80  0E00               	movlw	0
  2433  00FA82                     u3390:
  2434  00FA82  0100               	movlb	0	; () banked
  2435  00FA84  6F88               	movwf	_Sw_Right& (0+255),b
  2436  00FA86  0100               	movlb	0	; () banked
  2437  00FA88  5188               	movf	_Sw_Right& (0+255),w,b
  2438  00FA8A  B4D8               	btfsc	status,2,c
  2439  00FA8C  D036               	goto	l3507
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;main.c: 471: if (posicion <= 13) {
  2443  00FA8E  BE50               	btfsc	V_ProgRiegoIlum@posicion+1,7,c
  2444  00FA90  D006               	goto	l3501
  2445  00FA92  5050               	movf	V_ProgRiegoIlum@posicion+1,w,c
  2446  00FA94  E109               	bnz	l3503
  2447  00FA96  0E0E               	movlw	14
  2448  00FA98  5C4F               	subwf	V_ProgRiegoIlum@posicion,w,c
  2449  00FA9A  B0D8               	btfsc	status,0,c
  2450  00FA9C  D005               	goto	l3503
  2451  00FA9E                     l3501:
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;main.c: 472: posicion += 2;
  2455  00FA9E  0E02               	movlw	2
  2456  00FAA0  264F               	addwf	V_ProgRiegoIlum@posicion,f,c
  2457  00FAA2  0E00               	movlw	0
  2458  00FAA4  2250               	addwfc	V_ProgRiegoIlum@posicion+1,f,c
  2459  00FAA6  D000               	goto	l3503
  2460  00FAA8                     l3503:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;main.c: 473: }
  2464                           ;main.c: 474: i = 0;
  2465  00FAA8  0E00               	movlw	0
  2466  00FAAA  0100               	movlb	0	; () banked
  2467  00FAAC  6F7F               	movwf	(_i+1)& (0+255),b
  2468  00FAAE  0E00               	movlw	0
  2469  00FAB0  6F7E               	movwf	_i& (0+255),b
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;main.c: 475: Lcd_Out(posicionesUp[posicion], posicionesUp[posicion + 1], "");
  2473  00FAB2  C04F  F045         	movff	V_ProgRiegoIlum@posicion,??_V_ProgRiegoIlum
  2474  00FAB6  C050  F046         	movff	V_ProgRiegoIlum@posicion+1,??_V_ProgRiegoIlum+1
  2475  00FABA  90D8               	bcf	status,0,c
  2476  00FABC  3645               	rlcf	??_V_ProgRiegoIlum,f,c
  2477  00FABE  3646               	rlcf	??_V_ProgRiegoIlum+1,f,c
  2478  00FAC0  0E02               	movlw	2
  2479  00FAC2  2645               	addwf	??_V_ProgRiegoIlum,f,c
  2480  00FAC4  0E00               	movlw	0
  2481  00FAC6  2246               	addwfc	??_V_ProgRiegoIlum+1,f,c
  2482  00FAC8  0EA7               	movlw	low _posicionesUp
  2483  00FACA  2445               	addwf	??_V_ProgRiegoIlum,w,c
  2484  00FACC  6ED9               	movwf	fsr2l,c
  2485  00FACE  0E00               	movlw	high _posicionesUp
  2486  00FAD0  2046               	addwfc	??_V_ProgRiegoIlum+1,w,c
  2487  00FAD2  6EDA               	movwf	fsr2h,c
  2488  00FAD4  50DF               	movf	indf2,w,c
  2489  00FAD6  6E40               	movwf	Lcd_Out@x,c
  2490  00FAD8  0EEB               	movlw	low (STR_4+20)
  2491  00FADA  6E41               	movwf	Lcd_Out@buffer,c
  2492  00FADC  0EFE               	movlw	high (STR_4+20)
  2493  00FADE  6E42               	movwf	Lcd_Out@buffer+1,c
  2494  00FAE0  90D8               	bcf	status,0,c
  2495  00FAE2  344F               	rlcf	V_ProgRiegoIlum@posicion,w,c
  2496  00FAE4  6ED9               	movwf	fsr2l,c
  2497  00FAE6  3450               	rlcf	V_ProgRiegoIlum@posicion+1,w,c
  2498  00FAE8  6EDA               	movwf	fsr2h,c
  2499  00FAEA  0EA7               	movlw	low _posicionesUp
  2500  00FAEC  26D9               	addwf	fsr2l,f,c
  2501  00FAEE  0E00               	movlw	high _posicionesUp
  2502  00FAF0  22DA               	addwfc	fsr2h,f,c
  2503  00FAF2  50DF               	movf	indf2,w,c
  2504  00FAF4  ECF7  F06F         	call	_Lcd_Out
  2505  00FAF8  D000               	goto	l3507
  2506  00FAFA                     l3507:
  2507                           
  2508                           ;main.c: 476: }
  2509                           ;main.c: 478: if (Sw_Left = PORTAbits.RA0 == 0) {
  2510  00FAFA  B080               	btfsc	3968,0,c	;volatile
  2511  00FAFC  D002               	goto	u3420
  2512  00FAFE  0E01               	movlw	1
  2513  00FB00  D001               	goto	u3430
  2514  00FB02                     u3420:
  2515  00FB02  0E00               	movlw	0
  2516  00FB04                     u3430:
  2517  00FB04  0100               	movlb	0	; () banked
  2518  00FB06  6F87               	movwf	_Sw_Left& (0+255),b
  2519  00FB08  0100               	movlb	0	; () banked
  2520  00FB0A  5187               	movf	_Sw_Left& (0+255),w,b
  2521  00FB0C  B4D8               	btfsc	status,2,c
  2522  00FB0E  D036               	goto	l3517
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;main.c: 479: if (posicion >= 2) {
  2526  00FB10  BE50               	btfsc	V_ProgRiegoIlum@posicion+1,7,c
  2527  00FB12  D00B               	goto	l3513
  2528  00FB14  5050               	movf	V_ProgRiegoIlum@posicion+1,w,c
  2529  00FB16  E104               	bnz	u3450
  2530  00FB18  0E02               	movlw	2
  2531  00FB1A  5C4F               	subwf	V_ProgRiegoIlum@posicion,w,c
  2532  00FB1C  A0D8               	btfss	status,0,c
  2533  00FB1E  D005               	goto	l3513
  2534  00FB20                     u3450:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;main.c: 480: posicion -= 2;
  2538  00FB20  0EFE               	movlw	254
  2539  00FB22  264F               	addwf	V_ProgRiegoIlum@posicion,f,c
  2540  00FB24  0EFF               	movlw	255
  2541  00FB26  2250               	addwfc	V_ProgRiegoIlum@posicion+1,f,c
  2542  00FB28  D000               	goto	l3513
  2543  00FB2A                     l3513:
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;main.c: 481: }
  2547                           ;main.c: 482: i = 0;
  2548  00FB2A  0E00               	movlw	0
  2549  00FB2C  0100               	movlb	0	; () banked
  2550  00FB2E  6F7F               	movwf	(_i+1)& (0+255),b
  2551  00FB30  0E00               	movlw	0
  2552  00FB32  6F7E               	movwf	_i& (0+255),b
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;main.c: 483: Lcd_Out(posicionesUp[posicion], posicionesUp[posicion + 1], "");
  2556  00FB34  C04F  F045         	movff	V_ProgRiegoIlum@posicion,??_V_ProgRiegoIlum
  2557  00FB38  C050  F046         	movff	V_ProgRiegoIlum@posicion+1,??_V_ProgRiegoIlum+1
  2558  00FB3C  90D8               	bcf	status,0,c
  2559  00FB3E  3645               	rlcf	??_V_ProgRiegoIlum,f,c
  2560  00FB40  3646               	rlcf	??_V_ProgRiegoIlum+1,f,c
  2561  00FB42  0E02               	movlw	2
  2562  00FB44  2645               	addwf	??_V_ProgRiegoIlum,f,c
  2563  00FB46  0E00               	movlw	0
  2564  00FB48  2246               	addwfc	??_V_ProgRiegoIlum+1,f,c
  2565  00FB4A  0EA7               	movlw	low _posicionesUp
  2566  00FB4C  2445               	addwf	??_V_ProgRiegoIlum,w,c
  2567  00FB4E  6ED9               	movwf	fsr2l,c
  2568  00FB50  0E00               	movlw	high _posicionesUp
  2569  00FB52  2046               	addwfc	??_V_ProgRiegoIlum+1,w,c
  2570  00FB54  6EDA               	movwf	fsr2h,c
  2571  00FB56  50DF               	movf	indf2,w,c
  2572  00FB58  6E40               	movwf	Lcd_Out@x,c
  2573  00FB5A  0EEB               	movlw	low (STR_4+20)
  2574  00FB5C  6E41               	movwf	Lcd_Out@buffer,c
  2575  00FB5E  0EFE               	movlw	high (STR_4+20)
  2576  00FB60  6E42               	movwf	Lcd_Out@buffer+1,c
  2577  00FB62  90D8               	bcf	status,0,c
  2578  00FB64  344F               	rlcf	V_ProgRiegoIlum@posicion,w,c
  2579  00FB66  6ED9               	movwf	fsr2l,c
  2580  00FB68  3450               	rlcf	V_ProgRiegoIlum@posicion+1,w,c
  2581  00FB6A  6EDA               	movwf	fsr2h,c
  2582  00FB6C  0EA7               	movlw	low _posicionesUp
  2583  00FB6E  26D9               	addwf	fsr2l,f,c
  2584  00FB70  0E00               	movlw	high _posicionesUp
  2585  00FB72  22DA               	addwfc	fsr2h,f,c
  2586  00FB74  50DF               	movf	indf2,w,c
  2587  00FB76  ECF7  F06F         	call	_Lcd_Out
  2588  00FB7A  D000               	goto	l3517
  2589  00FB7C                     l3517:
  2590                           
  2591                           ;main.c: 484: }
  2592                           ;main.c: 486: if (Sw_Down = PORTCbits.RC4 == 0) {
  2593  00FB7C  B882               	btfsc	3970,4,c	;volatile
  2594  00FB7E  D002               	goto	u3460
  2595  00FB80  0E01               	movlw	1
  2596  00FB82  D001               	goto	u3470
  2597  00FB84                     u3460:
  2598  00FB84  0E00               	movlw	0
  2599  00FB86                     u3470:
  2600  00FB86  0100               	movlb	0	; () banked
  2601  00FB88  6F86               	movwf	_Sw_Down& (0+255),b
  2602  00FB8A  0100               	movlb	0	; () banked
  2603  00FB8C  5186               	movf	_Sw_Down& (0+255),w,b
  2604  00FB8E  B4D8               	btfsc	status,2,c
  2605  00FB90  D154               	goto	l3617
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;main.c: 487: i = 0;
  2609  00FB92  0E00               	movlw	0
  2610  00FB94  0100               	movlb	0	; () banked
  2611  00FB96  6F7F               	movwf	(_i+1)& (0+255),b
  2612  00FB98  0E00               	movlw	0
  2613  00FB9A  6F7E               	movwf	_i& (0+255),b
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;main.c: 488: if (posicion == 0) {
  2617  00FB9C  504F               	movf	V_ProgRiegoIlum@posicion,w,c
  2618  00FB9E  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2619  00FBA0  A4D8               	btfss	status,2,c
  2620  00FBA2  D025               	goto	l3533
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;main.c: 489: if (i_hora_riego_tr > 0) {
  2624  00FBA4  504B               	movf	V_ProgRiegoIlum@i_hora_riego_tr,w,c
  2625  00FBA6  B4D8               	btfsc	status,2,c
  2626  00FBA8  D002               	goto	l3527
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;main.c: 490: i_hora_riego_tr--;
  2630  00FBAA  064B               	decf	V_ProgRiegoIlum@i_hora_riego_tr,f,c
  2631  00FBAC  D000               	goto	l3527
  2632  00FBAE                     l3527:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;main.c: 491: }
  2636                           ;main.c: 492: sprintf(buffer1, "%02u", i_hora_riego_tr);
  2637  00FBAE  0E8B               	movlw	low _buffer1
  2638  00FBB0  6E0D               	movwf	sprintf@sp,c
  2639  00FBB2  0E00               	movlw	high _buffer1
  2640  00FBB4  6E0E               	movwf	sprintf@sp+1,c
  2641  00FBB6  0EC2               	movlw	low (STR_34+10)
  2642  00FBB8  6E0F               	movwf	sprintf@f,c
  2643  00FBBA  0EFF               	movlw	high (STR_34+10)
  2644  00FBBC  6E10               	movwf	sprintf@f+1,c
  2645  00FBBE  C04B  F011         	movff	V_ProgRiegoIlum@i_hora_riego_tr,?_sprintf+4
  2646  00FBC2  6A12               	clrf	?_sprintf+5,c
  2647  00FBC4  EC97  F076         	call	_sprintf	;wreg free
  2648                           
  2649                           ;main.c: 493: Lcd_Out(2, 5, buffer1);
  2650  00FBC8  0E05               	movlw	5
  2651  00FBCA  6E40               	movwf	Lcd_Out@x,c
  2652  00FBCC  0E8B               	movlw	low _buffer1
  2653  00FBCE  6E41               	movwf	Lcd_Out@buffer,c
  2654  00FBD0  0E00               	movlw	high _buffer1
  2655  00FBD2  6E42               	movwf	Lcd_Out@buffer+1,c
  2656  00FBD4  0E02               	movlw	2
  2657  00FBD6  ECF7  F06F         	call	_Lcd_Out
  2658                           
  2659                           ;main.c: 494: Lcd_Out(2, 5, "");
  2660  00FBDA  0E05               	movlw	5
  2661  00FBDC  6E40               	movwf	Lcd_Out@x,c
  2662  00FBDE  0EEB               	movlw	low (STR_4+20)
  2663  00FBE0  6E41               	movwf	Lcd_Out@buffer,c
  2664  00FBE2  0EFE               	movlw	high (STR_4+20)
  2665  00FBE4  6E42               	movwf	Lcd_Out@buffer+1,c
  2666  00FBE6  0E02               	movlw	2
  2667  00FBE8  ECF7  F06F         	call	_Lcd_Out
  2668                           
  2669                           ;main.c: 495: } else if (posicion == 2) {
  2670  00FBEC  D126               	goto	l3617
  2671  00FBEE                     l3533:
  2672  00FBEE  0E02               	movlw	2
  2673  00FBF0  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2674  00FBF2  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2675  00FBF4  A4D8               	btfss	status,2,c
  2676  00FBF6  D025               	goto	l3545
  2677                           
  2678                           ;main.c: 496: if (i_min_riego_tr > 0) {
  2679  00FBF8  504C               	movf	V_ProgRiegoIlum@i_min_riego_tr,w,c
  2680  00FBFA  B4D8               	btfsc	status,2,c
  2681  00FBFC  D002               	goto	l3539
  2682                           
  2683                           ;main.c: 497: i_min_riego_tr--;
  2684  00FBFE  064C               	decf	V_ProgRiegoIlum@i_min_riego_tr,f,c
  2685  00FC00  D000               	goto	l3539
  2686  00FC02                     l3539:
  2687                           
  2688                           ;main.c: 498: }
  2689                           ;main.c: 499: sprintf(buffer1, "%02u", i_min_riego_tr);
  2690  00FC02  0E8B               	movlw	low _buffer1
  2691  00FC04  6E0D               	movwf	sprintf@sp,c
  2692  00FC06  0E00               	movlw	high _buffer1
  2693  00FC08  6E0E               	movwf	sprintf@sp+1,c
  2694  00FC0A  0EC2               	movlw	low (STR_34+10)
  2695  00FC0C  6E0F               	movwf	sprintf@f,c
  2696  00FC0E  0EFF               	movlw	high (STR_34+10)
  2697  00FC10  6E10               	movwf	sprintf@f+1,c
  2698  00FC12  C04C  F011         	movff	V_ProgRiegoIlum@i_min_riego_tr,?_sprintf+4
  2699  00FC16  6A12               	clrf	?_sprintf+5,c
  2700  00FC18  EC97  F076         	call	_sprintf	;wreg free
  2701                           
  2702                           ;main.c: 500: Lcd_Out(2, 8, buffer1);
  2703  00FC1C  0E08               	movlw	8
  2704  00FC1E  6E40               	movwf	Lcd_Out@x,c
  2705  00FC20  0E8B               	movlw	low _buffer1
  2706  00FC22  6E41               	movwf	Lcd_Out@buffer,c
  2707  00FC24  0E00               	movlw	high _buffer1
  2708  00FC26  6E42               	movwf	Lcd_Out@buffer+1,c
  2709  00FC28  0E02               	movlw	2
  2710  00FC2A  ECF7  F06F         	call	_Lcd_Out
  2711                           
  2712                           ;main.c: 501: Lcd_Out(2, 8, "");
  2713  00FC2E  0E08               	movlw	8
  2714  00FC30  6E40               	movwf	Lcd_Out@x,c
  2715  00FC32  0EEB               	movlw	low (STR_4+20)
  2716  00FC34  6E41               	movwf	Lcd_Out@buffer,c
  2717  00FC36  0EFE               	movlw	high (STR_4+20)
  2718  00FC38  6E42               	movwf	Lcd_Out@buffer+1,c
  2719  00FC3A  0E02               	movlw	2
  2720  00FC3C  ECF7  F06F         	call	_Lcd_Out
  2721                           
  2722                           ;main.c: 502: } else if (posicion == 4) {
  2723  00FC40  D0FC               	goto	l3617
  2724  00FC42                     l3545:
  2725  00FC42  0E04               	movlw	4
  2726  00FC44  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2727  00FC46  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2728  00FC48  A4D8               	btfss	status,2,c
  2729  00FC4A  D025               	goto	l3557
  2730                           
  2731                           ;main.c: 503: if (d_hora_riego_tr > 0) {
  2732  00FC4C  504D               	movf	V_ProgRiegoIlum@d_hora_riego_tr,w,c
  2733  00FC4E  B4D8               	btfsc	status,2,c
  2734  00FC50  D002               	goto	l3551
  2735                           
  2736                           ;main.c: 504: d_hora_riego_tr--;
  2737  00FC52  064D               	decf	V_ProgRiegoIlum@d_hora_riego_tr,f,c
  2738  00FC54  D000               	goto	l3551
  2739  00FC56                     l3551:
  2740                           
  2741                           ;main.c: 505: }
  2742                           ;main.c: 506: sprintf(buffer1, "%02u", d_hora_riego_tr);
  2743  00FC56  0E8B               	movlw	low _buffer1
  2744  00FC58  6E0D               	movwf	sprintf@sp,c
  2745  00FC5A  0E00               	movlw	high _buffer1
  2746  00FC5C  6E0E               	movwf	sprintf@sp+1,c
  2747  00FC5E  0EC2               	movlw	low (STR_34+10)
  2748  00FC60  6E0F               	movwf	sprintf@f,c
  2749  00FC62  0EFF               	movlw	high (STR_34+10)
  2750  00FC64  6E10               	movwf	sprintf@f+1,c
  2751  00FC66  C04D  F011         	movff	V_ProgRiegoIlum@d_hora_riego_tr,?_sprintf+4
  2752  00FC6A  6A12               	clrf	?_sprintf+5,c
  2753  00FC6C  EC97  F076         	call	_sprintf	;wreg free
  2754                           
  2755                           ;main.c: 507: Lcd_Out(2, 15, buffer1);
  2756  00FC70  0E0F               	movlw	15
  2757  00FC72  6E40               	movwf	Lcd_Out@x,c
  2758  00FC74  0E8B               	movlw	low _buffer1
  2759  00FC76  6E41               	movwf	Lcd_Out@buffer,c
  2760  00FC78  0E00               	movlw	high _buffer1
  2761  00FC7A  6E42               	movwf	Lcd_Out@buffer+1,c
  2762  00FC7C  0E02               	movlw	2
  2763  00FC7E  ECF7  F06F         	call	_Lcd_Out
  2764                           
  2765                           ;main.c: 508: Lcd_Out(2, 15, "");
  2766  00FC82  0E0F               	movlw	15
  2767  00FC84  6E40               	movwf	Lcd_Out@x,c
  2768  00FC86  0EEB               	movlw	low (STR_4+20)
  2769  00FC88  6E41               	movwf	Lcd_Out@buffer,c
  2770  00FC8A  0EFE               	movlw	high (STR_4+20)
  2771  00FC8C  6E42               	movwf	Lcd_Out@buffer+1,c
  2772  00FC8E  0E02               	movlw	2
  2773  00FC90  ECF7  F06F         	call	_Lcd_Out
  2774                           
  2775                           ;main.c: 509: } else if (posicion == 6) {
  2776  00FC94  D0D2               	goto	l3617
  2777  00FC96                     l3557:
  2778  00FC96  0E06               	movlw	6
  2779  00FC98  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2780  00FC9A  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2781  00FC9C  A4D8               	btfss	status,2,c
  2782  00FC9E  D025               	goto	l3569
  2783                           
  2784                           ;main.c: 510: if (d_min_riego_tr > 0) {
  2785  00FCA0  504E               	movf	V_ProgRiegoIlum@d_min_riego_tr,w,c
  2786  00FCA2  B4D8               	btfsc	status,2,c
  2787  00FCA4  D002               	goto	l3563
  2788                           
  2789                           ;main.c: 511: d_min_riego_tr--;
  2790  00FCA6  064E               	decf	V_ProgRiegoIlum@d_min_riego_tr,f,c
  2791  00FCA8  D000               	goto	l3563
  2792  00FCAA                     l3563:
  2793                           
  2794                           ;main.c: 512: }
  2795                           ;main.c: 513: sprintf(buffer1, "%02u", d_min_riego_tr);
  2796  00FCAA  0E8B               	movlw	low _buffer1
  2797  00FCAC  6E0D               	movwf	sprintf@sp,c
  2798  00FCAE  0E00               	movlw	high _buffer1
  2799  00FCB0  6E0E               	movwf	sprintf@sp+1,c
  2800  00FCB2  0EC2               	movlw	low (STR_34+10)
  2801  00FCB4  6E0F               	movwf	sprintf@f,c
  2802  00FCB6  0EFF               	movlw	high (STR_34+10)
  2803  00FCB8  6E10               	movwf	sprintf@f+1,c
  2804  00FCBA  C04E  F011         	movff	V_ProgRiegoIlum@d_min_riego_tr,?_sprintf+4
  2805  00FCBE  6A12               	clrf	?_sprintf+5,c
  2806  00FCC0  EC97  F076         	call	_sprintf	;wreg free
  2807                           
  2808                           ;main.c: 514: Lcd_Out(2, 18, buffer1);
  2809  00FCC4  0E12               	movlw	18
  2810  00FCC6  6E40               	movwf	Lcd_Out@x,c
  2811  00FCC8  0E8B               	movlw	low _buffer1
  2812  00FCCA  6E41               	movwf	Lcd_Out@buffer,c
  2813  00FCCC  0E00               	movlw	high _buffer1
  2814  00FCCE  6E42               	movwf	Lcd_Out@buffer+1,c
  2815  00FCD0  0E02               	movlw	2
  2816  00FCD2  ECF7  F06F         	call	_Lcd_Out
  2817                           
  2818                           ;main.c: 515: Lcd_Out(2, 18, "");
  2819  00FCD6  0E12               	movlw	18
  2820  00FCD8  6E40               	movwf	Lcd_Out@x,c
  2821  00FCDA  0EEB               	movlw	low (STR_4+20)
  2822  00FCDC  6E41               	movwf	Lcd_Out@buffer,c
  2823  00FCDE  0EFE               	movlw	high (STR_4+20)
  2824  00FCE0  6E42               	movwf	Lcd_Out@buffer+1,c
  2825  00FCE2  0E02               	movlw	2
  2826  00FCE4  ECF7  F06F         	call	_Lcd_Out
  2827                           
  2828                           ;main.c: 516: } else if (posicion == 8) {
  2829  00FCE8  D0A8               	goto	l3617
  2830  00FCEA                     l3569:
  2831  00FCEA  0E08               	movlw	8
  2832  00FCEC  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2833  00FCEE  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2834  00FCF0  A4D8               	btfss	status,2,c
  2835  00FCF2  D025               	goto	l3581
  2836                           
  2837                           ;main.c: 517: if (i_hora_ilum_tr > 0) {
  2838  00FCF4  5047               	movf	V_ProgRiegoIlum@i_hora_ilum_tr,w,c
  2839  00FCF6  B4D8               	btfsc	status,2,c
  2840  00FCF8  D002               	goto	l3575
  2841                           
  2842                           ;main.c: 518: i_hora_ilum_tr--;
  2843  00FCFA  0647               	decf	V_ProgRiegoIlum@i_hora_ilum_tr,f,c
  2844  00FCFC  D000               	goto	l3575
  2845  00FCFE                     l3575:
  2846                           
  2847                           ;main.c: 519: }
  2848                           ;main.c: 520: sprintf(buffer1, "%02u", i_hora_ilum_tr);
  2849  00FCFE  0E8B               	movlw	low _buffer1
  2850  00FD00  6E0D               	movwf	sprintf@sp,c
  2851  00FD02  0E00               	movlw	high _buffer1
  2852  00FD04  6E0E               	movwf	sprintf@sp+1,c
  2853  00FD06  0EC2               	movlw	low (STR_34+10)
  2854  00FD08  6E0F               	movwf	sprintf@f,c
  2855  00FD0A  0EFF               	movlw	high (STR_34+10)
  2856  00FD0C  6E10               	movwf	sprintf@f+1,c
  2857  00FD0E  C047  F011         	movff	V_ProgRiegoIlum@i_hora_ilum_tr,?_sprintf+4
  2858  00FD12  6A12               	clrf	?_sprintf+5,c
  2859  00FD14  EC97  F076         	call	_sprintf	;wreg free
  2860                           
  2861                           ;main.c: 521: Lcd_Out(4, 5, buffer1);
  2862  00FD18  0E05               	movlw	5
  2863  00FD1A  6E40               	movwf	Lcd_Out@x,c
  2864  00FD1C  0E8B               	movlw	low _buffer1
  2865  00FD1E  6E41               	movwf	Lcd_Out@buffer,c
  2866  00FD20  0E00               	movlw	high _buffer1
  2867  00FD22  6E42               	movwf	Lcd_Out@buffer+1,c
  2868  00FD24  0E04               	movlw	4
  2869  00FD26  ECF7  F06F         	call	_Lcd_Out
  2870                           
  2871                           ;main.c: 522: Lcd_Out(4, 5, "");
  2872  00FD2A  0E05               	movlw	5
  2873  00FD2C  6E40               	movwf	Lcd_Out@x,c
  2874  00FD2E  0EEB               	movlw	low (STR_4+20)
  2875  00FD30  6E41               	movwf	Lcd_Out@buffer,c
  2876  00FD32  0EFE               	movlw	high (STR_4+20)
  2877  00FD34  6E42               	movwf	Lcd_Out@buffer+1,c
  2878  00FD36  0E04               	movlw	4
  2879  00FD38  ECF7  F06F         	call	_Lcd_Out
  2880                           
  2881                           ;main.c: 523: } else if (posicion == 10) {
  2882  00FD3C  D07E               	goto	l3617
  2883  00FD3E                     l3581:
  2884  00FD3E  0E0A               	movlw	10
  2885  00FD40  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2886  00FD42  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2887  00FD44  A4D8               	btfss	status,2,c
  2888  00FD46  D025               	goto	l3593
  2889                           
  2890                           ;main.c: 524: if (i_min_ilum_tr > 0) {
  2891  00FD48  5048               	movf	V_ProgRiegoIlum@i_min_ilum_tr,w,c
  2892  00FD4A  B4D8               	btfsc	status,2,c
  2893  00FD4C  D002               	goto	l3587
  2894                           
  2895                           ;main.c: 525: i_min_ilum_tr--;
  2896  00FD4E  0648               	decf	V_ProgRiegoIlum@i_min_ilum_tr,f,c
  2897  00FD50  D000               	goto	l3587
  2898  00FD52                     l3587:
  2899                           
  2900                           ;main.c: 526: }
  2901                           ;main.c: 527: sprintf(buffer1, "%02u", i_min_ilum_tr);
  2902  00FD52  0E8B               	movlw	low _buffer1
  2903  00FD54  6E0D               	movwf	sprintf@sp,c
  2904  00FD56  0E00               	movlw	high _buffer1
  2905  00FD58  6E0E               	movwf	sprintf@sp+1,c
  2906  00FD5A  0EC2               	movlw	low (STR_34+10)
  2907  00FD5C  6E0F               	movwf	sprintf@f,c
  2908  00FD5E  0EFF               	movlw	high (STR_34+10)
  2909  00FD60  6E10               	movwf	sprintf@f+1,c
  2910  00FD62  C048  F011         	movff	V_ProgRiegoIlum@i_min_ilum_tr,?_sprintf+4
  2911  00FD66  6A12               	clrf	?_sprintf+5,c
  2912  00FD68  EC97  F076         	call	_sprintf	;wreg free
  2913                           
  2914                           ;main.c: 528: Lcd_Out(4, 8, buffer1);
  2915  00FD6C  0E08               	movlw	8
  2916  00FD6E  6E40               	movwf	Lcd_Out@x,c
  2917  00FD70  0E8B               	movlw	low _buffer1
  2918  00FD72  6E41               	movwf	Lcd_Out@buffer,c
  2919  00FD74  0E00               	movlw	high _buffer1
  2920  00FD76  6E42               	movwf	Lcd_Out@buffer+1,c
  2921  00FD78  0E04               	movlw	4
  2922  00FD7A  ECF7  F06F         	call	_Lcd_Out
  2923                           
  2924                           ;main.c: 529: Lcd_Out(4, 8, "");
  2925  00FD7E  0E08               	movlw	8
  2926  00FD80  6E40               	movwf	Lcd_Out@x,c
  2927  00FD82  0EEB               	movlw	low (STR_4+20)
  2928  00FD84  6E41               	movwf	Lcd_Out@buffer,c
  2929  00FD86  0EFE               	movlw	high (STR_4+20)
  2930  00FD88  6E42               	movwf	Lcd_Out@buffer+1,c
  2931  00FD8A  0E04               	movlw	4
  2932  00FD8C  ECF7  F06F         	call	_Lcd_Out
  2933                           
  2934                           ;main.c: 530: } else if (posicion == 12) {
  2935  00FD90  D054               	goto	l3617
  2936  00FD92                     l3593:
  2937  00FD92  0E0C               	movlw	12
  2938  00FD94  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2939  00FD96  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2940  00FD98  A4D8               	btfss	status,2,c
  2941  00FD9A  D025               	goto	l3605
  2942                           
  2943                           ;main.c: 531: if (d_hora_ilum_tr > 0) {
  2944  00FD9C  5049               	movf	V_ProgRiegoIlum@d_hora_ilum_tr,w,c
  2945  00FD9E  B4D8               	btfsc	status,2,c
  2946  00FDA0  D002               	goto	l3599
  2947                           
  2948                           ;main.c: 532: d_hora_ilum_tr--;
  2949  00FDA2  0649               	decf	V_ProgRiegoIlum@d_hora_ilum_tr,f,c
  2950  00FDA4  D000               	goto	l3599
  2951  00FDA6                     l3599:
  2952                           
  2953                           ;main.c: 533: }
  2954                           ;main.c: 534: sprintf(buffer1, "%02u", d_hora_ilum_tr);
  2955  00FDA6  0E8B               	movlw	low _buffer1
  2956  00FDA8  6E0D               	movwf	sprintf@sp,c
  2957  00FDAA  0E00               	movlw	high _buffer1
  2958  00FDAC  6E0E               	movwf	sprintf@sp+1,c
  2959  00FDAE  0EC2               	movlw	low (STR_34+10)
  2960  00FDB0  6E0F               	movwf	sprintf@f,c
  2961  00FDB2  0EFF               	movlw	high (STR_34+10)
  2962  00FDB4  6E10               	movwf	sprintf@f+1,c
  2963  00FDB6  C049  F011         	movff	V_ProgRiegoIlum@d_hora_ilum_tr,?_sprintf+4
  2964  00FDBA  6A12               	clrf	?_sprintf+5,c
  2965  00FDBC  EC97  F076         	call	_sprintf	;wreg free
  2966                           
  2967                           ;main.c: 535: Lcd_Out(4, 15, buffer1);
  2968  00FDC0  0E0F               	movlw	15
  2969  00FDC2  6E40               	movwf	Lcd_Out@x,c
  2970  00FDC4  0E8B               	movlw	low _buffer1
  2971  00FDC6  6E41               	movwf	Lcd_Out@buffer,c
  2972  00FDC8  0E00               	movlw	high _buffer1
  2973  00FDCA  6E42               	movwf	Lcd_Out@buffer+1,c
  2974  00FDCC  0E04               	movlw	4
  2975  00FDCE  ECF7  F06F         	call	_Lcd_Out
  2976                           
  2977                           ;main.c: 536: Lcd_Out(4, 15, "");
  2978  00FDD2  0E0F               	movlw	15
  2979  00FDD4  6E40               	movwf	Lcd_Out@x,c
  2980  00FDD6  0EEB               	movlw	low (STR_4+20)
  2981  00FDD8  6E41               	movwf	Lcd_Out@buffer,c
  2982  00FDDA  0EFE               	movlw	high (STR_4+20)
  2983  00FDDC  6E42               	movwf	Lcd_Out@buffer+1,c
  2984  00FDDE  0E04               	movlw	4
  2985  00FDE0  ECF7  F06F         	call	_Lcd_Out
  2986                           
  2987                           ;main.c: 537: } else if (posicion == 14) {
  2988  00FDE4  D02A               	goto	l3617
  2989  00FDE6                     l3605:
  2990  00FDE6  0E0E               	movlw	14
  2991  00FDE8  184F               	xorwf	V_ProgRiegoIlum@posicion,w,c
  2992  00FDEA  1050               	iorwf	V_ProgRiegoIlum@posicion+1,w,c
  2993  00FDEC  A4D8               	btfss	status,2,c
  2994  00FDEE  D025               	goto	l3617
  2995                           
  2996                           ;main.c: 538: if (d_min_ilum_tr > 0) {
  2997  00FDF0  504A               	movf	V_ProgRiegoIlum@d_min_ilum_tr,w,c
  2998  00FDF2  B4D8               	btfsc	status,2,c
  2999  00FDF4  D002               	goto	l3611
  3000                           
  3001                           ;main.c: 539: d_min_ilum_tr--;
  3002  00FDF6  064A               	decf	V_ProgRiegoIlum@d_min_ilum_tr,f,c
  3003  00FDF8  D000               	goto	l3611
  3004  00FDFA                     l3611:
  3005                           
  3006                           ;main.c: 540: }
  3007                           ;main.c: 541: sprintf(buffer1, "%02u", d_min_ilum_tr);
  3008  00FDFA  0E8B               	movlw	low _buffer1
  3009  00FDFC  6E0D               	movwf	sprintf@sp,c
  3010  00FDFE  0E00               	movlw	high _buffer1
  3011  00FE00  6E0E               	movwf	sprintf@sp+1,c
  3012  00FE02  0EC2               	movlw	low (STR_34+10)
  3013  00FE04  6E0F               	movwf	sprintf@f,c
  3014  00FE06  0EFF               	movlw	high (STR_34+10)
  3015  00FE08  6E10               	movwf	sprintf@f+1,c
  3016  00FE0A  C04A  F011         	movff	V_ProgRiegoIlum@d_min_ilum_tr,?_sprintf+4
  3017  00FE0E  6A12               	clrf	?_sprintf+5,c
  3018  00FE10  EC97  F076         	call	_sprintf	;wreg free
  3019                           
  3020                           ;main.c: 542: Lcd_Out(4, 18, buffer1);
  3021  00FE14  0E12               	movlw	18
  3022  00FE16  6E40               	movwf	Lcd_Out@x,c
  3023  00FE18  0E8B               	movlw	low _buffer1
  3024  00FE1A  6E41               	movwf	Lcd_Out@buffer,c
  3025  00FE1C  0E00               	movlw	high _buffer1
  3026  00FE1E  6E42               	movwf	Lcd_Out@buffer+1,c
  3027  00FE20  0E04               	movlw	4
  3028  00FE22  ECF7  F06F         	call	_Lcd_Out
  3029                           
  3030                           ;main.c: 543: Lcd_Out(4, 18, "");
  3031  00FE26  0E12               	movlw	18
  3032  00FE28  6E40               	movwf	Lcd_Out@x,c
  3033  00FE2A  0EEB               	movlw	low (STR_4+20)
  3034  00FE2C  6E41               	movwf	Lcd_Out@buffer,c
  3035  00FE2E  0EFE               	movlw	high (STR_4+20)
  3036  00FE30  6E42               	movwf	Lcd_Out@buffer+1,c
  3037  00FE32  0E04               	movlw	4
  3038  00FE34  ECF7  F06F         	call	_Lcd_Out
  3039  00FE38  D000               	goto	l3617
  3040  00FE3A                     l3617:
  3041                           
  3042                           ;main.c: 544: }
  3043                           ;main.c: 545: }
  3044                           ;main.c: 548: if (Sw_Center = PORTAbits.RA5 == 0) {
  3045  00FE3A  BA80               	btfsc	3968,5,c	;volatile
  3046  00FE3C  D002               	goto	u3650
  3047  00FE3E  0E01               	movlw	1
  3048  00FE40  D001               	goto	u3660
  3049  00FE42                     u3650:
  3050  00FE42  0E00               	movlw	0
  3051  00FE44                     u3660:
  3052  00FE44  0100               	movlb	0	; () banked
  3053  00FE46  6F85               	movwf	_Sw_Center& (0+255),b
  3054  00FE48  0100               	movlb	0	; () banked
  3055  00FE4A  5185               	movf	_Sw_Center& (0+255),w,b
  3056  00FE4C  B4D8               	btfsc	status,2,c
  3057  00FE4E  D013               	goto	l3623
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;main.c: 549: inicio_hora_ilum = i_hora_ilum_tr;
  3061  00FE50  C047  F058         	movff	V_ProgRiegoIlum@i_hora_ilum_tr,_inicio_hora_ilum
  3062                           
  3063                           ;main.c: 550: inicio_min_ilum = i_min_ilum_tr;
  3064  00FE54  C048  F05A         	movff	V_ProgRiegoIlum@i_min_ilum_tr,_inicio_min_ilum
  3065                           
  3066                           ;main.c: 551: fin_hora_ilum = d_hora_ilum_tr;
  3067  00FE58  C049  F05C         	movff	V_ProgRiegoIlum@d_hora_ilum_tr,_fin_hora_ilum
  3068                           
  3069                           ;main.c: 552: fin_min_ilum = d_min_ilum_tr;
  3070  00FE5C  C04A  F05E         	movff	V_ProgRiegoIlum@d_min_ilum_tr,_fin_min_ilum
  3071                           
  3072                           ;main.c: 553: inicio_hora_riego = i_hora_riego_tr;
  3073  00FE60  C04B  F059         	movff	V_ProgRiegoIlum@i_hora_riego_tr,_inicio_hora_riego
  3074                           
  3075                           ;main.c: 554: inicio_min_riego = i_min_riego_tr;
  3076  00FE64  C04C  F05B         	movff	V_ProgRiegoIlum@i_min_riego_tr,_inicio_min_riego
  3077                           
  3078                           ;main.c: 555: fin_hora_riego = d_hora_riego_tr;
  3079  00FE68  C04D  F05D         	movff	V_ProgRiegoIlum@d_hora_riego_tr,_fin_hora_riego
  3080                           
  3081                           ;main.c: 556: fin_min_riego = d_min_riego_tr;
  3082  00FE6C  C04E  F05F         	movff	V_ProgRiegoIlum@d_min_riego_tr,_fin_min_riego
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;main.c: 557: Write_RTC();
  3086  00FE70  ECF1  F074         	call	_Write_RTC	;wreg free
  3087                           
  3088                           ;main.c: 558: break;
  3089  00FE74  D00B               	goto	l3627
  3090  00FE76                     l3623:
  3091  00FE76  0100               	movlb	0	; () banked
  3092  00FE78  4B7E               	infsnz	_i& (0+255),f,b
  3093  00FE7A  2B7F               	incf	(_i+1)& (0+255),f,b
  3094                           
  3095                           ; BSR set to: 0
  3096  00FE7C  0100               	movlb	0	; () banked
  3097  00FE7E  BF7F               	btfsc	(_i+1)& (0+255),7,b
  3098  00FE80  D494               	goto	l3395
  3099  00FE82  0100               	movlb	0	; () banked
  3100  00FE84  517F               	movf	(_i+1)& (0+255),w,b
  3101  00FE86  E102               	bnz	l3627
  3102  00FE88  D489               	goto	L1
  3103  00FE8A  D000               	goto	l3627
  3104  00FE8C                     l3627:
  3105                           
  3106                           ;main.c: 559: }
  3107                           ;main.c: 560: }
  3108                           ;main.c: 561: Lcd_Cmd(12);
  3109  00FE8C  0E0C               	movlw	12
  3110  00FE8E  EC8D  F072         	call	_Lcd_Cmd
  3111  00FE92  0012               	return		;funcret
  3112  00FE94                     __end_of_V_ProgRiegoIlum:
  3113                           	opt stack 0
  3114                           tblptru	equ	0xFF8
  3115                           tblptrh	equ	0xFF7
  3116                           tblptrl	equ	0xFF6
  3117                           tablat	equ	0xFF5
  3118                           postinc0	equ	0xFEE
  3119                           wreg	equ	0xFE8
  3120                           postdec1	equ	0xFE5
  3121                           fsr1l	equ	0xFE1
  3122                           indf2	equ	0xFDF
  3123                           fsr2h	equ	0xFDA
  3124                           fsr2l	equ	0xFD9
  3125                           status	equ	0xFD8
  3126                           
  3127 ;; *************** function _V_ProgReloj *****************
  3128 ;; Defined at:
  3129 ;;		line 236 in file "../main.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  posicion        2   76[COMRAM] int 
  3134 ;;  minuto_tr       1   75[COMRAM] unsigned char 
  3135 ;;  hora_tr         1   74[COMRAM] unsigned char 
  3136 ;;  anio_tr         1   73[COMRAM] unsigned char 
  3137 ;;  mes_tr          1   72[COMRAM] unsigned char 
  3138 ;;  dia_tr          1   71[COMRAM] unsigned char 
  3139 ;;  diasem_tr       1   70[COMRAM] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;		None               void
  3142 ;; Registers used:
  3143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3150 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3152 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3153 ;;Total ram usage:       10 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    3
  3156 ;; This function calls:
  3157 ;;		_Convert_diasem
  3158 ;;		_Lcd_Cmd
  3159 ;;		_Lcd_Out
  3160 ;;		_Write_RTC
  3161 ;;		_sprintf
  3162 ;; This function is called by:
  3163 ;;		_main
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text4
  3168  00F068                     __ptext4:
  3169                           	opt stack 0
  3170  00F068                     _V_ProgReloj:
  3171                           	opt stack 27
  3172                           
  3173                           ;main.c: 237: Lcd_Out(1, 0, "Program del reloj");
  3174                           
  3175                           ;incstack = 0
  3176  00F068  0E00               	movlw	0
  3177  00F06A  6E40               	movwf	Lcd_Out@x,c
  3178  00F06C  0EA6               	movlw	low STR_7
  3179  00F06E  6E41               	movwf	Lcd_Out@buffer,c
  3180  00F070  0EFF               	movlw	high STR_7
  3181  00F072  6E42               	movwf	Lcd_Out@buffer+1,c
  3182  00F074  0E01               	movlw	1
  3183  00F076  ECF7  F06F         	call	_Lcd_Out
  3184                           
  3185                           ;main.c: 239: char diasem_tr = diasem;
  3186  00F07A  C07C  F047         	movff	_diasem,V_ProgReloj@diasem_tr
  3187                           
  3188                           ;main.c: 240: char dia_tr = dia;
  3189  00F07E  C0E5  F048         	movff	_dia,V_ProgReloj@dia_tr
  3190                           
  3191                           ;main.c: 241: char mes_tr = mes;
  3192  00F082  C0E7  F049         	movff	_mes,V_ProgReloj@mes_tr
  3193                           
  3194                           ;main.c: 242: char anio_tr = anio;
  3195  00F086  C052  F04A         	movff	_anio,V_ProgReloj@anio_tr
  3196                           
  3197                           ;main.c: 243: char hora_tr = hora;
  3198  00F08A  C054  F04B         	movff	_hora,V_ProgReloj@hora_tr
  3199                           
  3200                           ;main.c: 244: char minuto_tr = minuto;
  3201  00F08E  C056  F04C         	movff	_minuto,V_ProgReloj@minuto_tr
  3202                           
  3203                           ;main.c: 245: int posicion = 0;
  3204  00F092  0E00               	movlw	0
  3205  00F094  6E4E               	movwf	V_ProgReloj@posicion+1,c
  3206  00F096  0E00               	movlw	0
  3207  00F098  6E4D               	movwf	V_ProgReloj@posicion,c
  3208                           
  3209                           ;main.c: 246: Lcd_Cmd(14);
  3210  00F09A  0E0E               	movlw	14
  3211  00F09C  EC8D  F072         	call	_Lcd_Cmd
  3212                           
  3213                           ;main.c: 247: Lcd_Out(2, 0, "");
  3214  00F0A0  0E00               	movlw	0
  3215  00F0A2  6E40               	movwf	Lcd_Out@x,c
  3216  00F0A4  0EEB               	movlw	low (STR_4+20)
  3217  00F0A6  6E41               	movwf	Lcd_Out@buffer,c
  3218  00F0A8  0EFE               	movlw	high (STR_4+20)
  3219  00F0AA  6E42               	movwf	Lcd_Out@buffer+1,c
  3220  00F0AC  0E02               	movlw	2
  3221  00F0AE  ECF7  F06F         	call	_Lcd_Out
  3222                           
  3223                           ;main.c: 249: for (i = 0; i < 30; i++) {
  3224  00F0B2  0E00               	movlw	0
  3225  00F0B4  0100               	movlb	0	; () banked
  3226  00F0B6  6F7F               	movwf	(_i+1)& (0+255),b
  3227  00F0B8  0E00               	movlw	0
  3228  00F0BA  6F7E               	movwf	_i& (0+255),b
  3229                           
  3230                           ; BSR set to: 0
  3231  00F0BC  0100               	movlb	0	; () banked
  3232  00F0BE  BF7F               	btfsc	(_i+1)& (0+255),7,b
  3233  00F0C0  D00A               	goto	l3171
  3234  00F0C2  0100               	movlb	0	; () banked
  3235  00F0C4  517F               	movf	(_i+1)& (0+255),w,b
  3236  00F0C6  E106               	bnz	u2750
  3237  00F0C8  0E1E               	movlw	30
  3238  00F0CA  0100               	movlb	0	; () banked
  3239  00F0CC  5D7E               	subwf	_i& (0+255),w,b
  3240  00F0CE  B0D8               	btfsc	status,0,c
  3241  00F0D0  D2C0               	goto	l3351
  3242  00F0D2  D001               	goto	l3171
  3243  00F0D4                     u2750:
  3244                           
  3245                           ; BSR set to: 0
  3246  00F0D4  D2BE               	goto	l3351
  3247  00F0D6                     l3171:
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;main.c: 250: _delay((unsigned long)((90)*(8000000/4000.0)));
  3251  00F0D6  0EEA               	movlw	234
  3252  00F0D8  6E45               	movwf	??_V_ProgReloj& (0+255),c
  3253  00F0DA  0EC3               	movlw	195
  3254  00F0DC                     u3947:
  3255  00F0DC  2EE8               	decfsz	wreg,f,c
  3256  00F0DE  D7FE               	goto	u3947
  3257  00F0E0  2E45               	decfsz	??_V_ProgReloj& (0+255),f,c
  3258  00F0E2  D7FC               	goto	u3947
  3259  00F0E4  F000               	nop	
  3260                           
  3261                           ;main.c: 252: if (Sw_Up = PORTAbits.RA3 == 0) {
  3262  00F0E6  B680               	btfsc	3968,3,c	;volatile
  3263  00F0E8  D002               	goto	u2760
  3264  00F0EA  0E01               	movlw	1
  3265  00F0EC  D001               	goto	u2770
  3266  00F0EE                     u2760:
  3267  00F0EE  0E00               	movlw	0
  3268  00F0F0                     u2770:
  3269  00F0F0  0100               	movlb	0	; () banked
  3270  00F0F2  6F89               	movwf	_Sw_Up& (0+255),b
  3271  00F0F4  0100               	movlb	0	; () banked
  3272  00F0F6  5189               	movf	_Sw_Up& (0+255),w,b
  3273  00F0F8  B4D8               	btfsc	status,2,c
  3274  00F0FA  D0F8               	goto	l3247
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;main.c: 253: i = 0;
  3278  00F0FC  0E00               	movlw	0
  3279  00F0FE  0100               	movlb	0	; () banked
  3280  00F100  6F7F               	movwf	(_i+1)& (0+255),b
  3281  00F102  0E00               	movlw	0
  3282  00F104  6F7E               	movwf	_i& (0+255),b
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;main.c: 254: if (posicion == 0) {
  3286  00F106  504D               	movf	V_ProgReloj@posicion,w,c
  3287  00F108  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3288  00F10A  A4D8               	btfss	status,2,c
  3289  00F10C  D01D               	goto	l3187
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;main.c: 255: if (diasem_tr < 6) {
  3293  00F10E  0E06               	movlw	6
  3294  00F110  6047               	cpfslt	V_ProgReloj@diasem_tr,c
  3295  00F112  D002               	goto	l3183
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;main.c: 256: diasem_tr++;
  3299  00F114  2A47               	incf	V_ProgReloj@diasem_tr,f,c
  3300  00F116  D000               	goto	l3183
  3301  00F118                     l3183:
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;main.c: 257: }
  3305                           ;main.c: 258: Lcd_Out(2, 0, Convert_diasem(diasem_tr));
  3306  00F118  0E00               	movlw	0
  3307  00F11A  6E40               	movwf	Lcd_Out@x,c
  3308  00F11C  C047  F028         	movff	V_ProgReloj@diasem_tr,Convert_diasem@dia
  3309  00F120  6A29               	clrf	Convert_diasem@dia+1,c
  3310  00F122  ECFE  F071         	call	_Convert_diasem	;wreg free
  3311  00F126  C028  F041         	movff	?_Convert_diasem,Lcd_Out@buffer
  3312  00F12A  C029  F042         	movff	?_Convert_diasem+1,Lcd_Out@buffer+1
  3313  00F12E  0E02               	movlw	2
  3314  00F130  ECF7  F06F         	call	_Lcd_Out
  3315                           
  3316                           ;main.c: 259: Lcd_Out(2, 0, "");
  3317  00F134  0E00               	movlw	0
  3318  00F136  6E40               	movwf	Lcd_Out@x,c
  3319  00F138  0EEB               	movlw	low (STR_4+20)
  3320  00F13A  6E41               	movwf	Lcd_Out@buffer,c
  3321  00F13C  0EFE               	movlw	high (STR_4+20)
  3322  00F13E  6E42               	movwf	Lcd_Out@buffer+1,c
  3323  00F140  0E02               	movlw	2
  3324  00F142  ECF7  F06F         	call	_Lcd_Out
  3325                           
  3326                           ;main.c: 260: } else if (posicion == 2) {
  3327  00F146  D0D2               	goto	l3247
  3328  00F148                     l3187:
  3329  00F148  0E02               	movlw	2
  3330  00F14A  184D               	xorwf	V_ProgReloj@posicion,w,c
  3331  00F14C  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3332  00F14E  A4D8               	btfss	status,2,c
  3333  00F150  D025               	goto	l3199
  3334                           
  3335                           ;main.c: 261: if (dia_tr < 31) {
  3336  00F152  0E1F               	movlw	31
  3337  00F154  6048               	cpfslt	V_ProgReloj@dia_tr,c
  3338  00F156  D002               	goto	l3193
  3339                           
  3340                           ;main.c: 262: dia_tr++;
  3341  00F158  2A48               	incf	V_ProgReloj@dia_tr,f,c
  3342  00F15A  D000               	goto	l3193
  3343  00F15C                     l3193:
  3344                           
  3345                           ;main.c: 263: }
  3346                           ;main.c: 264: sprintf(buffer1, "%02u", dia_tr);
  3347  00F15C  0E8B               	movlw	low _buffer1
  3348  00F15E  6E0D               	movwf	sprintf@sp,c
  3349  00F160  0E00               	movlw	high _buffer1
  3350  00F162  6E0E               	movwf	sprintf@sp+1,c
  3351  00F164  0EC2               	movlw	low (STR_34+10)
  3352  00F166  6E0F               	movwf	sprintf@f,c
  3353  00F168  0EFF               	movlw	high (STR_34+10)
  3354  00F16A  6E10               	movwf	sprintf@f+1,c
  3355  00F16C  C048  F011         	movff	V_ProgReloj@dia_tr,?_sprintf+4
  3356  00F170  6A12               	clrf	?_sprintf+5,c
  3357  00F172  EC97  F076         	call	_sprintf	;wreg free
  3358                           
  3359                           ;main.c: 265: Lcd_Out(3, 0, buffer1);
  3360  00F176  0E00               	movlw	0
  3361  00F178  6E40               	movwf	Lcd_Out@x,c
  3362  00F17A  0E8B               	movlw	low _buffer1
  3363  00F17C  6E41               	movwf	Lcd_Out@buffer,c
  3364  00F17E  0E00               	movlw	high _buffer1
  3365  00F180  6E42               	movwf	Lcd_Out@buffer+1,c
  3366  00F182  0E03               	movlw	3
  3367  00F184  ECF7  F06F         	call	_Lcd_Out
  3368                           
  3369                           ;main.c: 266: Lcd_Out(3, 0, "");
  3370  00F188  0E00               	movlw	0
  3371  00F18A  6E40               	movwf	Lcd_Out@x,c
  3372  00F18C  0EEB               	movlw	low (STR_4+20)
  3373  00F18E  6E41               	movwf	Lcd_Out@buffer,c
  3374  00F190  0EFE               	movlw	high (STR_4+20)
  3375  00F192  6E42               	movwf	Lcd_Out@buffer+1,c
  3376  00F194  0E03               	movlw	3
  3377  00F196  ECF7  F06F         	call	_Lcd_Out
  3378                           
  3379                           ;main.c: 267: } else if (posicion == 4) {
  3380  00F19A  D0A8               	goto	l3247
  3381  00F19C                     l3199:
  3382  00F19C  0E04               	movlw	4
  3383  00F19E  184D               	xorwf	V_ProgReloj@posicion,w,c
  3384  00F1A0  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3385  00F1A2  A4D8               	btfss	status,2,c
  3386  00F1A4  D025               	goto	l3211
  3387                           
  3388                           ;main.c: 268: if (mes_tr < 12) {
  3389  00F1A6  0E0C               	movlw	12
  3390  00F1A8  6049               	cpfslt	V_ProgReloj@mes_tr,c
  3391  00F1AA  D002               	goto	l3205
  3392                           
  3393                           ;main.c: 269: mes_tr++;
  3394  00F1AC  2A49               	incf	V_ProgReloj@mes_tr,f,c
  3395  00F1AE  D000               	goto	l3205
  3396  00F1B0                     l3205:
  3397                           
  3398                           ;main.c: 270: }
  3399                           ;main.c: 271: sprintf(buffer1, "%02u", mes_tr);
  3400  00F1B0  0E8B               	movlw	low _buffer1
  3401  00F1B2  6E0D               	movwf	sprintf@sp,c
  3402  00F1B4  0E00               	movlw	high _buffer1
  3403  00F1B6  6E0E               	movwf	sprintf@sp+1,c
  3404  00F1B8  0EC2               	movlw	low (STR_34+10)
  3405  00F1BA  6E0F               	movwf	sprintf@f,c
  3406  00F1BC  0EFF               	movlw	high (STR_34+10)
  3407  00F1BE  6E10               	movwf	sprintf@f+1,c
  3408  00F1C0  C049  F011         	movff	V_ProgReloj@mes_tr,?_sprintf+4
  3409  00F1C4  6A12               	clrf	?_sprintf+5,c
  3410  00F1C6  EC97  F076         	call	_sprintf	;wreg free
  3411                           
  3412                           ;main.c: 272: Lcd_Out(3, 3, buffer1);
  3413  00F1CA  0E03               	movlw	3
  3414  00F1CC  6E40               	movwf	Lcd_Out@x,c
  3415  00F1CE  0E8B               	movlw	low _buffer1
  3416  00F1D0  6E41               	movwf	Lcd_Out@buffer,c
  3417  00F1D2  0E00               	movlw	high _buffer1
  3418  00F1D4  6E42               	movwf	Lcd_Out@buffer+1,c
  3419  00F1D6  0E03               	movlw	3
  3420  00F1D8  ECF7  F06F         	call	_Lcd_Out
  3421                           
  3422                           ;main.c: 273: Lcd_Out(3, 3, "");
  3423  00F1DC  0E03               	movlw	3
  3424  00F1DE  6E40               	movwf	Lcd_Out@x,c
  3425  00F1E0  0EEB               	movlw	low (STR_4+20)
  3426  00F1E2  6E41               	movwf	Lcd_Out@buffer,c
  3427  00F1E4  0EFE               	movlw	high (STR_4+20)
  3428  00F1E6  6E42               	movwf	Lcd_Out@buffer+1,c
  3429  00F1E8  0E03               	movlw	3
  3430  00F1EA  ECF7  F06F         	call	_Lcd_Out
  3431                           
  3432                           ;main.c: 274: } else if (posicion == 6) {
  3433  00F1EE  D07E               	goto	l3247
  3434  00F1F0                     l3211:
  3435  00F1F0  0E06               	movlw	6
  3436  00F1F2  184D               	xorwf	V_ProgReloj@posicion,w,c
  3437  00F1F4  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3438  00F1F6  A4D8               	btfss	status,2,c
  3439  00F1F8  D025               	goto	l3223
  3440                           
  3441                           ;main.c: 275: if (anio_tr < 99) {
  3442  00F1FA  0E63               	movlw	99
  3443  00F1FC  604A               	cpfslt	V_ProgReloj@anio_tr,c
  3444  00F1FE  D002               	goto	l3217
  3445                           
  3446                           ;main.c: 276: anio_tr++;
  3447  00F200  2A4A               	incf	V_ProgReloj@anio_tr,f,c
  3448  00F202  D000               	goto	l3217
  3449  00F204                     l3217:
  3450                           
  3451                           ;main.c: 277: }
  3452                           ;main.c: 278: sprintf(buffer1, "%02u", anio_tr);
  3453  00F204  0E8B               	movlw	low _buffer1
  3454  00F206  6E0D               	movwf	sprintf@sp,c
  3455  00F208  0E00               	movlw	high _buffer1
  3456  00F20A  6E0E               	movwf	sprintf@sp+1,c
  3457  00F20C  0EC2               	movlw	low (STR_34+10)
  3458  00F20E  6E0F               	movwf	sprintf@f,c
  3459  00F210  0EFF               	movlw	high (STR_34+10)
  3460  00F212  6E10               	movwf	sprintf@f+1,c
  3461  00F214  C04A  F011         	movff	V_ProgReloj@anio_tr,?_sprintf+4
  3462  00F218  6A12               	clrf	?_sprintf+5,c
  3463  00F21A  EC97  F076         	call	_sprintf	;wreg free
  3464                           
  3465                           ;main.c: 279: Lcd_Out(3, 6, buffer1);
  3466  00F21E  0E06               	movlw	6
  3467  00F220  6E40               	movwf	Lcd_Out@x,c
  3468  00F222  0E8B               	movlw	low _buffer1
  3469  00F224  6E41               	movwf	Lcd_Out@buffer,c
  3470  00F226  0E00               	movlw	high _buffer1
  3471  00F228  6E42               	movwf	Lcd_Out@buffer+1,c
  3472  00F22A  0E03               	movlw	3
  3473  00F22C  ECF7  F06F         	call	_Lcd_Out
  3474                           
  3475                           ;main.c: 280: Lcd_Out(3, 6, "");
  3476  00F230  0E06               	movlw	6
  3477  00F232  6E40               	movwf	Lcd_Out@x,c
  3478  00F234  0EEB               	movlw	low (STR_4+20)
  3479  00F236  6E41               	movwf	Lcd_Out@buffer,c
  3480  00F238  0EFE               	movlw	high (STR_4+20)
  3481  00F23A  6E42               	movwf	Lcd_Out@buffer+1,c
  3482  00F23C  0E03               	movlw	3
  3483  00F23E  ECF7  F06F         	call	_Lcd_Out
  3484                           
  3485                           ;main.c: 281: } else if (posicion == 8) {
  3486  00F242  D054               	goto	l3247
  3487  00F244                     l3223:
  3488  00F244  0E08               	movlw	8
  3489  00F246  184D               	xorwf	V_ProgReloj@posicion,w,c
  3490  00F248  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3491  00F24A  A4D8               	btfss	status,2,c
  3492  00F24C  D025               	goto	l3235
  3493                           
  3494                           ;main.c: 282: if (hora_tr < 23) {
  3495  00F24E  0E17               	movlw	23
  3496  00F250  604B               	cpfslt	V_ProgReloj@hora_tr,c
  3497  00F252  D002               	goto	l3229
  3498                           
  3499                           ;main.c: 283: hora_tr++;
  3500  00F254  2A4B               	incf	V_ProgReloj@hora_tr,f,c
  3501  00F256  D000               	goto	l3229
  3502  00F258                     l3229:
  3503                           
  3504                           ;main.c: 284: }
  3505                           ;main.c: 285: sprintf(buffer1, "%02u", hora_tr);
  3506  00F258  0E8B               	movlw	low _buffer1
  3507  00F25A  6E0D               	movwf	sprintf@sp,c
  3508  00F25C  0E00               	movlw	high _buffer1
  3509  00F25E  6E0E               	movwf	sprintf@sp+1,c
  3510  00F260  0EC2               	movlw	low (STR_34+10)
  3511  00F262  6E0F               	movwf	sprintf@f,c
  3512  00F264  0EFF               	movlw	high (STR_34+10)
  3513  00F266  6E10               	movwf	sprintf@f+1,c
  3514  00F268  C04B  F011         	movff	V_ProgReloj@hora_tr,?_sprintf+4
  3515  00F26C  6A12               	clrf	?_sprintf+5,c
  3516  00F26E  EC97  F076         	call	_sprintf	;wreg free
  3517                           
  3518                           ;main.c: 286: Lcd_Out(4, 0, buffer1);
  3519  00F272  0E00               	movlw	0
  3520  00F274  6E40               	movwf	Lcd_Out@x,c
  3521  00F276  0E8B               	movlw	low _buffer1
  3522  00F278  6E41               	movwf	Lcd_Out@buffer,c
  3523  00F27A  0E00               	movlw	high _buffer1
  3524  00F27C  6E42               	movwf	Lcd_Out@buffer+1,c
  3525  00F27E  0E04               	movlw	4
  3526  00F280  ECF7  F06F         	call	_Lcd_Out
  3527                           
  3528                           ;main.c: 287: Lcd_Out(4, 0, "");
  3529  00F284  0E00               	movlw	0
  3530  00F286  6E40               	movwf	Lcd_Out@x,c
  3531  00F288  0EEB               	movlw	low (STR_4+20)
  3532  00F28A  6E41               	movwf	Lcd_Out@buffer,c
  3533  00F28C  0EFE               	movlw	high (STR_4+20)
  3534  00F28E  6E42               	movwf	Lcd_Out@buffer+1,c
  3535  00F290  0E04               	movlw	4
  3536  00F292  ECF7  F06F         	call	_Lcd_Out
  3537                           
  3538                           ;main.c: 288: } else if (posicion == 10) {
  3539  00F296  D02A               	goto	l3247
  3540  00F298                     l3235:
  3541  00F298  0E0A               	movlw	10
  3542  00F29A  184D               	xorwf	V_ProgReloj@posicion,w,c
  3543  00F29C  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3544  00F29E  A4D8               	btfss	status,2,c
  3545  00F2A0  D025               	goto	l3247
  3546                           
  3547                           ;main.c: 289: if (minuto_tr < 59) {
  3548  00F2A2  0E3B               	movlw	59
  3549  00F2A4  604C               	cpfslt	V_ProgReloj@minuto_tr,c
  3550  00F2A6  D002               	goto	l3241
  3551                           
  3552                           ;main.c: 290: minuto_tr++;
  3553  00F2A8  2A4C               	incf	V_ProgReloj@minuto_tr,f,c
  3554  00F2AA  D000               	goto	l3241
  3555  00F2AC                     l3241:
  3556                           
  3557                           ;main.c: 291: }
  3558                           ;main.c: 292: sprintf(buffer1, "%02u", minuto_tr);
  3559  00F2AC  0E8B               	movlw	low _buffer1
  3560  00F2AE  6E0D               	movwf	sprintf@sp,c
  3561  00F2B0  0E00               	movlw	high _buffer1
  3562  00F2B2  6E0E               	movwf	sprintf@sp+1,c
  3563  00F2B4  0EC2               	movlw	low (STR_34+10)
  3564  00F2B6  6E0F               	movwf	sprintf@f,c
  3565  00F2B8  0EFF               	movlw	high (STR_34+10)
  3566  00F2BA  6E10               	movwf	sprintf@f+1,c
  3567  00F2BC  C04C  F011         	movff	V_ProgReloj@minuto_tr,?_sprintf+4
  3568  00F2C0  6A12               	clrf	?_sprintf+5,c
  3569  00F2C2  EC97  F076         	call	_sprintf	;wreg free
  3570                           
  3571                           ;main.c: 293: Lcd_Out(4, 3, buffer1);
  3572  00F2C6  0E03               	movlw	3
  3573  00F2C8  6E40               	movwf	Lcd_Out@x,c
  3574  00F2CA  0E8B               	movlw	low _buffer1
  3575  00F2CC  6E41               	movwf	Lcd_Out@buffer,c
  3576  00F2CE  0E00               	movlw	high _buffer1
  3577  00F2D0  6E42               	movwf	Lcd_Out@buffer+1,c
  3578  00F2D2  0E04               	movlw	4
  3579  00F2D4  ECF7  F06F         	call	_Lcd_Out
  3580                           
  3581                           ;main.c: 294: Lcd_Out(4, 3, "");
  3582  00F2D8  0E03               	movlw	3
  3583  00F2DA  6E40               	movwf	Lcd_Out@x,c
  3584  00F2DC  0EEB               	movlw	low (STR_4+20)
  3585  00F2DE  6E41               	movwf	Lcd_Out@buffer,c
  3586  00F2E0  0EFE               	movlw	high (STR_4+20)
  3587  00F2E2  6E42               	movwf	Lcd_Out@buffer+1,c
  3588  00F2E4  0E04               	movlw	4
  3589  00F2E6  ECF7  F06F         	call	_Lcd_Out
  3590  00F2EA  D000               	goto	l3247
  3591  00F2EC                     l3247:
  3592                           
  3593                           ;main.c: 295: }
  3594                           ;main.c: 296: }
  3595                           ;main.c: 298: if (Sw_Right = PORTAbits.RA2 == 0) {
  3596  00F2EC  B480               	btfsc	3968,2,c	;volatile
  3597  00F2EE  D002               	goto	u2910
  3598  00F2F0  0E01               	movlw	1
  3599  00F2F2  D001               	goto	u2920
  3600  00F2F4                     u2910:
  3601  00F2F4  0E00               	movlw	0
  3602  00F2F6                     u2920:
  3603  00F2F6  0100               	movlb	0	; () banked
  3604  00F2F8  6F88               	movwf	_Sw_Right& (0+255),b
  3605  00F2FA  0100               	movlb	0	; () banked
  3606  00F2FC  5188               	movf	_Sw_Right& (0+255),w,b
  3607  00F2FE  B4D8               	btfsc	status,2,c
  3608  00F300  D036               	goto	l3257
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;main.c: 299: if (posicion <= 9) {
  3612  00F302  BE4E               	btfsc	V_ProgReloj@posicion+1,7,c
  3613  00F304  D006               	goto	l3251
  3614  00F306  504E               	movf	V_ProgReloj@posicion+1,w,c
  3615  00F308  E109               	bnz	l3253
  3616  00F30A  0E0A               	movlw	10
  3617  00F30C  5C4D               	subwf	V_ProgReloj@posicion,w,c
  3618  00F30E  B0D8               	btfsc	status,0,c
  3619  00F310  D005               	goto	l3253
  3620  00F312                     l3251:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;main.c: 300: posicion += 2;
  3624  00F312  0E02               	movlw	2
  3625  00F314  264D               	addwf	V_ProgReloj@posicion,f,c
  3626  00F316  0E00               	movlw	0
  3627  00F318  224E               	addwfc	V_ProgReloj@posicion+1,f,c
  3628  00F31A  D000               	goto	l3253
  3629  00F31C                     l3253:
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;main.c: 301: }
  3633                           ;main.c: 302: i = 0;
  3634  00F31C  0E00               	movlw	0
  3635  00F31E  0100               	movlb	0	; () banked
  3636  00F320  6F7F               	movwf	(_i+1)& (0+255),b
  3637  00F322  0E00               	movlw	0
  3638  00F324  6F7E               	movwf	_i& (0+255),b
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;main.c: 303: Lcd_Out(posicionesLeft[posicion], posicionesLeft[posicion + 1], "");
  3642  00F326  C04D  F045         	movff	V_ProgReloj@posicion,??_V_ProgReloj
  3643  00F32A  C04E  F046         	movff	V_ProgReloj@posicion+1,??_V_ProgReloj+1
  3644  00F32E  90D8               	bcf	status,0,c
  3645  00F330  3645               	rlcf	??_V_ProgReloj,f,c
  3646  00F332  3646               	rlcf	??_V_ProgReloj+1,f,c
  3647  00F334  0E02               	movlw	2
  3648  00F336  2645               	addwf	??_V_ProgReloj,f,c
  3649  00F338  0E00               	movlw	0
  3650  00F33A  2246               	addwfc	??_V_ProgReloj+1,f,c
  3651  00F33C  0EC7               	movlw	low _posicionesLeft
  3652  00F33E  2445               	addwf	??_V_ProgReloj,w,c
  3653  00F340  6ED9               	movwf	fsr2l,c
  3654  00F342  0E00               	movlw	high _posicionesLeft
  3655  00F344  2046               	addwfc	??_V_ProgReloj+1,w,c
  3656  00F346  6EDA               	movwf	fsr2h,c
  3657  00F348  50DF               	movf	indf2,w,c
  3658  00F34A  6E40               	movwf	Lcd_Out@x,c
  3659  00F34C  0EEB               	movlw	low (STR_4+20)
  3660  00F34E  6E41               	movwf	Lcd_Out@buffer,c
  3661  00F350  0EFE               	movlw	high (STR_4+20)
  3662  00F352  6E42               	movwf	Lcd_Out@buffer+1,c
  3663  00F354  90D8               	bcf	status,0,c
  3664  00F356  344D               	rlcf	V_ProgReloj@posicion,w,c
  3665  00F358  6ED9               	movwf	fsr2l,c
  3666  00F35A  344E               	rlcf	V_ProgReloj@posicion+1,w,c
  3667  00F35C  6EDA               	movwf	fsr2h,c
  3668  00F35E  0EC7               	movlw	low _posicionesLeft
  3669  00F360  26D9               	addwf	fsr2l,f,c
  3670  00F362  0E00               	movlw	high _posicionesLeft
  3671  00F364  22DA               	addwfc	fsr2h,f,c
  3672  00F366  50DF               	movf	indf2,w,c
  3673  00F368  ECF7  F06F         	call	_Lcd_Out
  3674  00F36C  D000               	goto	l3257
  3675  00F36E                     l3257:
  3676                           
  3677                           ;main.c: 304: }
  3678                           ;main.c: 306: if (Sw_Left = PORTAbits.RA0 == 0) {
  3679  00F36E  B080               	btfsc	3968,0,c	;volatile
  3680  00F370  D002               	goto	u2950
  3681  00F372  0E01               	movlw	1
  3682  00F374  D001               	goto	u2960
  3683  00F376                     u2950:
  3684  00F376  0E00               	movlw	0
  3685  00F378                     u2960:
  3686  00F378  0100               	movlb	0	; () banked
  3687  00F37A  6F87               	movwf	_Sw_Left& (0+255),b
  3688  00F37C  0100               	movlb	0	; () banked
  3689  00F37E  5187               	movf	_Sw_Left& (0+255),w,b
  3690  00F380  B4D8               	btfsc	status,2,c
  3691  00F382  D036               	goto	l3267
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;main.c: 307: if (posicion >= 2) {
  3695  00F384  BE4E               	btfsc	V_ProgReloj@posicion+1,7,c
  3696  00F386  D00B               	goto	l3263
  3697  00F388  504E               	movf	V_ProgReloj@posicion+1,w,c
  3698  00F38A  E104               	bnz	u2980
  3699  00F38C  0E02               	movlw	2
  3700  00F38E  5C4D               	subwf	V_ProgReloj@posicion,w,c
  3701  00F390  A0D8               	btfss	status,0,c
  3702  00F392  D005               	goto	l3263
  3703  00F394                     u2980:
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;main.c: 308: posicion -= 2;
  3707  00F394  0EFE               	movlw	254
  3708  00F396  264D               	addwf	V_ProgReloj@posicion,f,c
  3709  00F398  0EFF               	movlw	255
  3710  00F39A  224E               	addwfc	V_ProgReloj@posicion+1,f,c
  3711  00F39C  D000               	goto	l3263
  3712  00F39E                     l3263:
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;main.c: 309: }
  3716                           ;main.c: 310: i = 0;
  3717  00F39E  0E00               	movlw	0
  3718  00F3A0  0100               	movlb	0	; () banked
  3719  00F3A2  6F7F               	movwf	(_i+1)& (0+255),b
  3720  00F3A4  0E00               	movlw	0
  3721  00F3A6  6F7E               	movwf	_i& (0+255),b
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;main.c: 311: Lcd_Out(posicionesLeft[posicion], posicionesLeft[posicion + 1], "");
  3725  00F3A8  C04D  F045         	movff	V_ProgReloj@posicion,??_V_ProgReloj
  3726  00F3AC  C04E  F046         	movff	V_ProgReloj@posicion+1,??_V_ProgReloj+1
  3727  00F3B0  90D8               	bcf	status,0,c
  3728  00F3B2  3645               	rlcf	??_V_ProgReloj,f,c
  3729  00F3B4  3646               	rlcf	??_V_ProgReloj+1,f,c
  3730  00F3B6  0E02               	movlw	2
  3731  00F3B8  2645               	addwf	??_V_ProgReloj,f,c
  3732  00F3BA  0E00               	movlw	0
  3733  00F3BC  2246               	addwfc	??_V_ProgReloj+1,f,c
  3734  00F3BE  0EC7               	movlw	low _posicionesLeft
  3735  00F3C0  2445               	addwf	??_V_ProgReloj,w,c
  3736  00F3C2  6ED9               	movwf	fsr2l,c
  3737  00F3C4  0E00               	movlw	high _posicionesLeft
  3738  00F3C6  2046               	addwfc	??_V_ProgReloj+1,w,c
  3739  00F3C8  6EDA               	movwf	fsr2h,c
  3740  00F3CA  50DF               	movf	indf2,w,c
  3741  00F3CC  6E40               	movwf	Lcd_Out@x,c
  3742  00F3CE  0EEB               	movlw	low (STR_4+20)
  3743  00F3D0  6E41               	movwf	Lcd_Out@buffer,c
  3744  00F3D2  0EFE               	movlw	high (STR_4+20)
  3745  00F3D4  6E42               	movwf	Lcd_Out@buffer+1,c
  3746  00F3D6  90D8               	bcf	status,0,c
  3747  00F3D8  344D               	rlcf	V_ProgReloj@posicion,w,c
  3748  00F3DA  6ED9               	movwf	fsr2l,c
  3749  00F3DC  344E               	rlcf	V_ProgReloj@posicion+1,w,c
  3750  00F3DE  6EDA               	movwf	fsr2h,c
  3751  00F3E0  0EC7               	movlw	low _posicionesLeft
  3752  00F3E2  26D9               	addwf	fsr2l,f,c
  3753  00F3E4  0E00               	movlw	high _posicionesLeft
  3754  00F3E6  22DA               	addwfc	fsr2h,f,c
  3755  00F3E8  50DF               	movf	indf2,w,c
  3756  00F3EA  ECF7  F06F         	call	_Lcd_Out
  3757  00F3EE  D000               	goto	l3267
  3758  00F3F0                     l3267:
  3759                           
  3760                           ;main.c: 312: }
  3761                           ;main.c: 314: if (Sw_Down = PORTCbits.RC4 == 0) {
  3762  00F3F0  B882               	btfsc	3970,4,c	;volatile
  3763  00F3F2  D002               	goto	u2990
  3764  00F3F4  0E01               	movlw	1
  3765  00F3F6  D001               	goto	u3000
  3766  00F3F8                     u2990:
  3767  00F3F8  0E00               	movlw	0
  3768  00F3FA                     u3000:
  3769  00F3FA  0100               	movlb	0	; () banked
  3770  00F3FC  6F86               	movwf	_Sw_Down& (0+255),b
  3771  00F3FE  0100               	movlb	0	; () banked
  3772  00F400  5186               	movf	_Sw_Down& (0+255),w,b
  3773  00F402  B4D8               	btfsc	status,2,c
  3774  00F404  D0F8               	goto	l3341
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;main.c: 315: i = 0;
  3778  00F406  0E00               	movlw	0
  3779  00F408  0100               	movlb	0	; () banked
  3780  00F40A  6F7F               	movwf	(_i+1)& (0+255),b
  3781  00F40C  0E00               	movlw	0
  3782  00F40E  6F7E               	movwf	_i& (0+255),b
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;main.c: 316: if (posicion == 0) {
  3786  00F410  504D               	movf	V_ProgReloj@posicion,w,c
  3787  00F412  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3788  00F414  A4D8               	btfss	status,2,c
  3789  00F416  D01D               	goto	l3281
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;main.c: 317: if (diasem_tr > 0) {
  3793  00F418  5047               	movf	V_ProgReloj@diasem_tr,w,c
  3794  00F41A  B4D8               	btfsc	status,2,c
  3795  00F41C  D002               	goto	l3277
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;main.c: 318: diasem_tr--;
  3799  00F41E  0647               	decf	V_ProgReloj@diasem_tr,f,c
  3800  00F420  D000               	goto	l3277
  3801  00F422                     l3277:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;main.c: 319: }
  3805                           ;main.c: 320: Lcd_Out(2, 0, Convert_diasem(diasem_tr));
  3806  00F422  0E00               	movlw	0
  3807  00F424  6E40               	movwf	Lcd_Out@x,c
  3808  00F426  C047  F028         	movff	V_ProgReloj@diasem_tr,Convert_diasem@dia
  3809  00F42A  6A29               	clrf	Convert_diasem@dia+1,c
  3810  00F42C  ECFE  F071         	call	_Convert_diasem	;wreg free
  3811  00F430  C028  F041         	movff	?_Convert_diasem,Lcd_Out@buffer
  3812  00F434  C029  F042         	movff	?_Convert_diasem+1,Lcd_Out@buffer+1
  3813  00F438  0E02               	movlw	2
  3814  00F43A  ECF7  F06F         	call	_Lcd_Out
  3815                           
  3816                           ;main.c: 321: Lcd_Out(2, 0, "");
  3817  00F43E  0E00               	movlw	0
  3818  00F440  6E40               	movwf	Lcd_Out@x,c
  3819  00F442  0EEB               	movlw	low (STR_4+20)
  3820  00F444  6E41               	movwf	Lcd_Out@buffer,c
  3821  00F446  0EFE               	movlw	high (STR_4+20)
  3822  00F448  6E42               	movwf	Lcd_Out@buffer+1,c
  3823  00F44A  0E02               	movlw	2
  3824  00F44C  ECF7  F06F         	call	_Lcd_Out
  3825                           
  3826                           ;main.c: 322: } else if (posicion == 2) {
  3827  00F450  D0D2               	goto	l3341
  3828  00F452                     l3281:
  3829  00F452  0E02               	movlw	2
  3830  00F454  184D               	xorwf	V_ProgReloj@posicion,w,c
  3831  00F456  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3832  00F458  A4D8               	btfss	status,2,c
  3833  00F45A  D025               	goto	l3293
  3834                           
  3835                           ;main.c: 323: if (dia_tr > 1) {
  3836  00F45C  0E01               	movlw	1
  3837  00F45E  6448               	cpfsgt	V_ProgReloj@dia_tr,c
  3838  00F460  D002               	goto	l3287
  3839                           
  3840                           ;main.c: 324: dia_tr--;
  3841  00F462  0648               	decf	V_ProgReloj@dia_tr,f,c
  3842  00F464  D000               	goto	l3287
  3843  00F466                     l3287:
  3844                           
  3845                           ;main.c: 325: }
  3846                           ;main.c: 326: sprintf(buffer1, "%02u", dia_tr);
  3847  00F466  0E8B               	movlw	low _buffer1
  3848  00F468  6E0D               	movwf	sprintf@sp,c
  3849  00F46A  0E00               	movlw	high _buffer1
  3850  00F46C  6E0E               	movwf	sprintf@sp+1,c
  3851  00F46E  0EC2               	movlw	low (STR_34+10)
  3852  00F470  6E0F               	movwf	sprintf@f,c
  3853  00F472  0EFF               	movlw	high (STR_34+10)
  3854  00F474  6E10               	movwf	sprintf@f+1,c
  3855  00F476  C048  F011         	movff	V_ProgReloj@dia_tr,?_sprintf+4
  3856  00F47A  6A12               	clrf	?_sprintf+5,c
  3857  00F47C  EC97  F076         	call	_sprintf	;wreg free
  3858                           
  3859                           ;main.c: 327: Lcd_Out(3, 0, buffer1);
  3860  00F480  0E00               	movlw	0
  3861  00F482  6E40               	movwf	Lcd_Out@x,c
  3862  00F484  0E8B               	movlw	low _buffer1
  3863  00F486  6E41               	movwf	Lcd_Out@buffer,c
  3864  00F488  0E00               	movlw	high _buffer1
  3865  00F48A  6E42               	movwf	Lcd_Out@buffer+1,c
  3866  00F48C  0E03               	movlw	3
  3867  00F48E  ECF7  F06F         	call	_Lcd_Out
  3868                           
  3869                           ;main.c: 328: Lcd_Out(3, 0, "");
  3870  00F492  0E00               	movlw	0
  3871  00F494  6E40               	movwf	Lcd_Out@x,c
  3872  00F496  0EEB               	movlw	low (STR_4+20)
  3873  00F498  6E41               	movwf	Lcd_Out@buffer,c
  3874  00F49A  0EFE               	movlw	high (STR_4+20)
  3875  00F49C  6E42               	movwf	Lcd_Out@buffer+1,c
  3876  00F49E  0E03               	movlw	3
  3877  00F4A0  ECF7  F06F         	call	_Lcd_Out
  3878                           
  3879                           ;main.c: 329: } else if (posicion == 4) {
  3880  00F4A4  D0A8               	goto	l3341
  3881  00F4A6                     l3293:
  3882  00F4A6  0E04               	movlw	4
  3883  00F4A8  184D               	xorwf	V_ProgReloj@posicion,w,c
  3884  00F4AA  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3885  00F4AC  A4D8               	btfss	status,2,c
  3886  00F4AE  D025               	goto	l3305
  3887                           
  3888                           ;main.c: 330: if (mes_tr > 1) {
  3889  00F4B0  0E01               	movlw	1
  3890  00F4B2  6449               	cpfsgt	V_ProgReloj@mes_tr,c
  3891  00F4B4  D002               	goto	l3299
  3892                           
  3893                           ;main.c: 331: mes_tr--;
  3894  00F4B6  0649               	decf	V_ProgReloj@mes_tr,f,c
  3895  00F4B8  D000               	goto	l3299
  3896  00F4BA                     l3299:
  3897                           
  3898                           ;main.c: 332: }
  3899                           ;main.c: 333: sprintf(buffer1, "%02u", mes_tr);
  3900  00F4BA  0E8B               	movlw	low _buffer1
  3901  00F4BC  6E0D               	movwf	sprintf@sp,c
  3902  00F4BE  0E00               	movlw	high _buffer1
  3903  00F4C0  6E0E               	movwf	sprintf@sp+1,c
  3904  00F4C2  0EC2               	movlw	low (STR_34+10)
  3905  00F4C4  6E0F               	movwf	sprintf@f,c
  3906  00F4C6  0EFF               	movlw	high (STR_34+10)
  3907  00F4C8  6E10               	movwf	sprintf@f+1,c
  3908  00F4CA  C049  F011         	movff	V_ProgReloj@mes_tr,?_sprintf+4
  3909  00F4CE  6A12               	clrf	?_sprintf+5,c
  3910  00F4D0  EC97  F076         	call	_sprintf	;wreg free
  3911                           
  3912                           ;main.c: 334: Lcd_Out(3, 3, buffer1);
  3913  00F4D4  0E03               	movlw	3
  3914  00F4D6  6E40               	movwf	Lcd_Out@x,c
  3915  00F4D8  0E8B               	movlw	low _buffer1
  3916  00F4DA  6E41               	movwf	Lcd_Out@buffer,c
  3917  00F4DC  0E00               	movlw	high _buffer1
  3918  00F4DE  6E42               	movwf	Lcd_Out@buffer+1,c
  3919  00F4E0  0E03               	movlw	3
  3920  00F4E2  ECF7  F06F         	call	_Lcd_Out
  3921                           
  3922                           ;main.c: 335: Lcd_Out(3, 3, "");
  3923  00F4E6  0E03               	movlw	3
  3924  00F4E8  6E40               	movwf	Lcd_Out@x,c
  3925  00F4EA  0EEB               	movlw	low (STR_4+20)
  3926  00F4EC  6E41               	movwf	Lcd_Out@buffer,c
  3927  00F4EE  0EFE               	movlw	high (STR_4+20)
  3928  00F4F0  6E42               	movwf	Lcd_Out@buffer+1,c
  3929  00F4F2  0E03               	movlw	3
  3930  00F4F4  ECF7  F06F         	call	_Lcd_Out
  3931                           
  3932                           ;main.c: 336: } else if (posicion == 6) {
  3933  00F4F8  D07E               	goto	l3341
  3934  00F4FA                     l3305:
  3935  00F4FA  0E06               	movlw	6
  3936  00F4FC  184D               	xorwf	V_ProgReloj@posicion,w,c
  3937  00F4FE  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3938  00F500  A4D8               	btfss	status,2,c
  3939  00F502  D025               	goto	l3317
  3940                           
  3941                           ;main.c: 337: if (anio_tr > 20) {
  3942  00F504  0E14               	movlw	20
  3943  00F506  644A               	cpfsgt	V_ProgReloj@anio_tr,c
  3944  00F508  D002               	goto	l3311
  3945                           
  3946                           ;main.c: 338: anio_tr--;
  3947  00F50A  064A               	decf	V_ProgReloj@anio_tr,f,c
  3948  00F50C  D000               	goto	l3311
  3949  00F50E                     l3311:
  3950                           
  3951                           ;main.c: 339: }
  3952                           ;main.c: 340: sprintf(buffer1, "%02u", anio_tr);
  3953  00F50E  0E8B               	movlw	low _buffer1
  3954  00F510  6E0D               	movwf	sprintf@sp,c
  3955  00F512  0E00               	movlw	high _buffer1
  3956  00F514  6E0E               	movwf	sprintf@sp+1,c
  3957  00F516  0EC2               	movlw	low (STR_34+10)
  3958  00F518  6E0F               	movwf	sprintf@f,c
  3959  00F51A  0EFF               	movlw	high (STR_34+10)
  3960  00F51C  6E10               	movwf	sprintf@f+1,c
  3961  00F51E  C04A  F011         	movff	V_ProgReloj@anio_tr,?_sprintf+4
  3962  00F522  6A12               	clrf	?_sprintf+5,c
  3963  00F524  EC97  F076         	call	_sprintf	;wreg free
  3964                           
  3965                           ;main.c: 341: Lcd_Out(3, 6, buffer1);
  3966  00F528  0E06               	movlw	6
  3967  00F52A  6E40               	movwf	Lcd_Out@x,c
  3968  00F52C  0E8B               	movlw	low _buffer1
  3969  00F52E  6E41               	movwf	Lcd_Out@buffer,c
  3970  00F530  0E00               	movlw	high _buffer1
  3971  00F532  6E42               	movwf	Lcd_Out@buffer+1,c
  3972  00F534  0E03               	movlw	3
  3973  00F536  ECF7  F06F         	call	_Lcd_Out
  3974                           
  3975                           ;main.c: 342: Lcd_Out(3, 6, "");
  3976  00F53A  0E06               	movlw	6
  3977  00F53C  6E40               	movwf	Lcd_Out@x,c
  3978  00F53E  0EEB               	movlw	low (STR_4+20)
  3979  00F540  6E41               	movwf	Lcd_Out@buffer,c
  3980  00F542  0EFE               	movlw	high (STR_4+20)
  3981  00F544  6E42               	movwf	Lcd_Out@buffer+1,c
  3982  00F546  0E03               	movlw	3
  3983  00F548  ECF7  F06F         	call	_Lcd_Out
  3984                           
  3985                           ;main.c: 343: } else if (posicion == 8) {
  3986  00F54C  D054               	goto	l3341
  3987  00F54E                     l3317:
  3988  00F54E  0E08               	movlw	8
  3989  00F550  184D               	xorwf	V_ProgReloj@posicion,w,c
  3990  00F552  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  3991  00F554  A4D8               	btfss	status,2,c
  3992  00F556  D025               	goto	l3329
  3993                           
  3994                           ;main.c: 344: if (hora_tr > 0) {
  3995  00F558  504B               	movf	V_ProgReloj@hora_tr,w,c
  3996  00F55A  B4D8               	btfsc	status,2,c
  3997  00F55C  D002               	goto	l3323
  3998                           
  3999                           ;main.c: 345: hora_tr--;
  4000  00F55E  064B               	decf	V_ProgReloj@hora_tr,f,c
  4001  00F560  D000               	goto	l3323
  4002  00F562                     l3323:
  4003                           
  4004                           ;main.c: 346: }
  4005                           ;main.c: 347: sprintf(buffer1, "%02u", hora_tr);
  4006  00F562  0E8B               	movlw	low _buffer1
  4007  00F564  6E0D               	movwf	sprintf@sp,c
  4008  00F566  0E00               	movlw	high _buffer1
  4009  00F568  6E0E               	movwf	sprintf@sp+1,c
  4010  00F56A  0EC2               	movlw	low (STR_34+10)
  4011  00F56C  6E0F               	movwf	sprintf@f,c
  4012  00F56E  0EFF               	movlw	high (STR_34+10)
  4013  00F570  6E10               	movwf	sprintf@f+1,c
  4014  00F572  C04B  F011         	movff	V_ProgReloj@hora_tr,?_sprintf+4
  4015  00F576  6A12               	clrf	?_sprintf+5,c
  4016  00F578  EC97  F076         	call	_sprintf	;wreg free
  4017                           
  4018                           ;main.c: 348: Lcd_Out(4, 0, buffer1);
  4019  00F57C  0E00               	movlw	0
  4020  00F57E  6E40               	movwf	Lcd_Out@x,c
  4021  00F580  0E8B               	movlw	low _buffer1
  4022  00F582  6E41               	movwf	Lcd_Out@buffer,c
  4023  00F584  0E00               	movlw	high _buffer1
  4024  00F586  6E42               	movwf	Lcd_Out@buffer+1,c
  4025  00F588  0E04               	movlw	4
  4026  00F58A  ECF7  F06F         	call	_Lcd_Out
  4027                           
  4028                           ;main.c: 349: Lcd_Out(4, 0, "");
  4029  00F58E  0E00               	movlw	0
  4030  00F590  6E40               	movwf	Lcd_Out@x,c
  4031  00F592  0EEB               	movlw	low (STR_4+20)
  4032  00F594  6E41               	movwf	Lcd_Out@buffer,c
  4033  00F596  0EFE               	movlw	high (STR_4+20)
  4034  00F598  6E42               	movwf	Lcd_Out@buffer+1,c
  4035  00F59A  0E04               	movlw	4
  4036  00F59C  ECF7  F06F         	call	_Lcd_Out
  4037                           
  4038                           ;main.c: 350: } else if (posicion == 10) {
  4039  00F5A0  D02A               	goto	l3341
  4040  00F5A2                     l3329:
  4041  00F5A2  0E0A               	movlw	10
  4042  00F5A4  184D               	xorwf	V_ProgReloj@posicion,w,c
  4043  00F5A6  104E               	iorwf	V_ProgReloj@posicion+1,w,c
  4044  00F5A8  A4D8               	btfss	status,2,c
  4045  00F5AA  D025               	goto	l3341
  4046                           
  4047                           ;main.c: 351: if (minuto_tr > 0) {
  4048  00F5AC  504C               	movf	V_ProgReloj@minuto_tr,w,c
  4049  00F5AE  B4D8               	btfsc	status,2,c
  4050  00F5B0  D002               	goto	l3335
  4051                           
  4052                           ;main.c: 352: minuto_tr--;
  4053  00F5B2  064C               	decf	V_ProgReloj@minuto_tr,f,c
  4054  00F5B4  D000               	goto	l3335
  4055  00F5B6                     l3335:
  4056                           
  4057                           ;main.c: 353: }
  4058                           ;main.c: 354: sprintf(buffer1, "%02u", minuto_tr);
  4059  00F5B6  0E8B               	movlw	low _buffer1
  4060  00F5B8  6E0D               	movwf	sprintf@sp,c
  4061  00F5BA  0E00               	movlw	high _buffer1
  4062  00F5BC  6E0E               	movwf	sprintf@sp+1,c
  4063  00F5BE  0EC2               	movlw	low (STR_34+10)
  4064  00F5C0  6E0F               	movwf	sprintf@f,c
  4065  00F5C2  0EFF               	movlw	high (STR_34+10)
  4066  00F5C4  6E10               	movwf	sprintf@f+1,c
  4067  00F5C6  C04C  F011         	movff	V_ProgReloj@minuto_tr,?_sprintf+4
  4068  00F5CA  6A12               	clrf	?_sprintf+5,c
  4069  00F5CC  EC97  F076         	call	_sprintf	;wreg free
  4070                           
  4071                           ;main.c: 355: Lcd_Out(4, 3, buffer1);
  4072  00F5D0  0E03               	movlw	3
  4073  00F5D2  6E40               	movwf	Lcd_Out@x,c
  4074  00F5D4  0E8B               	movlw	low _buffer1
  4075  00F5D6  6E41               	movwf	Lcd_Out@buffer,c
  4076  00F5D8  0E00               	movlw	high _buffer1
  4077  00F5DA  6E42               	movwf	Lcd_Out@buffer+1,c
  4078  00F5DC  0E04               	movlw	4
  4079  00F5DE  ECF7  F06F         	call	_Lcd_Out
  4080                           
  4081                           ;main.c: 356: Lcd_Out(4, 3, "");
  4082  00F5E2  0E03               	movlw	3
  4083  00F5E4  6E40               	movwf	Lcd_Out@x,c
  4084  00F5E6  0EEB               	movlw	low (STR_4+20)
  4085  00F5E8  6E41               	movwf	Lcd_Out@buffer,c
  4086  00F5EA  0EFE               	movlw	high (STR_4+20)
  4087  00F5EC  6E42               	movwf	Lcd_Out@buffer+1,c
  4088  00F5EE  0E04               	movlw	4
  4089  00F5F0  ECF7  F06F         	call	_Lcd_Out
  4090  00F5F4  D000               	goto	l3341
  4091  00F5F6                     l3341:
  4092                           
  4093                           ;main.c: 357: }
  4094                           ;main.c: 358: }
  4095                           ;main.c: 360: if (Sw_Center = PORTAbits.RA5 == 0) {
  4096  00F5F6  BA80               	btfsc	3968,5,c	;volatile
  4097  00F5F8  D002               	goto	u3140
  4098  00F5FA  0E01               	movlw	1
  4099  00F5FC  D001               	goto	u3150
  4100  00F5FE                     u3140:
  4101  00F5FE  0E00               	movlw	0
  4102  00F600                     u3150:
  4103  00F600  0100               	movlb	0	; () banked
  4104  00F602  6F85               	movwf	_Sw_Center& (0+255),b
  4105  00F604  0100               	movlb	0	; () banked
  4106  00F606  5185               	movf	_Sw_Center& (0+255),w,b
  4107  00F608  B4D8               	btfsc	status,2,c
  4108  00F60A  D018               	goto	l3347
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;main.c: 361: diasem = diasem_tr;
  4112  00F60C  C047  F07C         	movff	V_ProgReloj@diasem_tr,_diasem
  4113  00F610  0100               	movlb	0	; () banked
  4114  00F612  6B7D               	clrf	(_diasem+1)& (0+255),b
  4115                           
  4116                           ;main.c: 362: dia = dia_tr;
  4117  00F614  C048  F0E5         	movff	V_ProgReloj@dia_tr,_dia
  4118  00F618  0100               	movlb	0	; () banked
  4119  00F61A  6BE6               	clrf	(_dia+1)& (0+255),b
  4120                           
  4121                           ;main.c: 363: mes = mes_tr;
  4122  00F61C  C049  F0E7         	movff	V_ProgReloj@mes_tr,_mes
  4123  00F620  0100               	movlb	0	; () banked
  4124  00F622  6BE8               	clrf	(_mes+1)& (0+255),b
  4125                           
  4126                           ;main.c: 364: anio = anio_tr;
  4127  00F624  C04A  F052         	movff	V_ProgReloj@anio_tr,_anio
  4128  00F628  6A53               	clrf	_anio+1,c
  4129                           
  4130                           ;main.c: 365: hora = hora_tr;
  4131  00F62A  C04B  F054         	movff	V_ProgReloj@hora_tr,_hora
  4132  00F62E  6A55               	clrf	_hora+1,c
  4133                           
  4134                           ;main.c: 366: minuto = minuto_tr;
  4135  00F630  C04C  F056         	movff	V_ProgReloj@minuto_tr,_minuto
  4136  00F634  6A57               	clrf	_minuto+1,c
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;main.c: 367: Write_RTC();
  4140  00F636  ECF1  F074         	call	_Write_RTC	;wreg free
  4141                           
  4142                           ;main.c: 369: break;
  4143  00F63A  D00B               	goto	l3351
  4144  00F63C                     l3347:
  4145  00F63C  0100               	movlb	0	; () banked
  4146  00F63E  4B7E               	infsnz	_i& (0+255),f,b
  4147  00F640  2B7F               	incf	(_i+1)& (0+255),f,b
  4148                           
  4149                           ; BSR set to: 0
  4150  00F642  0100               	movlb	0	; () banked
  4151  00F644  BF7F               	btfsc	(_i+1)& (0+255),7,b
  4152  00F646  D547               	goto	l3171
  4153  00F648  0100               	movlb	0	; () banked
  4154  00F64A  517F               	movf	(_i+1)& (0+255),w,b
  4155  00F64C  E102               	bnz	l3351
  4156  00F64E  D53C               	goto	L2
  4157  00F650  D000               	goto	l3351
  4158  00F652                     l3351:
  4159                           
  4160                           ;main.c: 370: }
  4161                           ;main.c: 371: }
  4162                           ;main.c: 373: Lcd_Cmd(12);
  4163  00F652  0E0C               	movlw	12
  4164  00F654  EC8D  F072         	call	_Lcd_Cmd
  4165  00F658  0012               	return		;funcret
  4166  00F65A                     __end_of_V_ProgReloj:
  4167                           	opt stack 0
  4168                           tblptru	equ	0xFF8
  4169                           tblptrh	equ	0xFF7
  4170                           tblptrl	equ	0xFF6
  4171                           tablat	equ	0xFF5
  4172                           postinc0	equ	0xFEE
  4173                           wreg	equ	0xFE8
  4174                           postdec1	equ	0xFE5
  4175                           fsr1l	equ	0xFE1
  4176                           indf2	equ	0xFDF
  4177                           fsr2h	equ	0xFDA
  4178                           fsr2l	equ	0xFD9
  4179                           status	equ	0xFD8
  4180                           
  4181 ;; *************** function _Write_RTC *****************
  4182 ;; Defined at:
  4183 ;;		line 570 in file "../main.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;		None
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;		None
  4188 ;; Return value:  Size  Location     Type
  4189 ;;		None               void
  4190 ;; Registers used:
  4191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4201 ;;Total ram usage:        0 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    2
  4204 ;; This function calls:
  4205 ;;		_RtccWrOn
  4206 ;;		_RtccWriteDate
  4207 ;;		_RtccWriteTime
  4208 ;;		___awdiv
  4209 ;; This function is called by:
  4210 ;;		_main
  4211 ;;		_V_ProgReloj
  4212 ;;		_V_ProgRiegoIlum
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text5
  4217  00E9E2                     __ptext5:
  4218                           	opt stack 0
  4219  00E9E2                     _Write_RTC:
  4220                           	opt stack 28
  4221                           
  4222                           ;main.c: 571: RtccWrOn();
  4223                           
  4224                           ;incstack = 0
  4225  00E9E2  EC32  F06E         	call	_RtccWrOn	;wreg free
  4226                           
  4227                           ;main.c: 573: PIE3bits.RTCCIE = 1;
  4228  00E9E6  80A3               	bsf	4003,0,c	;volatile
  4229                           
  4230                           ;main.c: 574: segundo_d = segundo / 10;
  4231  00E9E8  C080  F001         	movff	_segundo,___awdiv@dividend
  4232  00E9EC  C081  F002         	movff	_segundo+1,___awdiv@dividend+1
  4233  00E9F0  0E00               	movlw	0
  4234  00E9F2  6E04               	movwf	___awdiv@divisor+1,c
  4235  00E9F4  0E0A               	movlw	10
  4236  00E9F6  6E03               	movwf	___awdiv@divisor,c
  4237  00E9F8  EC41  F070         	call	___awdiv	;wreg free
  4238  00E9FC  5001               	movf	?___awdiv,w,c
  4239  00E9FE  0100               	movlb	0	; () banked
  4240  00EA00  6FF4               	movwf	_segundo_d& (0+255),b
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;main.c: 575: segundo_u = segundo - segundo_d * 10;
  4244  00EA02  0100               	movlb	0	; () banked
  4245  00EA04  51F4               	movf	_segundo_d& (0+255),w,b
  4246  00EA06  0D0A               	mullw	10
  4247  00EA08  50F3               	movf	prodl,w,c
  4248  00EA0A  0800               	sublw	0
  4249  00EA0C  0100               	movlb	0	; () banked
  4250  00EA0E  2580               	addwf	_segundo& (0+255),w,b
  4251  00EA10  0100               	movlb	0	; () banked
  4252  00EA12  6FF5               	movwf	_segundo_u& (0+255),b
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;main.c: 576: RtccTime.f.sec = segundo_d * 16 + segundo_u;
  4256  00EA14  0100               	movlb	0	; () banked
  4257  00EA16  51F4               	movf	_segundo_d& (0+255),w,b
  4258  00EA18  0D10               	mullw	16
  4259  00EA1A  50F3               	movf	prodl,w,c
  4260  00EA1C  0100               	movlb	0	; () banked
  4261  00EA1E  25F5               	addwf	_segundo_u& (0+255),w,b
  4262  00EA20  0100               	movlb	0	; () banked
  4263  00EA22  6FA4               	movwf	(_RtccTime+1)& (0+255),b
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;main.c: 577: minuto_d = minuto / 10;
  4267  00EA24  C056  F001         	movff	_minuto,___awdiv@dividend
  4268  00EA28  C057  F002         	movff	_minuto+1,___awdiv@dividend+1
  4269  00EA2C  0E00               	movlw	0
  4270  00EA2E  6E04               	movwf	___awdiv@divisor+1,c
  4271  00EA30  0E0A               	movlw	10
  4272  00EA32  6E03               	movwf	___awdiv@divisor,c
  4273  00EA34  EC41  F070         	call	___awdiv	;wreg free
  4274  00EA38  5001               	movf	?___awdiv,w,c
  4275  00EA3A  0100               	movlb	0	; () banked
  4276  00EA3C  6FF2               	movwf	_minuto_d& (0+255),b
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;main.c: 578: minuto_u = minuto - minuto_d * 10;
  4280  00EA3E  0100               	movlb	0	; () banked
  4281  00EA40  51F2               	movf	_minuto_d& (0+255),w,b
  4282  00EA42  0D0A               	mullw	10
  4283  00EA44  50F3               	movf	prodl,w,c
  4284  00EA46  0800               	sublw	0
  4285  00EA48  2456               	addwf	_minuto,w,c
  4286  00EA4A  0100               	movlb	0	; () banked
  4287  00EA4C  6FF3               	movwf	_minuto_u& (0+255),b
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;main.c: 579: RtccTime.f.min = minuto_d * 16 + minuto_u;
  4291  00EA4E  0100               	movlb	0	; () banked
  4292  00EA50  51F2               	movf	_minuto_d& (0+255),w,b
  4293  00EA52  0D10               	mullw	16
  4294  00EA54  50F3               	movf	prodl,w,c
  4295  00EA56  0100               	movlb	0	; () banked
  4296  00EA58  25F3               	addwf	_minuto_u& (0+255),w,b
  4297  00EA5A  0100               	movlb	0	; () banked
  4298  00EA5C  6FA5               	movwf	(_RtccTime+2)& (0+255),b
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;main.c: 580: hora_d = hora / 10;
  4302  00EA5E  C054  F001         	movff	_hora,___awdiv@dividend
  4303  00EA62  C055  F002         	movff	_hora+1,___awdiv@dividend+1
  4304  00EA66  0E00               	movlw	0
  4305  00EA68  6E04               	movwf	___awdiv@divisor+1,c
  4306  00EA6A  0E0A               	movlw	10
  4307  00EA6C  6E03               	movwf	___awdiv@divisor,c
  4308  00EA6E  EC41  F070         	call	___awdiv	;wreg free
  4309  00EA72  5001               	movf	?___awdiv,w,c
  4310  00EA74  0100               	movlb	0	; () banked
  4311  00EA76  6FEE               	movwf	_hora_d& (0+255),b
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;main.c: 581: hora_u = hora - hora_d * 10;
  4315  00EA78  0100               	movlb	0	; () banked
  4316  00EA7A  51EE               	movf	_hora_d& (0+255),w,b
  4317  00EA7C  0D0A               	mullw	10
  4318  00EA7E  50F3               	movf	prodl,w,c
  4319  00EA80  0800               	sublw	0
  4320  00EA82  2454               	addwf	_hora,w,c
  4321  00EA84  0100               	movlb	0	; () banked
  4322  00EA86  6FEF               	movwf	_hora_u& (0+255),b
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;main.c: 582: RtccTime.f.hour = hora_d * 16 + hora_u;
  4326  00EA88  0100               	movlb	0	; () banked
  4327  00EA8A  51EE               	movf	_hora_d& (0+255),w,b
  4328  00EA8C  0D10               	mullw	16
  4329  00EA8E  50F3               	movf	prodl,w,c
  4330  00EA90  0100               	movlb	0	; () banked
  4331  00EA92  25EF               	addwf	_hora_u& (0+255),w,b
  4332  00EA94  0100               	movlb	0	; () banked
  4333  00EA96  6FA6               	movwf	(_RtccTime+3)& (0+255),b
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;main.c: 583: anio_d = anio / 10;
  4337  00EA98  C052  F001         	movff	_anio,___awdiv@dividend
  4338  00EA9C  C053  F002         	movff	_anio+1,___awdiv@dividend+1
  4339  00EAA0  0E00               	movlw	0
  4340  00EAA2  6E04               	movwf	___awdiv@divisor+1,c
  4341  00EAA4  0E0A               	movlw	10
  4342  00EAA6  6E03               	movwf	___awdiv@divisor,c
  4343  00EAA8  EC41  F070         	call	___awdiv	;wreg free
  4344  00EAAC  5001               	movf	?___awdiv,w,c
  4345  00EAAE  0100               	movlb	0	; () banked
  4346  00EAB0  6FE9               	movwf	_anio_d& (0+255),b
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;main.c: 584: anio_u = anio - anio_d * 10;
  4350  00EAB2  0100               	movlb	0	; () banked
  4351  00EAB4  51E9               	movf	_anio_d& (0+255),w,b
  4352  00EAB6  0D0A               	mullw	10
  4353  00EAB8  50F3               	movf	prodl,w,c
  4354  00EABA  0800               	sublw	0
  4355  00EABC  2452               	addwf	_anio,w,c
  4356  00EABE  0100               	movlb	0	; () banked
  4357  00EAC0  6FEA               	movwf	_anio_u& (0+255),b
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;main.c: 585: RtccDate.f.year = anio_d * 16 + anio_u;
  4361  00EAC2  0100               	movlb	0	; () banked
  4362  00EAC4  51E9               	movf	_anio_d& (0+255),w,b
  4363  00EAC6  0D10               	mullw	16
  4364  00EAC8  50F3               	movf	prodl,w,c
  4365  00EACA  0100               	movlb	0	; () banked
  4366  00EACC  25EA               	addwf	_anio_u& (0+255),w,b
  4367  00EACE  0100               	movlb	0	; () banked
  4368  00EAD0  6FA2               	movwf	(_RtccDate+3)& (0+255),b
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;main.c: 586: mes_d = mes / 10;
  4372  00EAD2  C0E7  F001         	movff	_mes,___awdiv@dividend
  4373  00EAD6  C0E8  F002         	movff	_mes+1,___awdiv@dividend+1
  4374  00EADA  0E00               	movlw	0
  4375  00EADC  6E04               	movwf	___awdiv@divisor+1,c
  4376  00EADE  0E0A               	movlw	10
  4377  00EAE0  6E03               	movwf	___awdiv@divisor,c
  4378  00EAE2  EC41  F070         	call	___awdiv	;wreg free
  4379  00EAE6  5001               	movf	?___awdiv,w,c
  4380  00EAE8  0100               	movlb	0	; () banked
  4381  00EAEA  6FF0               	movwf	_mes_d& (0+255),b
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;main.c: 587: mes_u = mes - mes_d * 10;
  4385  00EAEC  0100               	movlb	0	; () banked
  4386  00EAEE  51F0               	movf	_mes_d& (0+255),w,b
  4387  00EAF0  0D0A               	mullw	10
  4388  00EAF2  50F3               	movf	prodl,w,c
  4389  00EAF4  0800               	sublw	0
  4390  00EAF6  0100               	movlb	0	; () banked
  4391  00EAF8  25E7               	addwf	_mes& (0+255),w,b
  4392  00EAFA  0100               	movlb	0	; () banked
  4393  00EAFC  6FF1               	movwf	_mes_u& (0+255),b
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;main.c: 588: RtccDate.f.mon = mes_d * 16 + mes_u;
  4397  00EAFE  0100               	movlb	0	; () banked
  4398  00EB00  51F0               	movf	_mes_d& (0+255),w,b
  4399  00EB02  0D10               	mullw	16
  4400  00EB04  50F3               	movf	prodl,w,c
  4401  00EB06  0100               	movlb	0	; () banked
  4402  00EB08  25F1               	addwf	_mes_u& (0+255),w,b
  4403  00EB0A  0100               	movlb	0	; () banked
  4404  00EB0C  6FA1               	movwf	(_RtccDate+2)& (0+255),b
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;main.c: 589: fecha_d = dia / 10;
  4408  00EB0E  C0E5  F001         	movff	_dia,___awdiv@dividend
  4409  00EB12  C0E6  F002         	movff	_dia+1,___awdiv@dividend+1
  4410  00EB16  0E00               	movlw	0
  4411  00EB18  6E04               	movwf	___awdiv@divisor+1,c
  4412  00EB1A  0E0A               	movlw	10
  4413  00EB1C  6E03               	movwf	___awdiv@divisor,c
  4414  00EB1E  EC41  F070         	call	___awdiv	;wreg free
  4415  00EB22  5001               	movf	?___awdiv,w,c
  4416  00EB24  0100               	movlb	0	; () banked
  4417  00EB26  6FEC               	movwf	_fecha_d& (0+255),b
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;main.c: 590: fecha_u = dia - fecha_d * 10;
  4421  00EB28  0100               	movlb	0	; () banked
  4422  00EB2A  51EC               	movf	_fecha_d& (0+255),w,b
  4423  00EB2C  0D0A               	mullw	10
  4424  00EB2E  50F3               	movf	prodl,w,c
  4425  00EB30  0800               	sublw	0
  4426  00EB32  0100               	movlb	0	; () banked
  4427  00EB34  25E5               	addwf	_dia& (0+255),w,b
  4428  00EB36  0100               	movlb	0	; () banked
  4429  00EB38  6FED               	movwf	_fecha_u& (0+255),b
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;main.c: 591: RtccDate.f.mday = fecha_d * 16 + fecha_u;
  4433  00EB3A  0100               	movlb	0	; () banked
  4434  00EB3C  51EC               	movf	_fecha_d& (0+255),w,b
  4435  00EB3E  0D10               	mullw	16
  4436  00EB40  50F3               	movf	prodl,w,c
  4437  00EB42  0100               	movlb	0	; () banked
  4438  00EB44  25ED               	addwf	_fecha_u& (0+255),w,b
  4439  00EB46  0100               	movlb	0	; () banked
  4440  00EB48  6FA0               	movwf	(_RtccDate+1)& (0+255),b
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;main.c: 592: dia_semana = diasem;
  4444  00EB4A  C07C  F0EB         	movff	_diasem,_dia_semana
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;main.c: 593: RtccDate.f.wday = diasem;
  4448  00EB4E  C07C  F09F         	movff	_diasem,_RtccDate
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;main.c: 595: RtccWriteTime(&RtccTime, 1);
  4452  00EB52  0EA3               	movlw	low _RtccTime
  4453  00EB54  6E01               	movwf	RtccWriteTime@pTm,c
  4454  00EB56  0E00               	movlw	high _RtccTime
  4455  00EB58  6E02               	movwf	RtccWriteTime@pTm+1,c
  4456  00EB5A  0E01               	movlw	1
  4457  00EB5C  6E03               	movwf	RtccWriteTime@di,c
  4458  00EB5E  ECEB  F070         	call	_RtccWriteTime	;wreg free
  4459                           
  4460                           ;main.c: 596: RtccWriteDate(&RtccDate, 1);
  4461  00EB62  0E9F               	movlw	low _RtccDate
  4462  00EB64  6E01               	movwf	RtccWriteDate@pDt,c
  4463  00EB66  0E00               	movlw	high _RtccDate
  4464  00EB68  6E02               	movwf	RtccWriteDate@pDt+1,c
  4465  00EB6A  0E01               	movlw	1
  4466  00EB6C  6E03               	movwf	RtccWriteDate@di,c
  4467  00EB6E  EC4E  F074         	call	_RtccWriteDate	;wreg free
  4468                           
  4469                           ;main.c: 597: (RTCCFGbits.RTCEN=1);
  4470  00EB72  010F               	movlb	15	; () banked
  4471  00EB74  8F3F               	bsf	63,7,b	;volatile
  4472                           
  4473                           ; BSR set to: 15
  4474  00EB76  0012               	return		;funcret
  4475  00EB78                     __end_of_Write_RTC:
  4476                           	opt stack 0
  4477                           tblptru	equ	0xFF8
  4478                           tblptrh	equ	0xFF7
  4479                           tblptrl	equ	0xFF6
  4480                           tablat	equ	0xFF5
  4481                           prodl	equ	0xFF3
  4482                           postinc0	equ	0xFEE
  4483                           wreg	equ	0xFE8
  4484                           postdec1	equ	0xFE5
  4485                           fsr1l	equ	0xFE1
  4486                           indf2	equ	0xFDF
  4487                           fsr2h	equ	0xFDA
  4488                           fsr2l	equ	0xFD9
  4489                           status	equ	0xFD8
  4490                           
  4491 ;; *************** function ___awdiv *****************
  4492 ;; Defined at:
  4493 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  dividend        2    0[COMRAM] int 
  4496 ;;  divisor         2    2[COMRAM] int 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  quotient        2    6[COMRAM] int 
  4499 ;;  sign            1    5[COMRAM] unsigned char 
  4500 ;;  counter         1    4[COMRAM] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  2    0[COMRAM] int 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4510 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4511 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4513 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4514 ;;Total ram usage:        8 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_Write_RTC
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text6
  4524  00E082                     __ptext6:
  4525                           	opt stack 0
  4526  00E082                     ___awdiv:
  4527                           	opt stack 29
  4528                           
  4529                           ; BSR set to: 15
  4530                           ;incstack = 0
  4531  00E082  0E00               	movlw	0
  4532  00E084  6E06               	movwf	___awdiv@sign,c
  4533  00E086  AE04               	btfss	___awdiv@divisor+1,7,c
  4534  00E088  D007               	goto	l2859
  4535  00E08A  6C03               	negf	___awdiv@divisor,c
  4536  00E08C  1E04               	comf	___awdiv@divisor+1,f,c
  4537  00E08E  B0D8               	btfsc	status,0,c
  4538  00E090  2A04               	incf	___awdiv@divisor+1,f,c
  4539  00E092  0E01               	movlw	1
  4540  00E094  6E06               	movwf	___awdiv@sign,c
  4541  00E096  D000               	goto	l2859
  4542  00E098                     l2859:
  4543  00E098  AE02               	btfss	___awdiv@dividend+1,7,c
  4544  00E09A  D007               	goto	l2865
  4545  00E09C  6C01               	negf	___awdiv@dividend,c
  4546  00E09E  1E02               	comf	___awdiv@dividend+1,f,c
  4547  00E0A0  B0D8               	btfsc	status,0,c
  4548  00E0A2  2A02               	incf	___awdiv@dividend+1,f,c
  4549  00E0A4  0E01               	movlw	1
  4550  00E0A6  1A06               	xorwf	___awdiv@sign,f,c
  4551  00E0A8  D000               	goto	l2865
  4552  00E0AA                     l2865:
  4553  00E0AA  0E00               	movlw	0
  4554  00E0AC  6E08               	movwf	___awdiv@quotient+1,c
  4555  00E0AE  0E00               	movlw	0
  4556  00E0B0  6E07               	movwf	___awdiv@quotient,c
  4557  00E0B2  5003               	movf	___awdiv@divisor,w,c
  4558  00E0B4  1004               	iorwf	___awdiv@divisor+1,w,c
  4559  00E0B6  B4D8               	btfsc	status,2,c
  4560  00E0B8  D021               	goto	l2887
  4561  00E0BA  0E01               	movlw	1
  4562  00E0BC  6E05               	movwf	___awdiv@counter,c
  4563  00E0BE  D005               	goto	l2873
  4564  00E0C0                     l2871:
  4565  00E0C0  90D8               	bcf	status,0,c
  4566  00E0C2  3603               	rlcf	___awdiv@divisor,f,c
  4567  00E0C4  3604               	rlcf	___awdiv@divisor+1,f,c
  4568  00E0C6  2A05               	incf	___awdiv@counter,f,c
  4569  00E0C8  D000               	goto	l2873
  4570  00E0CA                     l2873:
  4571  00E0CA  BE04               	btfsc	___awdiv@divisor+1,7,c
  4572  00E0CC  D002               	goto	l2875
  4573  00E0CE  D7F8               	goto	l2871
  4574  00E0D0  D000               	goto	l2875
  4575  00E0D2                     l2875:
  4576  00E0D2  90D8               	bcf	status,0,c
  4577  00E0D4  3607               	rlcf	___awdiv@quotient,f,c
  4578  00E0D6  3608               	rlcf	___awdiv@quotient+1,f,c
  4579  00E0D8  5003               	movf	___awdiv@divisor,w,c
  4580  00E0DA  5C01               	subwf	___awdiv@dividend,w,c
  4581  00E0DC  5004               	movf	___awdiv@divisor+1,w,c
  4582  00E0DE  5802               	subwfb	___awdiv@dividend+1,w,c
  4583  00E0E0  A0D8               	btfss	status,0,c
  4584  00E0E2  D006               	goto	l2883
  4585  00E0E4  5003               	movf	___awdiv@divisor,w,c
  4586  00E0E6  5E01               	subwf	___awdiv@dividend,f,c
  4587  00E0E8  5004               	movf	___awdiv@divisor+1,w,c
  4588  00E0EA  5A02               	subwfb	___awdiv@dividend+1,f,c
  4589  00E0EC  8007               	bsf	___awdiv@quotient,0,c
  4590  00E0EE  D000               	goto	l2883
  4591  00E0F0                     l2883:
  4592  00E0F0  90D8               	bcf	status,0,c
  4593  00E0F2  3204               	rrcf	___awdiv@divisor+1,f,c
  4594  00E0F4  3203               	rrcf	___awdiv@divisor,f,c
  4595  00E0F6  2E05               	decfsz	___awdiv@counter,f,c
  4596  00E0F8  D7EC               	goto	l2875
  4597  00E0FA  D000               	goto	l2887
  4598  00E0FC                     l2887:
  4599  00E0FC  5006               	movf	___awdiv@sign,w,c
  4600  00E0FE  B4D8               	btfsc	status,2,c
  4601  00E100  D005               	goto	l2891
  4602  00E102  6C07               	negf	___awdiv@quotient,c
  4603  00E104  1E08               	comf	___awdiv@quotient+1,f,c
  4604  00E106  B0D8               	btfsc	status,0,c
  4605  00E108  2A08               	incf	___awdiv@quotient+1,f,c
  4606  00E10A  D000               	goto	l2891
  4607  00E10C                     l2891:
  4608  00E10C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4609  00E110  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4610  00E114  0012               	return	
  4611  00E116  0012               	return		;funcret
  4612  00E118                     __end_of___awdiv:
  4613                           	opt stack 0
  4614                           tblptru	equ	0xFF8
  4615                           tblptrh	equ	0xFF7
  4616                           tblptrl	equ	0xFF6
  4617                           tablat	equ	0xFF5
  4618                           prodl	equ	0xFF3
  4619                           postinc0	equ	0xFEE
  4620                           wreg	equ	0xFE8
  4621                           postdec1	equ	0xFE5
  4622                           fsr1l	equ	0xFE1
  4623                           indf2	equ	0xFDF
  4624                           fsr2h	equ	0xFDA
  4625                           fsr2l	equ	0xFD9
  4626                           status	equ	0xFD8
  4627                           
  4628 ;; *************** function _RtccWriteTime *****************
  4629 ;; Defined at:
  4630 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  pTm             2    0[COMRAM] PTR const struct .
  4633 ;;		 -> RtccTime(4), 
  4634 ;;  di              1    2[COMRAM] enum E7121
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  tempHourWDay    2    9[COMRAM] struct .
  4637 ;;  tempMinSec      2    7[COMRAM] struct .
  4638 ;;  wasWrEn         1    6[COMRAM] enum E7121
  4639 ;;  wasAlrm         1    5[COMRAM] enum E7121
  4640 ;;  wasOn           1    4[COMRAM] enum E7121
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      enum E7337
  4643 ;; Registers used:
  4644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4650 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4651 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4653 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4654 ;;Total ram usage:       11 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    1
  4657 ;; This function calls:
  4658 ;;		_RtccWrOn
  4659 ;; This function is called by:
  4660 ;;		_Write_RTC
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text7
  4665  00E1D6                     __ptext7:
  4666                           	opt stack 0
  4667  00E1D6                     _RtccWriteTime:
  4668                           	opt stack 28
  4669                           
  4670                           ;incstack = 0
  4671  00E1D6  0E00               	movlw	0
  4672  00E1D8  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4673  00E1DA  EE20 F002          	lfsr	2,2
  4674  00E1DE  5001               	movf	RtccWriteTime@pTm,w,c
  4675  00E1E0  26D9               	addwf	fsr2l,f,c
  4676  00E1E2  5002               	movf	RtccWriteTime@pTm+1,w,c
  4677  00E1E4  22DA               	addwfc	fsr2h,f,c
  4678  00E1E6  0E5A               	movlw	90
  4679  00E1E8  60DF               	cpfslt	indf2,c
  4680  00E1EA  0012               	return	
  4681  00E1EC  EE20 F001          	lfsr	2,1
  4682  00E1F0  5001               	movf	RtccWriteTime@pTm,w,c
  4683  00E1F2  26D9               	addwf	fsr2l,f,c
  4684  00E1F4  5002               	movf	RtccWriteTime@pTm+1,w,c
  4685  00E1F6  22DA               	addwfc	fsr2h,f,c
  4686  00E1F8  0E5A               	movlw	90
  4687  00E1FA  60DF               	cpfslt	indf2,c
  4688  00E1FC  0012               	return	
  4689  00E1FE  EE20 F003          	lfsr	2,3
  4690  00E202  5001               	movf	RtccWriteTime@pTm,w,c
  4691  00E204  26D9               	addwf	fsr2l,f,c
  4692  00E206  5002               	movf	RtccWriteTime@pTm+1,w,c
  4693  00E208  22DA               	addwfc	fsr2h,f,c
  4694  00E20A  0E24               	movlw	36
  4695  00E20C  64DF               	cpfsgt	indf2,c
  4696  00E20E  D002               	goto	l2665
  4697  00E210  0012               	return	
  4698                           
  4699                           ;	Return value of _RtccWriteTime is never used
  4700  00E212  0012               	return	
  4701  00E214                     l2665:
  4702  00E214  EE20 F002          	lfsr	2,2
  4703  00E218  5001               	movf	RtccWriteTime@pTm,w,c
  4704  00E21A  26D9               	addwf	fsr2l,f,c
  4705  00E21C  5002               	movf	RtccWriteTime@pTm+1,w,c
  4706  00E21E  22DA               	addwfc	fsr2h,f,c
  4707  00E220  50DF               	movf	indf2,w,c
  4708  00E222  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  4709  00E224  EE20 F001          	lfsr	2,1
  4710  00E228  5001               	movf	RtccWriteTime@pTm,w,c
  4711  00E22A  26D9               	addwf	fsr2l,f,c
  4712  00E22C  5002               	movf	RtccWriteTime@pTm+1,w,c
  4713  00E22E  22DA               	addwfc	fsr2h,f,c
  4714  00E230  50DF               	movf	indf2,w,c
  4715  00E232  6E08               	movwf	RtccWriteTime@tempMinSec,c
  4716  00E234  5003               	movf	RtccWriteTime@di,w,c
  4717  00E236  B4D8               	btfsc	status,2,c
  4718  00E238  D002               	goto	l2671
  4719  00E23A  9CF2               	bcf	intcon,6,c	;volatile
  4720  00E23C  D000               	goto	l2671
  4721  00E23E                     l2671:
  4722  00E23E  0E00               	movlw	0
  4723  00E240  BB3F               	btfsc	63,5,b	;volatile
  4724  00E242  0E01               	movlw	1
  4725  00E244  6E07               	movwf	RtccWriteTime@wasWrEn,c
  4726  00E246  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4727  00E248  A4D8               	btfss	status,2,c
  4728  00E24A  D003               	goto	l2675
  4729  00E24C  EC32  F06E         	call	_RtccWrOn	;wreg free
  4730  00E250  D000               	goto	l2675
  4731  00E252                     l2675:
  4732  00E252  0E00               	movlw	0
  4733  00E254  BF3F               	btfsc	63,7,b	;volatile
  4734  00E256  0E01               	movlw	1
  4735  00E258  6E05               	movwf	RtccWriteTime@wasOn,c
  4736  00E25A  5005               	movf	RtccWriteTime@wasOn,w,c
  4737  00E25C  B4D8               	btfsc	status,2,c
  4738  00E25E  D007               	goto	l2681
  4739  00E260  0E00               	movlw	0
  4740  00E262  BE91               	btfsc	3985,7,c	;volatile
  4741  00E264  0E01               	movlw	1
  4742  00E266  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4743  00E268  010F               	movlb	15	; () banked
  4744  00E26A  9F3F               	bcf	63,7,b	;volatile
  4745  00E26C  D000               	goto	l2681
  4746  00E26E                     l2681:
  4747  00E26E  0EFC               	movlw	252
  4748  00E270  010F               	movlb	15	; () banked
  4749  00E272  173F               	andwf	63,f,b	;volatile
  4750  00E274  010F               	movlb	15	; () banked
  4751  00E276  813F               	bsf	63,0,b	;volatile
  4752                           
  4753                           ; BSR set to: 15
  4754  00E278  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  4755                           
  4756                           ; BSR set to: 15
  4757  00E27C  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  4758                           
  4759                           ; BSR set to: 15
  4760  00E280  EE20 F003          	lfsr	2,3
  4761  00E284  5001               	movf	RtccWriteTime@pTm,w,c
  4762  00E286  26D9               	addwf	fsr2l,f,c
  4763  00E288  5002               	movf	RtccWriteTime@pTm+1,w,c
  4764  00E28A  22DA               	addwfc	fsr2h,f,c
  4765  00E28C  50DF               	movf	indf2,w,c
  4766  00E28E  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  4767                           
  4768                           ; BSR set to: 15
  4769  00E290  0EFC               	movlw	252
  4770  00E292  010F               	movlb	15	; () banked
  4771  00E294  173F               	andwf	63,f,b	;volatile
  4772                           
  4773                           ; BSR set to: 15
  4774  00E296  010F               	movlb	15	; () banked
  4775  00E298  813F               	bsf	63,0,b	;volatile
  4776                           
  4777                           ; BSR set to: 15
  4778  00E29A  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  4779                           
  4780                           ; BSR set to: 15
  4781  00E29E  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  4782                           
  4783                           ; BSR set to: 15
  4784  00E2A2  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  4785                           
  4786                           ; BSR set to: 15
  4787  00E2A6  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  4788                           
  4789                           ; BSR set to: 15
  4790  00E2AA  5005               	movf	RtccWriteTime@wasOn,w,c
  4791  00E2AC  B4D8               	btfsc	status,2,c
  4792  00E2AE  D00D               	goto	l2713
  4793                           
  4794                           ; BSR set to: 15
  4795  00E2B0  010F               	movlb	15	; () banked
  4796  00E2B2  8F3F               	bsf	63,7,b	;volatile
  4797                           
  4798                           ; BSR set to: 15
  4799  00E2B4  5006               	movf	RtccWriteTime@wasAlrm,w,c
  4800  00E2B6  B4D8               	btfsc	status,2,c
  4801  00E2B8  D002               	goto	l2709
  4802                           
  4803                           ; BSR set to: 15
  4804  00E2BA  8E91               	bsf	3985,7,c	;volatile
  4805  00E2BC  D000               	goto	l2709
  4806  00E2BE                     l2709:
  4807                           
  4808                           ; BSR set to: 15
  4809  00E2BE  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4810  00E2C0  B4D8               	btfsc	status,2,c
  4811  00E2C2  D009               	goto	l2717
  4812                           
  4813                           ; BSR set to: 15
  4814  00E2C4  EC32  F06E         	call	_RtccWrOn	;wreg free
  4815  00E2C8  D006               	goto	l2717
  4816  00E2CA                     l2713:
  4817  00E2CA  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4818  00E2CC  A4D8               	btfss	status,2,c
  4819  00E2CE  D003               	goto	l2717
  4820  00E2D0  010F               	movlb	15	; () banked
  4821  00E2D2  9B3F               	bcf	63,5,b	;volatile
  4822                           
  4823                           ; BSR set to: 15
  4824  00E2D4  D000               	goto	l2717
  4825  00E2D6                     l2717:
  4826  00E2D6  5003               	movf	RtccWriteTime@di,w,c
  4827  00E2D8  B4D8               	btfsc	status,2,c
  4828  00E2DA  0012               	return	
  4829  00E2DC  8CF2               	bsf	intcon,6,c	;volatile
  4830  00E2DE  0012               	return	
  4831                           
  4832                           ;	Return value of _RtccWriteTime is never used
  4833  00E2E0  0012               	return		;funcret
  4834  00E2E2                     __end_of_RtccWriteTime:
  4835                           	opt stack 0
  4836                           tblptru	equ	0xFF8
  4837                           tblptrh	equ	0xFF7
  4838                           tblptrl	equ	0xFF6
  4839                           tablat	equ	0xFF5
  4840                           prodl	equ	0xFF3
  4841                           intcon	equ	0xFF2
  4842                           postinc0	equ	0xFEE
  4843                           wreg	equ	0xFE8
  4844                           postdec1	equ	0xFE5
  4845                           fsr1l	equ	0xFE1
  4846                           indf2	equ	0xFDF
  4847                           fsr2h	equ	0xFDA
  4848                           fsr2l	equ	0xFD9
  4849                           status	equ	0xFD8
  4850                           
  4851 ;; *************** function _RtccWriteDate *****************
  4852 ;; Defined at:
  4853 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  pDt             2    0[COMRAM] PTR const struct .
  4856 ;;		 -> RtccDate(4), 
  4857 ;;  di              1    2[COMRAM] enum E7121
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  tempHourWDay    2   11[COMRAM] struct .
  4860 ;;  tempDayMonth    2    9[COMRAM] struct .
  4861 ;;  tempYear        2    6[COMRAM] struct .
  4862 ;;  wasWrEn         1    8[COMRAM] enum E7121
  4863 ;;  wasAlrm         1    5[COMRAM] enum E7121
  4864 ;;  wasOn           1    4[COMRAM] enum E7121
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      enum E7337
  4867 ;; Registers used:
  4868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4874 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4875 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4877 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4878 ;;Total ram usage:       13 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    1
  4881 ;; This function calls:
  4882 ;;		_RtccWrOn
  4883 ;; This function is called by:
  4884 ;;		_Write_RTC
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text8
  4889  00E89C                     __ptext8:
  4890                           	opt stack 0
  4891  00E89C                     _RtccWriteDate:
  4892                           	opt stack 28
  4893                           
  4894                           ;incstack = 0
  4895  00E89C  0E00               	movlw	0
  4896  00E89E  6E06               	movwf	RtccWriteDate@wasAlrm,c
  4897  00E8A0  EE20 F002          	lfsr	2,2
  4898  00E8A4  5001               	movf	RtccWriteDate@pDt,w,c
  4899  00E8A6  26D9               	addwf	fsr2l,f,c
  4900  00E8A8  5002               	movf	RtccWriteDate@pDt+1,w,c
  4901  00E8AA  22DA               	addwfc	fsr2h,f,c
  4902  00E8AC  0E13               	movlw	19
  4903  00E8AE  60DF               	cpfslt	indf2,c
  4904  00E8B0  0012               	return	
  4905  00E8B2  EE20 F002          	lfsr	2,2
  4906  00E8B6  5001               	movf	RtccWriteDate@pDt,w,c
  4907  00E8B8  26D9               	addwf	fsr2l,f,c
  4908  00E8BA  5002               	movf	RtccWriteDate@pDt+1,w,c
  4909  00E8BC  22DA               	addwfc	fsr2h,f,c
  4910  00E8BE  50DF               	movf	indf2,w,c
  4911  00E8C0  B4D8               	btfsc	status,2,c
  4912  00E8C2  0012               	return	
  4913  00E8C4  EE20 F001          	lfsr	2,1
  4914  00E8C8  5001               	movf	RtccWriteDate@pDt,w,c
  4915  00E8CA  26D9               	addwf	fsr2l,f,c
  4916  00E8CC  5002               	movf	RtccWriteDate@pDt+1,w,c
  4917  00E8CE  22DA               	addwfc	fsr2h,f,c
  4918  00E8D0  0E32               	movlw	50
  4919  00E8D2  60DF               	cpfslt	indf2,c
  4920  00E8D4  0012               	return	
  4921  00E8D6  EE20 F001          	lfsr	2,1
  4922  00E8DA  5001               	movf	RtccWriteDate@pDt,w,c
  4923  00E8DC  26D9               	addwf	fsr2l,f,c
  4924  00E8DE  5002               	movf	RtccWriteDate@pDt+1,w,c
  4925  00E8E0  22DA               	addwfc	fsr2h,f,c
  4926  00E8E2  50DF               	movf	indf2,w,c
  4927  00E8E4  B4D8               	btfsc	status,2,c
  4928  00E8E6  0012               	return	
  4929  00E8E8  EE20 F003          	lfsr	2,3
  4930  00E8EC  5001               	movf	RtccWriteDate@pDt,w,c
  4931  00E8EE  26D9               	addwf	fsr2l,f,c
  4932  00E8F0  5002               	movf	RtccWriteDate@pDt+1,w,c
  4933  00E8F2  22DA               	addwfc	fsr2h,f,c
  4934  00E8F4  0E99               	movlw	153
  4935  00E8F6  64DF               	cpfsgt	indf2,c
  4936  00E8F8  D002               	goto	l2733
  4937  00E8FA  0012               	return	
  4938                           
  4939                           ;	Return value of _RtccWriteDate is never used
  4940  00E8FC  0012               	return	
  4941  00E8FE                     l2733:
  4942  00E8FE  EE20 F003          	lfsr	2,3
  4943  00E902  5001               	movf	RtccWriteDate@pDt,w,c
  4944  00E904  26D9               	addwf	fsr2l,f,c
  4945  00E906  5002               	movf	RtccWriteDate@pDt+1,w,c
  4946  00E908  22DA               	addwfc	fsr2h,f,c
  4947  00E90A  50DF               	movf	indf2,w,c
  4948  00E90C  6E07               	movwf	RtccWriteDate@tempYear,c
  4949  00E90E  EE20 F001          	lfsr	2,1
  4950  00E912  5001               	movf	RtccWriteDate@pDt,w,c
  4951  00E914  26D9               	addwf	fsr2l,f,c
  4952  00E916  5002               	movf	RtccWriteDate@pDt+1,w,c
  4953  00E918  22DA               	addwfc	fsr2h,f,c
  4954  00E91A  50DF               	movf	indf2,w,c
  4955  00E91C  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  4956  00E91E  EE20 F002          	lfsr	2,2
  4957  00E922  5001               	movf	RtccWriteDate@pDt,w,c
  4958  00E924  26D9               	addwf	fsr2l,f,c
  4959  00E926  5002               	movf	RtccWriteDate@pDt+1,w,c
  4960  00E928  22DA               	addwfc	fsr2h,f,c
  4961  00E92A  50DF               	movf	indf2,w,c
  4962  00E92C  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  4963  00E92E  5003               	movf	RtccWriteDate@di,w,c
  4964  00E930  B4D8               	btfsc	status,2,c
  4965  00E932  D002               	goto	l2739
  4966  00E934  9CF2               	bcf	intcon,6,c	;volatile
  4967  00E936  D000               	goto	l2739
  4968  00E938                     l2739:
  4969  00E938  0E00               	movlw	0
  4970  00E93A  BB3F               	btfsc	63,5,b	;volatile
  4971  00E93C  0E01               	movlw	1
  4972  00E93E  6E09               	movwf	RtccWriteDate@wasWrEn,c
  4973  00E940  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4974  00E942  A4D8               	btfss	status,2,c
  4975  00E944  D003               	goto	l2743
  4976  00E946  EC32  F06E         	call	_RtccWrOn	;wreg free
  4977  00E94A  D000               	goto	l2743
  4978  00E94C                     l2743:
  4979  00E94C  0E00               	movlw	0
  4980  00E94E  BF3F               	btfsc	63,7,b	;volatile
  4981  00E950  0E01               	movlw	1
  4982  00E952  6E05               	movwf	RtccWriteDate@wasOn,c
  4983  00E954  5005               	movf	RtccWriteDate@wasOn,w,c
  4984  00E956  B4D8               	btfsc	status,2,c
  4985  00E958  D007               	goto	l2749
  4986  00E95A  0E00               	movlw	0
  4987  00E95C  BE91               	btfsc	3985,7,c	;volatile
  4988  00E95E  0E01               	movlw	1
  4989  00E960  6E06               	movwf	RtccWriteDate@wasAlrm,c
  4990  00E962  010F               	movlb	15	; () banked
  4991  00E964  9F3F               	bcf	63,7,b	;volatile
  4992  00E966  D000               	goto	l2749
  4993  00E968                     l2749:
  4994  00E968  0EFC               	movlw	252
  4995  00E96A  010F               	movlb	15	; () banked
  4996  00E96C  173F               	andwf	63,f,b	;volatile
  4997  00E96E  010F               	movlb	15	; () banked
  4998  00E970  813F               	bsf	63,0,b	;volatile
  4999                           
  5000                           ; BSR set to: 15
  5001  00E972  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  5002                           
  5003                           ; BSR set to: 15
  5004  00E976  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  5005                           
  5006                           ; BSR set to: 15
  5007  00E97A  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  5008  00E97E  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  5009  00E982  50DF               	movf	indf2,w,c
  5010  00E984  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  5011                           
  5012                           ; BSR set to: 15
  5013  00E986  0EFC               	movlw	252
  5014  00E988  010F               	movlb	15	; () banked
  5015  00E98A  173F               	andwf	63,f,b	;volatile
  5016                           
  5017                           ; BSR set to: 15
  5018  00E98C  0E03               	movlw	3
  5019  00E98E  010F               	movlb	15	; () banked
  5020  00E990  133F               	iorwf	63,f,b	;volatile
  5021                           
  5022                           ; BSR set to: 15
  5023  00E992  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  5024                           
  5025                           ; BSR set to: 15
  5026  00E996  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  5027                           
  5028                           ; BSR set to: 15
  5029  00E99A  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  5030                           
  5031                           ; BSR set to: 15
  5032  00E99E  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  5033                           
  5034                           ; BSR set to: 15
  5035  00E9A2  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  5036                           
  5037                           ; BSR set to: 15
  5038  00E9A6  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  5039                           
  5040                           ; BSR set to: 15
  5041  00E9AA  5005               	movf	RtccWriteDate@wasOn,w,c
  5042  00E9AC  B4D8               	btfsc	status,2,c
  5043  00E9AE  D00D               	goto	l2785
  5044                           
  5045                           ; BSR set to: 15
  5046  00E9B0  010F               	movlb	15	; () banked
  5047  00E9B2  8F3F               	bsf	63,7,b	;volatile
  5048                           
  5049                           ; BSR set to: 15
  5050  00E9B4  5006               	movf	RtccWriteDate@wasAlrm,w,c
  5051  00E9B6  B4D8               	btfsc	status,2,c
  5052  00E9B8  D002               	goto	l2781
  5053                           
  5054                           ; BSR set to: 15
  5055  00E9BA  8E91               	bsf	3985,7,c	;volatile
  5056  00E9BC  D000               	goto	l2781
  5057  00E9BE                     l2781:
  5058                           
  5059                           ; BSR set to: 15
  5060  00E9BE  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5061  00E9C0  B4D8               	btfsc	status,2,c
  5062  00E9C2  D009               	goto	l2789
  5063                           
  5064                           ; BSR set to: 15
  5065  00E9C4  EC32  F06E         	call	_RtccWrOn	;wreg free
  5066  00E9C8  D006               	goto	l2789
  5067  00E9CA                     l2785:
  5068  00E9CA  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5069  00E9CC  A4D8               	btfss	status,2,c
  5070  00E9CE  D003               	goto	l2789
  5071  00E9D0  010F               	movlb	15	; () banked
  5072  00E9D2  9B3F               	bcf	63,5,b	;volatile
  5073                           
  5074                           ; BSR set to: 15
  5075  00E9D4  D000               	goto	l2789
  5076  00E9D6                     l2789:
  5077  00E9D6  5003               	movf	RtccWriteDate@di,w,c
  5078  00E9D8  B4D8               	btfsc	status,2,c
  5079  00E9DA  0012               	return	
  5080  00E9DC  9CF2               	bcf	intcon,6,c	;volatile
  5081  00E9DE  0012               	return	
  5082                           
  5083                           ;	Return value of _RtccWriteDate is never used
  5084  00E9E0  0012               	return		;funcret
  5085  00E9E2                     __end_of_RtccWriteDate:
  5086                           	opt stack 0
  5087                           tblptru	equ	0xFF8
  5088                           tblptrh	equ	0xFF7
  5089                           tblptrl	equ	0xFF6
  5090                           tablat	equ	0xFF5
  5091                           prodl	equ	0xFF3
  5092                           intcon	equ	0xFF2
  5093                           postinc0	equ	0xFEE
  5094                           wreg	equ	0xFE8
  5095                           postdec1	equ	0xFE5
  5096                           fsr1l	equ	0xFE1
  5097                           indf2	equ	0xFDF
  5098                           fsr2h	equ	0xFDA
  5099                           fsr2l	equ	0xFD9
  5100                           status	equ	0xFD8
  5101                           
  5102 ;; *************** function _RtccWrOn *****************
  5103 ;; Defined at:
  5104 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;		None
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  data            2    0        unsigned int 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;		None               void
  5111 ;; Registers used:
  5112 ;;		wreg, status,2
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5122 ;;Total ram usage:        0 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_Write_RTC
  5128 ;;		_RtccWriteDate
  5129 ;;		_RtccWriteTime
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text9
  5134  00DC64                     __ptext9:
  5135                           	opt stack 0
  5136  00DC64                     _RtccWrOn:
  5137                           	opt stack 28
  5138                           
  5139                           ;incstack = 0
  5140  00DC64  9CF2               	bcf	intcon,6,c	;volatile
  5141  00DC66  0E55               	movlw	85
  5142  00DC68  6EA7               	movwf	4007,c	;volatile
  5143  00DC6A  0EAA               	movlw	170
  5144  00DC6C  6EA7               	movwf	4007,c	;volatile
  5145  00DC6E  010F               	movlb	15	; () banked
  5146  00DC70  8B3F               	bsf	63,5,b	;volatile
  5147                           
  5148                           ; BSR set to: 15
  5149  00DC72  8CF2               	bsf	intcon,6,c	;volatile
  5150                           
  5151                           ; BSR set to: 15
  5152  00DC74  0012               	return		;funcret
  5153  00DC76                     __end_of_RtccWrOn:
  5154                           	opt stack 0
  5155                           tblptru	equ	0xFF8
  5156                           tblptrh	equ	0xFF7
  5157                           tblptrl	equ	0xFF6
  5158                           tablat	equ	0xFF5
  5159                           prodl	equ	0xFF3
  5160                           intcon	equ	0xFF2
  5161                           postinc0	equ	0xFEE
  5162                           wreg	equ	0xFE8
  5163                           postdec1	equ	0xFE5
  5164                           fsr1l	equ	0xFE1
  5165                           indf2	equ	0xFDF
  5166                           fsr2h	equ	0xFDA
  5167                           fsr2l	equ	0xFD9
  5168                           status	equ	0xFD8
  5169                           
  5170 ;; *************** function _V_Principal *****************
  5171 ;; Defined at:
  5172 ;;		line 217 in file "../main.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;		None
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  cte             2   68[COMRAM] PTR unsigned char 
  5177 ;;		 -> Convert_diasem@buffer_dia(20), 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;		None               void
  5180 ;; Registers used:
  5181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5191 ;;Total ram usage:        2 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    3
  5194 ;; This function calls:
  5195 ;;		_Convert_diasem
  5196 ;;		_Lcd_Out
  5197 ;;		_Read_RTC
  5198 ;;		_lee_temperatura
  5199 ;;		_sprintf
  5200 ;; This function is called by:
  5201 ;;		_main
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text10
  5206  00E118                     __ptext10:
  5207                           	opt stack 0
  5208  00E118                     _V_Principal:
  5209                           	opt stack 27
  5210                           
  5211                           ;main.c: 218: Read_RTC();
  5212                           
  5213                           ; BSR set to: 15
  5214                           ;incstack = 0
  5215  00E118  ECB1  F073         	call	_Read_RTC	;wreg free
  5216                           
  5217                           ;main.c: 219: lee_temperatura();
  5218  00E11C  EC3B  F06E         	call	_lee_temperatura	;wreg free
  5219                           
  5220                           ;main.c: 220: Lcd_Out(1, 0, "                    ");
  5221  00E120  0E00               	movlw	0
  5222  00E122  6E40               	movwf	Lcd_Out@x,c
  5223  00E124  0ED7               	movlw	low STR_4
  5224  00E126  6E41               	movwf	Lcd_Out@buffer,c
  5225  00E128  0EFE               	movlw	high STR_4
  5226  00E12A  6E42               	movwf	Lcd_Out@buffer+1,c
  5227  00E12C  0E01               	movlw	1
  5228  00E12E  ECF7  F06F         	call	_Lcd_Out
  5229                           
  5230                           ;main.c: 221: char* cte = Convert_diasem(diasem);
  5231  00E132  C07C  F028         	movff	_diasem,Convert_diasem@dia
  5232  00E136  C07D  F029         	movff	_diasem+1,Convert_diasem@dia+1
  5233  00E13A  ECFE  F071         	call	_Convert_diasem	;wreg free
  5234  00E13E  C028  F045         	movff	?_Convert_diasem,V_Principal@cte
  5235  00E142  C029  F046         	movff	?_Convert_diasem+1,V_Principal@cte+1
  5236                           
  5237                           ;main.c: 223: Lcd_Out(2, 0, cte);
  5238  00E146  0E00               	movlw	0
  5239  00E148  6E40               	movwf	Lcd_Out@x,c
  5240  00E14A  C045  F041         	movff	V_Principal@cte,Lcd_Out@buffer
  5241  00E14E  C046  F042         	movff	V_Principal@cte+1,Lcd_Out@buffer+1
  5242  00E152  0E02               	movlw	2
  5243  00E154  ECF7  F06F         	call	_Lcd_Out
  5244                           
  5245                           ;main.c: 225: sprintf(buffer1, "%02u/%02u/%02u             ", dia, mes, anio);
  5246  00E158  0E8B               	movlw	low _buffer1
  5247  00E15A  6E0D               	movwf	sprintf@sp,c
  5248  00E15C  0E00               	movlw	high _buffer1
  5249  00E15E  6E0E               	movwf	sprintf@sp+1,c
  5250  00E160  0E9F               	movlw	low STR_5
  5251  00E162  6E0F               	movwf	sprintf@f,c
  5252  00E164  0EFE               	movlw	high STR_5
  5253  00E166  6E10               	movwf	sprintf@f+1,c
  5254  00E168  C0E5  F011         	movff	_dia,?_sprintf+4
  5255  00E16C  C0E6  F012         	movff	_dia+1,?_sprintf+5
  5256  00E170  C0E7  F013         	movff	_mes,?_sprintf+6
  5257  00E174  C0E8  F014         	movff	_mes+1,?_sprintf+7
  5258  00E178  C052  F015         	movff	_anio,?_sprintf+8
  5259  00E17C  C053  F016         	movff	_anio+1,?_sprintf+9
  5260  00E180  EC97  F076         	call	_sprintf	;wreg free
  5261                           
  5262                           ;main.c: 226: Lcd_Out(3, 0, buffer1);
  5263  00E184  0E00               	movlw	0
  5264  00E186  6E40               	movwf	Lcd_Out@x,c
  5265  00E188  0E8B               	movlw	low _buffer1
  5266  00E18A  6E41               	movwf	Lcd_Out@buffer,c
  5267  00E18C  0E00               	movlw	high _buffer1
  5268  00E18E  6E42               	movwf	Lcd_Out@buffer+1,c
  5269  00E190  0E03               	movlw	3
  5270  00E192  ECF7  F06F         	call	_Lcd_Out
  5271                           
  5272                           ;main.c: 227: sprintf(buffer1, "%02u:%02u:%02u             ", hora, minuto, segundo);
  5273  00E196  0E8B               	movlw	low _buffer1
  5274  00E198  6E0D               	movwf	sprintf@sp,c
  5275  00E19A  0E00               	movlw	high _buffer1
  5276  00E19C  6E0E               	movwf	sprintf@sp+1,c
  5277  00E19E  0EBB               	movlw	low STR_6
  5278  00E1A0  6E0F               	movwf	sprintf@f,c
  5279  00E1A2  0EFE               	movlw	high STR_6
  5280  00E1A4  6E10               	movwf	sprintf@f+1,c
  5281  00E1A6  C054  F011         	movff	_hora,?_sprintf+4
  5282  00E1AA  C055  F012         	movff	_hora+1,?_sprintf+5
  5283  00E1AE  C056  F013         	movff	_minuto,?_sprintf+6
  5284  00E1B2  C057  F014         	movff	_minuto+1,?_sprintf+7
  5285  00E1B6  C080  F015         	movff	_segundo,?_sprintf+8
  5286  00E1BA  C081  F016         	movff	_segundo+1,?_sprintf+9
  5287  00E1BE  EC97  F076         	call	_sprintf	;wreg free
  5288                           
  5289                           ;main.c: 228: Lcd_Out(4, 0, buffer1);
  5290  00E1C2  0E00               	movlw	0
  5291  00E1C4  6E40               	movwf	Lcd_Out@x,c
  5292  00E1C6  0E8B               	movlw	low _buffer1
  5293  00E1C8  6E41               	movwf	Lcd_Out@buffer,c
  5294  00E1CA  0E00               	movlw	high _buffer1
  5295  00E1CC  6E42               	movwf	Lcd_Out@buffer+1,c
  5296  00E1CE  0E04               	movlw	4
  5297  00E1D0  ECF7  F06F         	call	_Lcd_Out
  5298  00E1D4  0012               	return		;funcret
  5299  00E1D6                     __end_of_V_Principal:
  5300                           	opt stack 0
  5301                           tblptru	equ	0xFF8
  5302                           tblptrh	equ	0xFF7
  5303                           tblptrl	equ	0xFF6
  5304                           tablat	equ	0xFF5
  5305                           prodl	equ	0xFF3
  5306                           intcon	equ	0xFF2
  5307                           postinc0	equ	0xFEE
  5308                           wreg	equ	0xFE8
  5309                           postdec1	equ	0xFE5
  5310                           fsr1l	equ	0xFE1
  5311                           indf2	equ	0xFDF
  5312                           fsr2h	equ	0xFDA
  5313                           fsr2l	equ	0xFD9
  5314                           status	equ	0xFD8
  5315                           
  5316 ;; *************** function _lee_temperatura *****************
  5317 ;; Defined at:
  5318 ;;		line 640 in file "../main.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;		None
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;		None               void
  5325 ;; Registers used:
  5326 ;;		wreg
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5336 ;;Total ram usage:        1 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_V_Principal
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           	psect	text11
  5346  00DC76                     __ptext11:
  5347                           	opt stack 0
  5348  00DC76                     _lee_temperatura:
  5349                           	opt stack 29
  5350                           
  5351                           ;main.c: 642: ADCON0bits.ADON = 1;
  5352                           
  5353                           ;incstack = 0
  5354  00DC76  80C2               	bsf	4034,0,c	;volatile
  5355                           
  5356                           ;main.c: 643: ADCON0bits.GO = 1;
  5357  00DC78  82C2               	bsf	4034,1,c	;volatile
  5358                           
  5359                           ;main.c: 644: while (ADCON0bits.GO);
  5360  00DC7A  D000               	goto	l334
  5361  00DC7C                     l334:
  5362  00DC7C  B2C2               	btfsc	4034,1,c	;volatile
  5363  00DC7E  D7FE               	goto	l334
  5364                           
  5365                           ;main.c: 645: _delay((unsigned long)((1)*(8000000/4000.0)));
  5366  00DC80  0E03               	movlw	3
  5367  00DC82  6E01               	movwf	??_lee_temperatura& (0+255),c
  5368  00DC84  0E98               	movlw	152
  5369  00DC86                     u3957:
  5370  00DC86  2EE8               	decfsz	wreg,f,c
  5371  00DC88  D7FE               	goto	u3957
  5372  00DC8A  2E01               	decfsz	??_lee_temperatura& (0+255),f,c
  5373  00DC8C  D7FC               	goto	u3957
  5374                           
  5375                           ;main.c: 646: lectura = ADRESH;
  5376  00DC8E  CFC4 F08A          	movff	4036,_lectura	;volatile
  5377                           
  5378                           ;main.c: 647: ADCON0bits.ADON = 0;
  5379  00DC92  90C2               	bcf	4034,0,c	;volatile
  5380  00DC94  0012               	return		;funcret
  5381  00DC96                     __end_of_lee_temperatura:
  5382                           	opt stack 0
  5383                           tblptru	equ	0xFF8
  5384                           tblptrh	equ	0xFF7
  5385                           tblptrl	equ	0xFF6
  5386                           tablat	equ	0xFF5
  5387                           prodl	equ	0xFF3
  5388                           intcon	equ	0xFF2
  5389                           postinc0	equ	0xFEE
  5390                           wreg	equ	0xFE8
  5391                           postdec1	equ	0xFE5
  5392                           fsr1l	equ	0xFE1
  5393                           indf2	equ	0xFDF
  5394                           fsr2h	equ	0xFDA
  5395                           fsr2l	equ	0xFD9
  5396                           status	equ	0xFD8
  5397                           
  5398 ;; *************** function _Read_RTC *****************
  5399 ;; Defined at:
  5400 ;;		line 607 in file "../main.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;		None
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;		None
  5405 ;; Return value:  Size  Location     Type
  5406 ;;		None               void
  5407 ;; Registers used:
  5408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5418 ;;Total ram usage:        0 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:    1
  5421 ;; This function calls:
  5422 ;;		_RtccReadDate
  5423 ;;		_RtccReadTime
  5424 ;; This function is called by:
  5425 ;;		_V_Principal
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text12
  5430  00E762                     __ptext12:
  5431                           	opt stack 0
  5432  00E762                     _Read_RTC:
  5433                           	opt stack 28
  5434                           
  5435                           ;main.c: 610: RtccReadTime(&RtccTime);
  5436                           
  5437                           ;incstack = 0
  5438  00E762  0EA3               	movlw	low _RtccTime
  5439  00E764  6E01               	movwf	RtccReadTime@pTm,c
  5440  00E766  0E00               	movlw	high _RtccTime
  5441  00E768  6E02               	movwf	RtccReadTime@pTm+1,c
  5442  00E76A  EC41  F06F         	call	_RtccReadTime	;wreg free
  5443                           
  5444                           ;main.c: 611: segundo_u = (RtccTime.f.sec & 0x0F);
  5445  00E76E  0100               	movlb	0	; () banked
  5446  00E770  51A4               	movf	(_RtccTime+1)& (0+255),w,b
  5447  00E772  0B0F               	andlw	15
  5448  00E774  0100               	movlb	0	; () banked
  5449  00E776  6FF5               	movwf	_segundo_u& (0+255),b
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;main.c: 612: segundo_d = ((RtccTime.f.sec & 0xF0) >> 4);
  5453  00E778  0100               	movlb	0	; () banked
  5454  00E77A  39A4               	swapf	(_RtccTime+1)& (0+255),w,b
  5455  00E77C  0B0F               	andlw	15
  5456  00E77E  0B0F               	andlw	15
  5457  00E780  0100               	movlb	0	; () banked
  5458  00E782  6FF4               	movwf	_segundo_d& (0+255),b
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;main.c: 613: minuto_u = (RtccTime.f.min & 0x0F);
  5462  00E784  0100               	movlb	0	; () banked
  5463  00E786  51A5               	movf	(_RtccTime+2)& (0+255),w,b
  5464  00E788  0B0F               	andlw	15
  5465  00E78A  0100               	movlb	0	; () banked
  5466  00E78C  6FF3               	movwf	_minuto_u& (0+255),b
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;main.c: 614: minuto_d = ((RtccTime.f.min & 0xF0) >> 4);
  5470  00E78E  0100               	movlb	0	; () banked
  5471  00E790  39A5               	swapf	(_RtccTime+2)& (0+255),w,b
  5472  00E792  0B0F               	andlw	15
  5473  00E794  0B0F               	andlw	15
  5474  00E796  0100               	movlb	0	; () banked
  5475  00E798  6FF2               	movwf	_minuto_d& (0+255),b
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;main.c: 615: hora_u = (RtccTime.f.hour & 0x0F);
  5479  00E79A  0100               	movlb	0	; () banked
  5480  00E79C  51A6               	movf	(_RtccTime+3)& (0+255),w,b
  5481  00E79E  0B0F               	andlw	15
  5482  00E7A0  0100               	movlb	0	; () banked
  5483  00E7A2  6FEF               	movwf	_hora_u& (0+255),b
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;main.c: 616: hora_d = ((RtccTime.f.hour & 0xF0) >> 4);
  5487  00E7A4  0100               	movlb	0	; () banked
  5488  00E7A6  39A6               	swapf	(_RtccTime+3)& (0+255),w,b
  5489  00E7A8  0B0F               	andlw	15
  5490  00E7AA  0B0F               	andlw	15
  5491  00E7AC  0100               	movlb	0	; () banked
  5492  00E7AE  6FEE               	movwf	_hora_d& (0+255),b
  5493                           
  5494                           ;main.c: 617: RtccReadDate(&RtccDate);
  5495  00E7B0  0E9F               	movlw	low _RtccDate
  5496  00E7B2  6E01               	movwf	RtccReadDate@pDt,c
  5497  00E7B4  0E00               	movlw	high _RtccDate
  5498  00E7B6  6E02               	movwf	RtccReadDate@pDt+1,c
  5499  00E7B8  ECB0  F06F         	call	_RtccReadDate	;wreg free
  5500                           
  5501                           ;main.c: 618: fecha_u = (RtccDate.f.mday & 0x0F);
  5502  00E7BC  0100               	movlb	0	; () banked
  5503  00E7BE  51A0               	movf	(_RtccDate+1)& (0+255),w,b
  5504  00E7C0  0B0F               	andlw	15
  5505  00E7C2  0100               	movlb	0	; () banked
  5506  00E7C4  6FED               	movwf	_fecha_u& (0+255),b
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;main.c: 619: fecha_d = ((RtccDate.f.mday & 0xF0) >> 4);
  5510  00E7C6  0100               	movlb	0	; () banked
  5511  00E7C8  39A0               	swapf	(_RtccDate+1)& (0+255),w,b
  5512  00E7CA  0B0F               	andlw	15
  5513  00E7CC  0B0F               	andlw	15
  5514  00E7CE  0100               	movlb	0	; () banked
  5515  00E7D0  6FEC               	movwf	_fecha_d& (0+255),b
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;main.c: 620: mes_u = (RtccDate.f.mon & 0x0F);
  5519  00E7D2  0100               	movlb	0	; () banked
  5520  00E7D4  51A1               	movf	(_RtccDate+2)& (0+255),w,b
  5521  00E7D6  0B0F               	andlw	15
  5522  00E7D8  0100               	movlb	0	; () banked
  5523  00E7DA  6FF1               	movwf	_mes_u& (0+255),b
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;main.c: 621: mes_d = ((RtccDate.f.mon & 0xF0) >> 4);
  5527  00E7DC  0100               	movlb	0	; () banked
  5528  00E7DE  39A1               	swapf	(_RtccDate+2)& (0+255),w,b
  5529  00E7E0  0B0F               	andlw	15
  5530  00E7E2  0B0F               	andlw	15
  5531  00E7E4  0100               	movlb	0	; () banked
  5532  00E7E6  6FF0               	movwf	_mes_d& (0+255),b
  5533                           
  5534                           ; BSR set to: 0
  5535                           ;main.c: 622: dia_semana = RtccDate.f.wday;
  5536  00E7E8  C09F  F0EB         	movff	_RtccDate,_dia_semana
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;main.c: 623: anio_u = (RtccDate.f.year & 0x0F);
  5540  00E7EC  0100               	movlb	0	; () banked
  5541  00E7EE  51A2               	movf	(_RtccDate+3)& (0+255),w,b
  5542  00E7F0  0B0F               	andlw	15
  5543  00E7F2  0100               	movlb	0	; () banked
  5544  00E7F4  6FEA               	movwf	_anio_u& (0+255),b
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;main.c: 624: anio_d = ((RtccDate.f.year & 0xF0) >> 4);
  5548  00E7F6  0100               	movlb	0	; () banked
  5549  00E7F8  39A2               	swapf	(_RtccDate+3)& (0+255),w,b
  5550  00E7FA  0B0F               	andlw	15
  5551  00E7FC  0B0F               	andlw	15
  5552  00E7FE  0100               	movlb	0	; () banked
  5553  00E800  6FE9               	movwf	_anio_d& (0+255),b
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;main.c: 625: segundo = segundo_d * 10 + segundo_u;
  5557  00E802  0100               	movlb	0	; () banked
  5558  00E804  51F4               	movf	_segundo_d& (0+255),w,b
  5559  00E806  0D0A               	mullw	10
  5560  00E808  0100               	movlb	0	; () banked
  5561  00E80A  51F5               	movf	_segundo_u& (0+255),w,b
  5562  00E80C  24F3               	addwf	prodl,w,c
  5563  00E80E  0100               	movlb	0	; () banked
  5564  00E810  6F80               	movwf	_segundo& (0+255),b
  5565  00E812  0100               	movlb	0	; () banked
  5566  00E814  0E00               	movlw	0
  5567  00E816  20F4               	addwfc	prodh,w,c
  5568  00E818  0100               	movlb	0	; () banked
  5569  00E81A  6F81               	movwf	(_segundo+1)& (0+255),b
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;main.c: 626: minuto = minuto_d * 10 + minuto_u;
  5573  00E81C  0100               	movlb	0	; () banked
  5574  00E81E  51F2               	movf	_minuto_d& (0+255),w,b
  5575  00E820  0D0A               	mullw	10
  5576  00E822  0100               	movlb	0	; () banked
  5577  00E824  51F3               	movf	_minuto_u& (0+255),w,b
  5578  00E826  24F3               	addwf	prodl,w,c
  5579  00E828  6E56               	movwf	_minuto,c
  5580  00E82A  0100               	movlb	0	; () banked
  5581  00E82C  0E00               	movlw	0
  5582  00E82E  20F4               	addwfc	prodh,w,c
  5583  00E830  6E57               	movwf	_minuto+1,c
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;main.c: 627: hora = hora_d * 10 + hora_u;
  5587  00E832  0100               	movlb	0	; () banked
  5588  00E834  51EE               	movf	_hora_d& (0+255),w,b
  5589  00E836  0D0A               	mullw	10
  5590  00E838  0100               	movlb	0	; () banked
  5591  00E83A  51EF               	movf	_hora_u& (0+255),w,b
  5592  00E83C  24F3               	addwf	prodl,w,c
  5593  00E83E  6E54               	movwf	_hora,c
  5594  00E840  0100               	movlb	0	; () banked
  5595  00E842  0E00               	movlw	0
  5596  00E844  20F4               	addwfc	prodh,w,c
  5597  00E846  6E55               	movwf	_hora+1,c
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;main.c: 628: dia = fecha_d * 10 + fecha_u;
  5601  00E848  0100               	movlb	0	; () banked
  5602  00E84A  51EC               	movf	_fecha_d& (0+255),w,b
  5603  00E84C  0D0A               	mullw	10
  5604  00E84E  0100               	movlb	0	; () banked
  5605  00E850  51ED               	movf	_fecha_u& (0+255),w,b
  5606  00E852  24F3               	addwf	prodl,w,c
  5607  00E854  0100               	movlb	0	; () banked
  5608  00E856  6FE5               	movwf	_dia& (0+255),b
  5609  00E858  0100               	movlb	0	; () banked
  5610  00E85A  0E00               	movlw	0
  5611  00E85C  20F4               	addwfc	prodh,w,c
  5612  00E85E  0100               	movlb	0	; () banked
  5613  00E860  6FE6               	movwf	(_dia+1)& (0+255),b
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;main.c: 629: diasem = dia_semana;
  5617  00E862  C0EB  F07C         	movff	_dia_semana,_diasem
  5618  00E866  0100               	movlb	0	; () banked
  5619  00E868  6B7D               	clrf	(_diasem+1)& (0+255),b
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;main.c: 630: mes = mes_d * 10 + mes_u;
  5623  00E86A  0100               	movlb	0	; () banked
  5624  00E86C  51F0               	movf	_mes_d& (0+255),w,b
  5625  00E86E  0D0A               	mullw	10
  5626  00E870  0100               	movlb	0	; () banked
  5627  00E872  51F1               	movf	_mes_u& (0+255),w,b
  5628  00E874  24F3               	addwf	prodl,w,c
  5629  00E876  0100               	movlb	0	; () banked
  5630  00E878  6FE7               	movwf	_mes& (0+255),b
  5631  00E87A  0100               	movlb	0	; () banked
  5632  00E87C  0E00               	movlw	0
  5633  00E87E  20F4               	addwfc	prodh,w,c
  5634  00E880  0100               	movlb	0	; () banked
  5635  00E882  6FE8               	movwf	(_mes+1)& (0+255),b
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;main.c: 631: anio = anio_d * 10 + anio_u;
  5639  00E884  0100               	movlb	0	; () banked
  5640  00E886  51E9               	movf	_anio_d& (0+255),w,b
  5641  00E888  0D0A               	mullw	10
  5642  00E88A  0100               	movlb	0	; () banked
  5643  00E88C  51EA               	movf	_anio_u& (0+255),w,b
  5644  00E88E  24F3               	addwf	prodl,w,c
  5645  00E890  6E52               	movwf	_anio,c
  5646  00E892  0100               	movlb	0	; () banked
  5647  00E894  0E00               	movlw	0
  5648  00E896  20F4               	addwfc	prodh,w,c
  5649  00E898  6E53               	movwf	_anio+1,c
  5650                           
  5651                           ; BSR set to: 0
  5652  00E89A  0012               	return		;funcret
  5653  00E89C                     __end_of_Read_RTC:
  5654                           	opt stack 0
  5655                           tblptru	equ	0xFF8
  5656                           tblptrh	equ	0xFF7
  5657                           tblptrl	equ	0xFF6
  5658                           tablat	equ	0xFF5
  5659                           prodh	equ	0xFF4
  5660                           prodl	equ	0xFF3
  5661                           intcon	equ	0xFF2
  5662                           postinc0	equ	0xFEE
  5663                           wreg	equ	0xFE8
  5664                           postdec1	equ	0xFE5
  5665                           fsr1l	equ	0xFE1
  5666                           indf2	equ	0xFDF
  5667                           fsr2h	equ	0xFDA
  5668                           fsr2l	equ	0xFD9
  5669                           status	equ	0xFD8
  5670                           
  5671 ;; *************** function _RtccReadTime *****************
  5672 ;; Defined at:
  5673 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  pTm             2    0[COMRAM] PTR struct .
  5676 ;;		 -> RtccTime(4), 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  rTD0            8   10[COMRAM] struct .
  5679 ;;  rTD1            8    2[COMRAM] struct .
  5680 ;; Return value:  Size  Location     Type
  5681 ;;		None               void
  5682 ;; Registers used:
  5683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5690 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5692 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5693 ;;Total ram usage:       18 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		_Read_RTC
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text13
  5703  00DE82                     __ptext13:
  5704                           	opt stack 0
  5705  00DE82                     _RtccReadTime:
  5706                           	opt stack 28
  5707  00DE82  0EFC               	movlw	252
  5708  00DE84  010F               	movlb	15	; () banked
  5709  00DE86  173F               	andwf	63,f,b	;volatile
  5710                           
  5711                           ; BSR set to: 15
  5712  00DE88  010F               	movlb	15	; () banked
  5713  00DE8A  813F               	bsf	63,0,b	;volatile
  5714                           
  5715                           ; BSR set to: 15
  5716  00DE8C  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  5717                           
  5718                           ; BSR set to: 15
  5719  00DE90  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  5720                           
  5721                           ; BSR set to: 15
  5722  00DE94  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  5723                           
  5724                           ; BSR set to: 15
  5725  00DE98  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  5726                           
  5727                           ; BSR set to: 15
  5728  00DE9C  0EFC               	movlw	252
  5729  00DE9E  010F               	movlb	15	; () banked
  5730  00DEA0  173F               	andwf	63,f,b	;volatile
  5731  00DEA2  010F               	movlb	15	; () banked
  5732  00DEA4  813F               	bsf	63,0,b	;volatile
  5733                           
  5734                           ; BSR set to: 15
  5735  00DEA6  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  5736                           
  5737                           ; BSR set to: 15
  5738  00DEAA  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  5739                           
  5740                           ; BSR set to: 15
  5741  00DEAE  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  5742                           
  5743                           ; BSR set to: 15
  5744  00DEB2  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  5745                           
  5746                           ; BSR set to: 15
  5747  00DEB6  5009               	movf	RtccReadTime@rTD1+6,w,c
  5748  00DEB8  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  5749  00DEBA  A4D8               	btfss	status,2,c
  5750  00DEBC  D7E2               	goto	l2793
  5751                           
  5752                           ; BSR set to: 15
  5753                           
  5754                           ; BSR set to: 15
  5755  00DEBE  EE20 F003          	lfsr	2,3
  5756  00DEC2  5001               	movf	RtccReadTime@pTm,w,c
  5757  00DEC4  26D9               	addwf	fsr2l,f,c
  5758  00DEC6  5002               	movf	RtccReadTime@pTm+1,w,c
  5759  00DEC8  22DA               	addwfc	fsr2h,f,c
  5760  00DECA  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  5761  00DECE  EE20 F002          	lfsr	2,2
  5762  00DED2  5001               	movf	RtccReadTime@pTm,w,c
  5763  00DED4  26D9               	addwf	fsr2l,f,c
  5764  00DED6  5002               	movf	RtccReadTime@pTm+1,w,c
  5765  00DED8  22DA               	addwfc	fsr2h,f,c
  5766  00DEDA  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  5767  00DEDE  EE20 F001          	lfsr	2,1
  5768  00DEE2  5001               	movf	RtccReadTime@pTm,w,c
  5769  00DEE4  26D9               	addwf	fsr2l,f,c
  5770  00DEE6  5002               	movf	RtccReadTime@pTm+1,w,c
  5771  00DEE8  22DA               	addwfc	fsr2h,f,c
  5772  00DEEA  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  5773                           
  5774                           ; BSR set to: 15
  5775  00DEEE  0012               	return		;funcret
  5776  00DEF0                     __end_of_RtccReadTime:
  5777                           	opt stack 0
  5778                           tblptru	equ	0xFF8
  5779                           tblptrh	equ	0xFF7
  5780                           tblptrl	equ	0xFF6
  5781                           tablat	equ	0xFF5
  5782                           prodh	equ	0xFF4
  5783                           prodl	equ	0xFF3
  5784                           intcon	equ	0xFF2
  5785                           postinc0	equ	0xFEE
  5786                           wreg	equ	0xFE8
  5787                           postdec1	equ	0xFE5
  5788                           fsr1l	equ	0xFE1
  5789                           indf2	equ	0xFDF
  5790                           fsr2h	equ	0xFDA
  5791                           fsr2l	equ	0xFD9
  5792                           status	equ	0xFD8
  5793                           
  5794 ;; *************** function _RtccReadDate *****************
  5795 ;; Defined at:
  5796 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  pDt             2    0[COMRAM] PTR struct .
  5799 ;;		 -> RtccDate(4), 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  rTD0            8   10[COMRAM] struct .
  5802 ;;  rTD1            8    2[COMRAM] struct .
  5803 ;; Return value:  Size  Location     Type
  5804 ;;		None               void
  5805 ;; Registers used:
  5806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5813 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5815 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5816 ;;Total ram usage:       18 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; This function calls:
  5819 ;;		Nothing
  5820 ;; This function is called by:
  5821 ;;		_Read_RTC
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text14
  5826  00DF60                     __ptext14:
  5827                           	opt stack 0
  5828  00DF60                     _RtccReadDate:
  5829                           	opt stack 28
  5830  00DF60  0EFC               	movlw	252
  5831  00DF62  010F               	movlb	15	; () banked
  5832  00DF64  173F               	andwf	63,f,b	;volatile
  5833  00DF66  0E03               	movlw	3
  5834  00DF68  010F               	movlb	15	; () banked
  5835  00DF6A  133F               	iorwf	63,f,b	;volatile
  5836                           
  5837                           ; BSR set to: 15
  5838  00DF6C  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  5839                           
  5840                           ; BSR set to: 15
  5841  00DF70  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  5842                           
  5843                           ; BSR set to: 15
  5844  00DF74  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  5845                           
  5846                           ; BSR set to: 15
  5847  00DF78  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  5848                           
  5849                           ; BSR set to: 15
  5850  00DF7C  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  5851                           
  5852                           ; BSR set to: 15
  5853  00DF80  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  5854  00DF84  0EFC               	movlw	252
  5855  00DF86  010F               	movlb	15	; () banked
  5856  00DF88  173F               	andwf	63,f,b	;volatile
  5857  00DF8A  0E03               	movlw	3
  5858  00DF8C  010F               	movlb	15	; () banked
  5859  00DF8E  133F               	iorwf	63,f,b	;volatile
  5860                           
  5861                           ; BSR set to: 15
  5862  00DF90  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  5863                           
  5864                           ; BSR set to: 15
  5865  00DF94  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  5866                           
  5867                           ; BSR set to: 15
  5868  00DF98  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  5869                           
  5870                           ; BSR set to: 15
  5871  00DF9C  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  5872                           
  5873                           ; BSR set to: 15
  5874  00DFA0  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  5875                           
  5876                           ; BSR set to: 15
  5877  00DFA4  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  5878  00DFA8  5005               	movf	RtccReadDate@rTD1+2,w,c
  5879  00DFAA  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  5880  00DFAC  A4D8               	btfss	status,2,c
  5881  00DFAE  D7D8               	goto	l2819
  5882                           
  5883                           ; BSR set to: 15
  5884                           
  5885                           ; BSR set to: 15
  5886  00DFB0  EE20 F001          	lfsr	2,1
  5887  00DFB4  5001               	movf	RtccReadDate@pDt,w,c
  5888  00DFB6  26D9               	addwf	fsr2l,f,c
  5889  00DFB8  5002               	movf	RtccReadDate@pDt+1,w,c
  5890  00DFBA  22DA               	addwfc	fsr2h,f,c
  5891  00DFBC  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  5892  00DFC0  EE20 F002          	lfsr	2,2
  5893  00DFC4  5001               	movf	RtccReadDate@pDt,w,c
  5894  00DFC6  26D9               	addwf	fsr2l,f,c
  5895  00DFC8  5002               	movf	RtccReadDate@pDt+1,w,c
  5896  00DFCA  22DA               	addwfc	fsr2h,f,c
  5897  00DFCC  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  5898                           
  5899                           ; BSR set to: 15
  5900  00DFD0  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  5901  00DFD4  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  5902  00DFD8  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  5903                           
  5904                           ; BSR set to: 15
  5905  00DFDC  EE20 F003          	lfsr	2,3
  5906  00DFE0  5001               	movf	RtccReadDate@pDt,w,c
  5907  00DFE2  26D9               	addwf	fsr2l,f,c
  5908  00DFE4  5002               	movf	RtccReadDate@pDt+1,w,c
  5909  00DFE6  22DA               	addwfc	fsr2h,f,c
  5910  00DFE8  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  5911                           
  5912                           ; BSR set to: 15
  5913  00DFEC  0012               	return		;funcret
  5914  00DFEE                     __end_of_RtccReadDate:
  5915                           	opt stack 0
  5916                           tblptru	equ	0xFF8
  5917                           tblptrh	equ	0xFF7
  5918                           tblptrl	equ	0xFF6
  5919                           tablat	equ	0xFF5
  5920                           prodh	equ	0xFF4
  5921                           prodl	equ	0xFF3
  5922                           intcon	equ	0xFF2
  5923                           postinc0	equ	0xFEE
  5924                           wreg	equ	0xFE8
  5925                           postdec1	equ	0xFE5
  5926                           fsr1l	equ	0xFE1
  5927                           indf2	equ	0xFDF
  5928                           fsr2h	equ	0xFDA
  5929                           fsr2l	equ	0xFD9
  5930                           status	equ	0xFD8
  5931                           
  5932 ;; *************** function _Lcd_Out *****************
  5933 ;; Defined at:
  5934 ;;		line 84 in file "../lcd.h"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;  y               1    wreg     unsigned char 
  5937 ;;  x               1   63[COMRAM] unsigned char 
  5938 ;;  buffer          2   64[COMRAM] PTR const unsigned char 
  5939 ;;		 -> Convert_diasem@buffer_dia(20), STR_73(1), STR_71(1), STR_69(1), 
  5940 ;;		 -> STR_67(1), STR_65(1), STR_63(1), STR_61(1), 
  5941 ;;		 -> STR_59(1), STR_57(1), STR_56(1), STR_55(1), 
  5942 ;;		 -> STR_53(1), STR_51(1), STR_49(1), STR_47(1), 
  5943 ;;		 -> STR_45(1), STR_43(1), STR_41(1), STR_39(1), 
  5944 ;;		 -> STR_36(12), STR_33(6), STR_32(1), STR_30(1), 
  5945 ;;		 -> STR_28(1), STR_26(1), STR_24(1), STR_22(1), 
  5946 ;;		 -> STR_21(1), STR_20(1), STR_19(1), STR_17(1), 
  5947 ;;		 -> STR_15(1), STR_13(1), STR_11(1), STR_9(1), 
  5948 ;;		 -> STR_8(1), STR_7(18), STR_4(21), STR_3(20), 
  5949 ;;		 -> STR_2(19), buffer1(20), 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  y               1   66[COMRAM] unsigned char 
  5952 ;;  data            1   67[COMRAM] unsigned char 
  5953 ;; Return value:  Size  Location     Type
  5954 ;;		None               void
  5955 ;; Registers used:
  5956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5962 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5963 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5965 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5966 ;;Total ram usage:        5 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    1
  5969 ;; This function calls:
  5970 ;;		_Lcd_Chr_CP
  5971 ;;		_Lcd_Cmd
  5972 ;; This function is called by:
  5973 ;;		_main
  5974 ;;		_V_Principal
  5975 ;;		_V_ProgReloj
  5976 ;;		_V_ProgRiegoIlum
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           	psect	text15
  5981  00DFEE                     __ptext15:
  5982                           	opt stack 0
  5983  00DFEE                     _Lcd_Out:
  5984                           	opt stack 28
  5985                           
  5986                           ; BSR set to: 15
  5987                           ;incstack = 0
  5988                           ;Lcd_Out@y stored from wreg
  5989  00DFEE  6E43               	movwf	Lcd_Out@y,c
  5990                           
  5991                           ;lcd.h: 86: unsigned char data;
  5992                           ;lcd.h: 87: switch (y)
  5993  00DFF0  D00D               	goto	l2907
  5994  00DFF2                     l2897:
  5995  00DFF2  5040               	movf	Lcd_Out@x,w,c
  5996  00DFF4  0F80               	addlw	128
  5997  00DFF6  D008               	goto	L5
  5998  00DFF8                     l2899:
  5999  00DFF8  5040               	movf	Lcd_Out@x,w,c
  6000  00DFFA  0FC0               	addlw	192
  6001  00DFFC  D005               	goto	L5
  6002  00DFFE                     l2901:
  6003  00DFFE  5040               	movf	Lcd_Out@x,w,c
  6004  00E000  0F94               	addlw	148
  6005  00E002  D002               	goto	L5
  6006  00E004                     l2903:
  6007  00E004  5040               	movf	Lcd_Out@x,w,c
  6008  00E006  0FD4               	addlw	212
  6009  00E008                     L5:
  6010  00E008  6E44               	movwf	Lcd_Out@data,c
  6011                           
  6012                           ;lcd.h: 94: }
  6013                           
  6014                           ;lcd.h: 93: default: break;
  6015  00E00A  D00E               	goto	l2909
  6016  00E00C                     l2907:
  6017  00E00C  5043               	movf	Lcd_Out@y,w,c
  6018                           
  6019                           ; Switch size 1, requested type "space"
  6020                           ; Number of cases is 4, Range of values is 1 to 4
  6021                           ; switch strategies available:
  6022                           ; Name         Instructions Cycles
  6023                           ; simple_byte           13     7 (average)
  6024                           ;	Chosen strategy is simple_byte
  6025  00E00E  0A01               	xorlw	1	; case 1
  6026  00E010  B4D8               	btfsc	status,2,c
  6027  00E012  D7EF               	goto	l2897
  6028  00E014  0A03               	xorlw	3	; case 2
  6029  00E016  B4D8               	btfsc	status,2,c
  6030  00E018  D7EF               	goto	l2899
  6031  00E01A  0A01               	xorlw	1	; case 3
  6032  00E01C  B4D8               	btfsc	status,2,c
  6033  00E01E  D7EF               	goto	l2901
  6034  00E020  0A07               	xorlw	7	; case 4
  6035  00E022  B4D8               	btfsc	status,2,c
  6036  00E024  D7EF               	goto	l2903
  6037  00E026  D000               	goto	l2909
  6038  00E028                     l2909:
  6039                           
  6040                           ;lcd.h: 95: Lcd_Cmd(data);
  6041  00E028  5044               	movf	Lcd_Out@data,w,c
  6042  00E02A  EC8D  F072         	call	_Lcd_Cmd
  6043                           
  6044                           ;lcd.h: 96: while(*buffer)
  6045  00E02E  D015               	goto	l2915
  6046  00E030                     l2911:
  6047                           
  6048                           ;lcd.h: 97: {
  6049                           ;lcd.h: 98: Lcd_Chr_CP(*buffer);
  6050  00E030  C041  FFF6         	movff	Lcd_Out@buffer,tblptrl
  6051  00E034  C042  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  6052  00E038  6AF8               	clrf	tblptru,c
  6053  00E03A  0E0E               	movlw	(high __ramtop+-1)
  6054  00E03C  64F7               	cpfsgt	tblptrh,c
  6055  00E03E  D003               	bra	u2587
  6056  00E040  0008               	tblrd		*
  6057  00E042  50F5               	movf	tablat,w,c
  6058  00E044  D005               	bra	u2580
  6059  00E046                     u2587:
  6060  00E046  CFF6 FFD9          	movff	tblptrl,fsr2l
  6061  00E04A  CFF7 FFDA          	movff	tblptrh,fsr2h
  6062  00E04E  50DF               	movf	indf2,w,c
  6063  00E050                     u2580:
  6064  00E050  EC1D  F073         	call	_Lcd_Chr_CP
  6065                           
  6066                           ;lcd.h: 99: buffer++;
  6067  00E054  4A41               	infsnz	Lcd_Out@buffer,f,c
  6068  00E056  2A42               	incf	Lcd_Out@buffer+1,f,c
  6069  00E058  D000               	goto	l2915
  6070  00E05A                     l2915:
  6071  00E05A  C041  FFF6         	movff	Lcd_Out@buffer,tblptrl
  6072  00E05E  C042  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  6073  00E062  6AF8               	clrf	tblptru,c
  6074  00E064  0E0E               	movlw	(high __ramtop+-1)
  6075  00E066  64F7               	cpfsgt	tblptrh,c
  6076  00E068  D003               	bra	u2597
  6077  00E06A  0008               	tblrd		*
  6078  00E06C  50F5               	movf	tablat,w,c
  6079  00E06E  D005               	bra	u2590
  6080  00E070                     u2597:
  6081  00E070  CFF6 FFD9          	movff	tblptrl,fsr2l
  6082  00E074  CFF7 FFDA          	movff	tblptrh,fsr2h
  6083  00E078  50DF               	movf	indf2,w,c
  6084  00E07A                     u2590:
  6085  00E07A  0900               	iorlw	0
  6086  00E07C  A4D8               	btfss	status,2,c
  6087  00E07E  D7D8               	goto	l2911
  6088                           
  6089                           ;lcd.h: 100: }
  6090                           ;lcd.h: 101: return;
  6091  00E080  0012               	return		;funcret
  6092  00E082                     __end_of_Lcd_Out:
  6093                           	opt stack 0
  6094                           tblptru	equ	0xFF8
  6095                           tblptrh	equ	0xFF7
  6096                           tblptrl	equ	0xFF6
  6097                           tablat	equ	0xFF5
  6098                           prodh	equ	0xFF4
  6099                           prodl	equ	0xFF3
  6100                           intcon	equ	0xFF2
  6101                           postinc0	equ	0xFEE
  6102                           wreg	equ	0xFE8
  6103                           postdec1	equ	0xFE5
  6104                           fsr1l	equ	0xFE1
  6105                           indf2	equ	0xFDF
  6106                           fsr2h	equ	0xFDA
  6107                           fsr2l	equ	0xFD9
  6108                           status	equ	0xFD8
  6109                           
  6110 ;; *************** function _Lcd_Chr_CP *****************
  6111 ;; Defined at:
  6112 ;;		line 126 in file "../lcd.h"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  data            1    wreg     unsigned char 
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;  data            1    2[COMRAM] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;		None               void
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6130 ;;Total ram usage:        3 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		_Lcd_Out
  6136 ;;		_Lcd_Out2
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text16
  6141  00E63A                     __ptext16:
  6142                           	opt stack 0
  6143  00E63A                     _Lcd_Chr_CP:
  6144                           	opt stack 28
  6145                           
  6146                           ;incstack = 0
  6147                           ;Lcd_Chr_CP@data stored from wreg
  6148  00E63A  6E03               	movwf	Lcd_Chr_CP@data,c
  6149                           
  6150                           ;lcd.h: 127: LATBbits.LATB4 = 0; LATBbits.LATB5 = 1;
  6151  00E63C  988A               	bcf	3978,4,c	;volatile
  6152  00E63E  8A8A               	bsf	3978,5,c	;volatile
  6153                           
  6154                           ;lcd.h: 128: LATBbits.LATB0 = (data & 0b10000000)>>7; LATBbits.LATB1 = (data & 0b0100000
      +                          0)>>6;
  6155  00E640  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  6156  00E642  AE03               	btfss	Lcd_Chr_CP@data,7,c
  6157  00E644  D001               	bra	u2045
  6158  00E646  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  6159  00E648                     u2045:
  6160  00E648  0E01               	movlw	1
  6161  00E64A  1601               	andwf	??_Lcd_Chr_CP,f,c
  6162  00E64C  508A               	movf	3978,w,c	;volatile
  6163  00E64E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6164  00E650  0BFE               	andlw	-2
  6165  00E652  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6166  00E654  6E8A               	movwf	3978,c	;volatile
  6167  00E656  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6168  00E65A  0E06               	movlw	6
  6169  00E65C  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6170  00E65E                     u2055:
  6171  00E65E  90D8               	bcf	status,0,c
  6172  00E660  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6173  00E662  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6174  00E664  D7FC               	goto	u2055
  6175  00E666  0E01               	movlw	1
  6176  00E668  1601               	andwf	??_Lcd_Chr_CP,f,c
  6177  00E66A  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6178  00E66C  508A               	movf	3978,w,c	;volatile
  6179  00E66E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6180  00E670  0BFD               	andlw	-3
  6181  00E672  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6182  00E674  6E8A               	movwf	3978,c	;volatile
  6183                           
  6184                           ;lcd.h: 129: LATBbits.LATB2 = (data & 0b00100000)>>5; LATBbits.LATB3 = (data & 0b0001000
      +                          0)>>4;
  6185  00E676  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6186  00E67A  0E05               	movlw	5
  6187  00E67C  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  6188  00E67E                     u2065:
  6189  00E67E  90D8               	bcf	status,0,c
  6190  00E680  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6191  00E682  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  6192  00E684  D7FC               	goto	u2065
  6193  00E686  0E01               	movlw	1
  6194  00E688  1601               	andwf	??_Lcd_Chr_CP,f,c
  6195  00E68A  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6196  00E68C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6197  00E68E  508A               	movf	3978,w,c	;volatile
  6198  00E690  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6199  00E692  0BFB               	andlw	-5
  6200  00E694  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6201  00E696  6E8A               	movwf	3978,c	;volatile
  6202  00E698  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6203  00E69C  3A01               	swapf	??_Lcd_Chr_CP,f,c
  6204  00E69E  0E0F               	movlw	15
  6205  00E6A0  1601               	andwf	??_Lcd_Chr_CP,f,c
  6206  00E6A2  0E01               	movlw	1
  6207  00E6A4  1601               	andwf	??_Lcd_Chr_CP,f,c
  6208  00E6A6  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6209  00E6A8  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6210  00E6AA  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6211  00E6AC  508A               	movf	3978,w,c	;volatile
  6212  00E6AE  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6213  00E6B0  0BF7               	andlw	-9
  6214  00E6B2  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6215  00E6B4  6E8A               	movwf	3978,c	;volatile
  6216                           
  6217                           ;lcd.h: 130: _delay(10);
  6218  00E6B6  0E03               	movlw	3
  6219  00E6B8                     u3967:
  6220  00E6B8  2EE8               	decfsz	wreg,f,c
  6221  00E6BA  D7FE               	goto	u3967
  6222  00E6BC  F000               	nop	
  6223                           
  6224                           ;lcd.h: 131: LATBbits.LATB4 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); LATBb
      +                          its.LATB4 = 0;
  6225  00E6BE  888A               	bsf	3978,4,c	;volatile
  6226  00E6C0  0E03               	movlw	3
  6227  00E6C2                     u3977:
  6228  00E6C2  2EE8               	decfsz	wreg,f,c
  6229  00E6C4  D7FE               	goto	u3977
  6230  00E6C6  F000               	nop	
  6231  00E6C8  988A               	bcf	3978,4,c	;volatile
  6232                           
  6233                           ;lcd.h: 132: LATBbits.LATB0 = (data & 0b00001000)>>3; LATBbits.LATB1 = (data & 0b0000010
      +                          0)>>2;
  6234  00E6CA  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6235  00E6CE  90D8               	bcf	status,0,c
  6236  00E6D0  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6237  00E6D2  90D8               	bcf	status,0,c
  6238  00E6D4  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6239  00E6D6  90D8               	bcf	status,0,c
  6240  00E6D8  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6241  00E6DA  0E01               	movlw	1
  6242  00E6DC  1601               	andwf	??_Lcd_Chr_CP,f,c
  6243  00E6DE  508A               	movf	3978,w,c	;volatile
  6244  00E6E0  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6245  00E6E2  0BFE               	andlw	-2
  6246  00E6E4  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6247  00E6E6  6E8A               	movwf	3978,c	;volatile
  6248  00E6E8  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6249  00E6EC  90D8               	bcf	status,0,c
  6250  00E6EE  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6251  00E6F0  90D8               	bcf	status,0,c
  6252  00E6F2  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6253  00E6F4  0E01               	movlw	1
  6254  00E6F6  1601               	andwf	??_Lcd_Chr_CP,f,c
  6255  00E6F8  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6256  00E6FA  508A               	movf	3978,w,c	;volatile
  6257  00E6FC  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6258  00E6FE  0BFD               	andlw	-3
  6259  00E700  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6260  00E702  6E8A               	movwf	3978,c	;volatile
  6261                           
  6262                           ;lcd.h: 133: LATBbits.LATB2 = (data & 0b00000010)>>1; LATBbits.LATB3 = (data & 0b0000000
      +                          1);
  6263  00E704  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6264  00E708  90D8               	bcf	status,0,c
  6265  00E70A  3201               	rrcf	??_Lcd_Chr_CP,f,c
  6266  00E70C  0E01               	movlw	1
  6267  00E70E  1601               	andwf	??_Lcd_Chr_CP,f,c
  6268  00E710  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6269  00E712  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6270  00E714  508A               	movf	3978,w,c	;volatile
  6271  00E716  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6272  00E718  0BFB               	andlw	-5
  6273  00E71A  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6274  00E71C  6E8A               	movwf	3978,c	;volatile
  6275  00E71E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6276  00E722  0E01               	movlw	1
  6277  00E724  1601               	andwf	??_Lcd_Chr_CP,f,c
  6278  00E726  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6279  00E728  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6280  00E72A  4601               	rlncf	??_Lcd_Chr_CP,f,c
  6281  00E72C  508A               	movf	3978,w,c	;volatile
  6282  00E72E  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6283  00E730  0BF7               	andlw	-9
  6284  00E732  1801               	xorwf	??_Lcd_Chr_CP,w,c
  6285  00E734  6E8A               	movwf	3978,c	;volatile
  6286                           
  6287                           ;lcd.h: 134: _delay(10);
  6288  00E736  0E03               	movlw	3
  6289  00E738                     u3987:
  6290  00E738  2EE8               	decfsz	wreg,f,c
  6291  00E73A  D7FE               	goto	u3987
  6292  00E73C  F000               	nop	
  6293                           
  6294                           ;lcd.h: 135: LATBbits.LATB4 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); LATBb
      +                          its.LATB4 = 0;
  6295  00E73E  888A               	bsf	3978,4,c	;volatile
  6296  00E740  0E03               	movlw	3
  6297  00E742                     u3997:
  6298  00E742  2EE8               	decfsz	wreg,f,c
  6299  00E744  D7FE               	goto	u3997
  6300  00E746  F000               	nop	
  6301  00E748  988A               	bcf	3978,4,c	;volatile
  6302                           
  6303                           ;lcd.h: 136: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long)((5
      +                          500)*(8000000/4000000.0)));
  6304  00E74A  0E03               	movlw	3
  6305  00E74C                     u4007:
  6306  00E74C  2EE8               	decfsz	wreg,f,c
  6307  00E74E  D7FE               	goto	u4007
  6308  00E750  F000               	nop	
  6309  00E752  0E0F               	movlw	15
  6310  00E754  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  6311  00E756  0E48               	movlw	72
  6312  00E758                     u4017:
  6313  00E758  2EE8               	decfsz	wreg,f,c
  6314  00E75A  D7FE               	goto	u4017
  6315  00E75C  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  6316  00E75E  D7FC               	goto	u4017
  6317  00E760  0012               	return		;funcret
  6318  00E762                     __end_of_Lcd_Chr_CP:
  6319                           	opt stack 0
  6320                           tblptru	equ	0xFF8
  6321                           tblptrh	equ	0xFF7
  6322                           tblptrl	equ	0xFF6
  6323                           tablat	equ	0xFF5
  6324                           prodh	equ	0xFF4
  6325                           prodl	equ	0xFF3
  6326                           intcon	equ	0xFF2
  6327                           postinc0	equ	0xFEE
  6328                           wreg	equ	0xFE8
  6329                           postdec1	equ	0xFE5
  6330                           fsr1l	equ	0xFE1
  6331                           indf2	equ	0xFDF
  6332                           fsr2h	equ	0xFDA
  6333                           fsr2l	equ	0xFD9
  6334                           status	equ	0xFD8
  6335                           
  6336 ;; *************** function _Convert_diasem *****************
  6337 ;; Defined at:
  6338 ;;		line 650 in file "../main.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;  dia             2   39[COMRAM] int 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;  buffer_dia     20   43[COMRAM] unsigned char [20]
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  2   39[COMRAM] PTR unsigned char 
  6345 ;; Registers used:
  6346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6354 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6355 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6356 ;;Total ram usage:       24 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:    2
  6359 ;; This function calls:
  6360 ;;		_sprintf
  6361 ;; This function is called by:
  6362 ;;		_V_Principal
  6363 ;;		_V_ProgReloj
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text17
  6368  00E3FC                     __ptext17:
  6369                           	opt stack 0
  6370  00E3FC                     _Convert_diasem:
  6371                           	opt stack 27
  6372                           
  6373                           ;main.c: 652: unsigned char buffer_dia[20];
  6374                           ;main.c: 654: switch (dia) {
  6375                           
  6376                           ;incstack = 0
  6377  00E3FC  D069               	goto	l3035
  6378  00E3FE                     l3019:
  6379                           
  6380                           ;main.c: 656: {
  6381                           ;main.c: 657: sprintf(buffer_dia, "%s", "Domingo             ");
  6382  00E3FE  0E2C               	movlw	low Convert_diasem@buffer_dia
  6383  00E400  6E0D               	movwf	sprintf@sp,c
  6384  00E402  0E00               	movlw	high Convert_diasem@buffer_dia
  6385  00E404  6E0E               	movwf	sprintf@sp+1,c
  6386  00E406  0EF3               	movlw	low STR_74
  6387  00E408  6E0F               	movwf	sprintf@f,c
  6388  00E40A  0EFF               	movlw	high STR_74
  6389  00E40C  6E10               	movwf	sprintf@f+1,c
  6390  00E40E  0E40               	movlw	low STR_75
  6391  00E410  6E11               	movwf	?_sprintf+4,c
  6392  00E412  0EFF               	movlw	high STR_75
  6393  00E414  6E12               	movwf	?_sprintf+5,c
  6394  00E416  EC97  F076         	call	_sprintf	;wreg free
  6395                           
  6396                           ;main.c: 658: break;
  6397  00E41A  D079               	goto	l3037
  6398  00E41C                     l3021:
  6399                           
  6400                           ;main.c: 661: {
  6401                           ;main.c: 662: sprintf(buffer_dia, "%s", "Lunes               ");
  6402  00E41C  0E2C               	movlw	low Convert_diasem@buffer_dia
  6403  00E41E  6E0D               	movwf	sprintf@sp,c
  6404  00E420  0E00               	movlw	high Convert_diasem@buffer_dia
  6405  00E422  6E0E               	movwf	sprintf@sp+1,c
  6406  00E424  0EF3               	movlw	low STR_74
  6407  00E426  6E0F               	movwf	sprintf@f,c
  6408  00E428  0EFF               	movlw	high STR_74
  6409  00E42A  6E10               	movwf	sprintf@f+1,c
  6410  00E42C  0EEC               	movlw	low STR_77
  6411  00E42E  6E11               	movwf	?_sprintf+4,c
  6412  00E430  0EFE               	movlw	high STR_77
  6413  00E432  6E12               	movwf	?_sprintf+5,c
  6414  00E434  EC97  F076         	call	_sprintf	;wreg free
  6415                           
  6416                           ;main.c: 663: break;
  6417  00E438  D06A               	goto	l3037
  6418  00E43A                     l3023:
  6419                           
  6420                           ;main.c: 666: {
  6421                           ;main.c: 667: sprintf(buffer_dia, "%s", "Martes              ");
  6422  00E43A  0E2C               	movlw	low Convert_diasem@buffer_dia
  6423  00E43C  6E0D               	movwf	sprintf@sp,c
  6424  00E43E  0E00               	movlw	high Convert_diasem@buffer_dia
  6425  00E440  6E0E               	movwf	sprintf@sp+1,c
  6426  00E442  0EF3               	movlw	low STR_74
  6427  00E444  6E0F               	movwf	sprintf@f,c
  6428  00E446  0EFF               	movlw	high STR_74
  6429  00E448  6E10               	movwf	sprintf@f+1,c
  6430  00E44A  0E16               	movlw	low STR_79
  6431  00E44C  6E11               	movwf	?_sprintf+4,c
  6432  00E44E  0EFF               	movlw	high STR_79
  6433  00E450  6E12               	movwf	?_sprintf+5,c
  6434  00E452  EC97  F076         	call	_sprintf	;wreg free
  6435                           
  6436                           ;main.c: 668: break;
  6437  00E456  D05B               	goto	l3037
  6438  00E458                     l3025:
  6439                           
  6440                           ;main.c: 671: {
  6441                           ;main.c: 672: sprintf(buffer_dia, "%s", "Miercoles           ");
  6442  00E458  0E2C               	movlw	low Convert_diasem@buffer_dia
  6443  00E45A  6E0D               	movwf	sprintf@sp,c
  6444  00E45C  0E00               	movlw	high Convert_diasem@buffer_dia
  6445  00E45E  6E0E               	movwf	sprintf@sp+1,c
  6446  00E460  0EF3               	movlw	low STR_74
  6447  00E462  6E0F               	movwf	sprintf@f,c
  6448  00E464  0EFF               	movlw	high STR_74
  6449  00E466  6E10               	movwf	sprintf@f+1,c
  6450  00E468  0E6A               	movlw	low STR_81
  6451  00E46A  6E11               	movwf	?_sprintf+4,c
  6452  00E46C  0EFF               	movlw	high STR_81
  6453  00E46E  6E12               	movwf	?_sprintf+5,c
  6454  00E470  EC97  F076         	call	_sprintf	;wreg free
  6455                           
  6456                           ;main.c: 673: break;
  6457  00E474  D04C               	goto	l3037
  6458  00E476                     l3027:
  6459                           
  6460                           ;main.c: 676: {
  6461                           ;main.c: 677: sprintf(buffer_dia, "%s", "Jueves              ");
  6462  00E476  0E2C               	movlw	low Convert_diasem@buffer_dia
  6463  00E478  6E0D               	movwf	sprintf@sp,c
  6464  00E47A  0E00               	movlw	high Convert_diasem@buffer_dia
  6465  00E47C  6E0E               	movwf	sprintf@sp+1,c
  6466  00E47E  0EF3               	movlw	low STR_74
  6467  00E480  6E0F               	movwf	sprintf@f,c
  6468  00E482  0EFF               	movlw	high STR_74
  6469  00E484  6E10               	movwf	sprintf@f+1,c
  6470  00E486  0E2B               	movlw	low STR_83
  6471  00E488  6E11               	movwf	?_sprintf+4,c
  6472  00E48A  0EFF               	movlw	high STR_83
  6473  00E48C  6E12               	movwf	?_sprintf+5,c
  6474  00E48E  EC97  F076         	call	_sprintf	;wreg free
  6475                           
  6476                           ;main.c: 678: break;
  6477  00E492  D03D               	goto	l3037
  6478  00E494                     l3029:
  6479                           
  6480                           ;main.c: 681: {
  6481                           ;main.c: 682: sprintf(buffer_dia, "%s", "Viernes             ");
  6482  00E494  0E2C               	movlw	low Convert_diasem@buffer_dia
  6483  00E496  6E0D               	movwf	sprintf@sp,c
  6484  00E498  0E00               	movlw	high Convert_diasem@buffer_dia
  6485  00E49A  6E0E               	movwf	sprintf@sp+1,c
  6486  00E49C  0EF3               	movlw	low STR_74
  6487  00E49E  6E0F               	movwf	sprintf@f,c
  6488  00E4A0  0EFF               	movlw	high STR_74
  6489  00E4A2  6E10               	movwf	sprintf@f+1,c
  6490  00E4A4  0E55               	movlw	low STR_85
  6491  00E4A6  6E11               	movwf	?_sprintf+4,c
  6492  00E4A8  0EFF               	movlw	high STR_85
  6493  00E4AA  6E12               	movwf	?_sprintf+5,c
  6494  00E4AC  EC97  F076         	call	_sprintf	;wreg free
  6495                           
  6496                           ;main.c: 683: break;
  6497  00E4B0  D02E               	goto	l3037
  6498  00E4B2                     l3031:
  6499                           
  6500                           ;main.c: 686: {
  6501                           ;main.c: 687: sprintf(buffer_dia, "%s", "Sabado              ");
  6502  00E4B2  0E2C               	movlw	low Convert_diasem@buffer_dia
  6503  00E4B4  6E0D               	movwf	sprintf@sp,c
  6504  00E4B6  0E00               	movlw	high Convert_diasem@buffer_dia
  6505  00E4B8  6E0E               	movwf	sprintf@sp+1,c
  6506  00E4BA  0EF3               	movlw	low STR_74
  6507  00E4BC  6E0F               	movwf	sprintf@f,c
  6508  00E4BE  0EFF               	movlw	high STR_74
  6509  00E4C0  6E10               	movwf	sprintf@f+1,c
  6510  00E4C2  0E01               	movlw	low STR_87
  6511  00E4C4  6E11               	movwf	?_sprintf+4,c
  6512  00E4C6  0EFF               	movlw	high STR_87
  6513  00E4C8  6E12               	movwf	?_sprintf+5,c
  6514  00E4CA  EC97  F076         	call	_sprintf	;wreg free
  6515                           
  6516                           ;main.c: 689: }
  6517                           ;main.c: 690: }
  6518                           
  6519                           ;main.c: 688: break;
  6520  00E4CE  D01F               	goto	l3037
  6521  00E4D0                     l3035:
  6522  00E4D0  C028  F02A         	movff	Convert_diasem@dia,??_Convert_diasem
  6523  00E4D4  C029  F02B         	movff	Convert_diasem@dia+1,??_Convert_diasem+1
  6524                           
  6525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6526                           ; Switch size 1, requested type "space"
  6527                           ; Number of cases is 1, Range of values is 0 to 0
  6528                           ; switch strategies available:
  6529                           ; Name         Instructions Cycles
  6530                           ; simple_byte            4     3 (average)
  6531                           ;	Chosen strategy is simple_byte
  6532  00E4D8  502B               	movf	??_Convert_diasem+1,w,c
  6533  00E4DA  0A00               	xorlw	0	; case 0
  6534  00E4DC  A4D8               	btfss	status,2,c
  6535  00E4DE  D017               	goto	l3037
  6536                           
  6537                           ; Switch size 1, requested type "space"
  6538                           ; Number of cases is 7, Range of values is 0 to 6
  6539                           ; switch strategies available:
  6540                           ; Name         Instructions Cycles
  6541                           ; simple_byte           22    12 (average)
  6542                           ;	Chosen strategy is simple_byte
  6543  00E4E0  502A               	movf	??_Convert_diasem,w,c
  6544  00E4E2  0A00               	xorlw	0	; case 0
  6545  00E4E4  B4D8               	btfsc	status,2,c
  6546  00E4E6  D78B               	goto	l3019
  6547  00E4E8  0A01               	xorlw	1	; case 1
  6548  00E4EA  B4D8               	btfsc	status,2,c
  6549  00E4EC  D797               	goto	l3021
  6550  00E4EE  0A03               	xorlw	3	; case 2
  6551  00E4F0  B4D8               	btfsc	status,2,c
  6552  00E4F2  D7A3               	goto	l3023
  6553  00E4F4  0A01               	xorlw	1	; case 3
  6554  00E4F6  B4D8               	btfsc	status,2,c
  6555  00E4F8  D7AF               	goto	l3025
  6556  00E4FA  0A07               	xorlw	7	; case 4
  6557  00E4FC  B4D8               	btfsc	status,2,c
  6558  00E4FE  D7BB               	goto	l3027
  6559  00E500  0A01               	xorlw	1	; case 5
  6560  00E502  B4D8               	btfsc	status,2,c
  6561  00E504  D7C7               	goto	l3029
  6562  00E506  0A03               	xorlw	3	; case 6
  6563  00E508  B4D8               	btfsc	status,2,c
  6564  00E50A  D7D3               	goto	l3031
  6565  00E50C  D000               	goto	l3037
  6566  00E50E                     l3037:
  6567                           
  6568                           ;main.c: 691: return buffer_dia;
  6569  00E50E  0E2C               	movlw	low Convert_diasem@buffer_dia
  6570  00E510  6E28               	movwf	?_Convert_diasem,c
  6571  00E512  0E00               	movlw	high Convert_diasem@buffer_dia
  6572  00E514  6E29               	movwf	?_Convert_diasem+1,c
  6573  00E516  0012               	return	
  6574  00E518  0012               	return		;funcret
  6575  00E51A                     __end_of_Convert_diasem:
  6576                           	opt stack 0
  6577                           tblptru	equ	0xFF8
  6578                           tblptrh	equ	0xFF7
  6579                           tblptrl	equ	0xFF6
  6580                           tablat	equ	0xFF5
  6581                           prodh	equ	0xFF4
  6582                           prodl	equ	0xFF3
  6583                           intcon	equ	0xFF2
  6584                           postinc0	equ	0xFEE
  6585                           wreg	equ	0xFE8
  6586                           postdec1	equ	0xFE5
  6587                           fsr1l	equ	0xFE1
  6588                           indf2	equ	0xFDF
  6589                           fsr2h	equ	0xFDA
  6590                           fsr2l	equ	0xFD9
  6591                           status	equ	0xFD8
  6592                           
  6593 ;; *************** function _sprintf *****************
  6594 ;; Defined at:
  6595 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  sp              2   12[COMRAM] PTR unsigned char 
  6598 ;;		 -> Convert_diasem@buffer_dia(20), buffer1(20), 
  6599 ;;  f               2   14[COMRAM] PTR const unsigned char 
  6600 ;;		 -> STR_86(3), STR_84(3), STR_82(3), STR_80(3), 
  6601 ;;		 -> STR_78(3), STR_76(3), STR_74(3), STR_72(5), 
  6602 ;;		 -> STR_70(5), STR_68(5), STR_66(5), STR_64(5), 
  6603 ;;		 -> STR_62(5), STR_60(5), STR_58(5), STR_54(5), 
  6604 ;;		 -> STR_52(5), STR_50(5), STR_48(5), STR_46(5), 
  6605 ;;		 -> STR_44(5), STR_42(5), STR_40(5), STR_38(14), 
  6606 ;;		 -> STR_37(15), STR_35(14), STR_34(15), STR_31(5), 
  6607 ;;		 -> STR_29(5), STR_27(5), STR_25(5), STR_23(5), 
  6608 ;;		 -> STR_18(5), STR_16(5), STR_14(5), STR_12(5), 
  6609 ;;		 -> STR_10(5), STR_6(28), STR_5(28), STR_1(5), 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  tmpval          4    0        struct .
  6612 ;;  width           2   36[COMRAM] int 
  6613 ;;  len             2   34[COMRAM] unsigned int 
  6614 ;;  cp              2   32[COMRAM] PTR const unsigned char 
  6615 ;;		 -> STR_88(7), STR_87(21), STR_85(21), STR_83(21), 
  6616 ;;		 -> STR_81(21), STR_79(21), STR_77(21), STR_75(21), 
  6617 ;;  ap              2   30[COMRAM] PTR void [1]
  6618 ;;		 -> ?_sprintf(2), 
  6619 ;;  val             2   27[COMRAM] unsigned int 
  6620 ;;  c               1   38[COMRAM] char 
  6621 ;;  prec            1   29[COMRAM] char 
  6622 ;;  flag            1   26[COMRAM] unsigned char 
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  2   12[COMRAM] int 
  6625 ;; Registers used:
  6626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6632 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6633 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6634 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6635 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6636 ;;Total ram usage:       27 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; Hardware stack levels required when called:    1
  6639 ;; This function calls:
  6640 ;;		___lwdiv
  6641 ;;		___lwmod
  6642 ;;		___wmul
  6643 ;;		_isdigit
  6644 ;; This function is called by:
  6645 ;;		_main
  6646 ;;		_V_Principal
  6647 ;;		_V_ProgReloj
  6648 ;;		_V_ProgRiegoIlum
  6649 ;;		_Convert_diasem
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text18
  6654  00ED2E                     __ptext18:
  6655                           	opt stack 0
  6656  00ED2E                     _sprintf:
  6657                           	opt stack 29
  6658                           
  6659                           ;doprnt.c: 494: va_list ap;
  6660                           ;doprnt.c: 499: signed char c;
  6661                           ;doprnt.c: 501: int width;
  6662                           ;doprnt.c: 506: signed char prec;
  6663                           ;doprnt.c: 508: unsigned char flag;
  6664                           ;doprnt.c: 523: union {
  6665                           ;doprnt.c: 524: unsigned long vd;
  6666                           ;doprnt.c: 525: double integ;
  6667                           ;doprnt.c: 526: } tmpval;
  6668                           ;doprnt.c: 528: unsigned int val;
  6669                           ;doprnt.c: 529: unsigned len;
  6670                           ;doprnt.c: 530: const char * cp;
  6671                           ;doprnt.c: 533: *ap = __va_start();
  6672                           
  6673                           ;incstack = 0
  6674  00ED2E  0E11               	movlw	low (?_sprintf+4)
  6675  00ED30  6E1F               	movwf	sprintf@ap,c
  6676  00ED32  0E00               	movlw	high (?_sprintf+4)
  6677  00ED34  6E20               	movwf	sprintf@ap+1,c
  6678                           
  6679                           ;doprnt.c: 536: while(c = *f++) {
  6680  00ED36  D182               	goto	l2651
  6681  00ED38                     l2535:
  6682                           
  6683                           ;doprnt.c: 538: if(c != '%')
  6684  00ED38  0E25               	movlw	37
  6685  00ED3A  1827               	xorwf	sprintf@c,w,c
  6686  00ED3C  B4D8               	btfsc	status,2,c
  6687  00ED3E  D009               	goto	l2541
  6688                           
  6689                           ;doprnt.c: 540: {
  6690                           ;doprnt.c: 541: ((*sp++ = (c)));
  6691  00ED40  C00D  FFD9         	movff	sprintf@sp,fsr2l
  6692  00ED44  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  6693  00ED48  C027  FFDF         	movff	sprintf@c,indf2
  6694  00ED4C  4A0D               	infsnz	sprintf@sp,f,c
  6695  00ED4E  2A0E               	incf	sprintf@sp+1,f,c
  6696                           
  6697                           ;doprnt.c: 542: continue;
  6698  00ED50  D175               	goto	l2651
  6699  00ED52                     l2541:
  6700                           
  6701                           ;doprnt.c: 543: }
  6702                           ;doprnt.c: 546: width = 0;
  6703  00ED52  0E00               	movlw	0
  6704  00ED54  6E26               	movwf	sprintf@width+1,c
  6705  00ED56  0E00               	movlw	0
  6706  00ED58  6E25               	movwf	sprintf@width,c
  6707                           
  6708                           ;doprnt.c: 548: flag = 0;
  6709  00ED5A  0E00               	movlw	0
  6710  00ED5C  6E1B               	movwf	sprintf@flag,c
  6711                           
  6712                           ;doprnt.c: 551: switch(*f) {
  6713                           
  6714                           ;doprnt.c: 550: for(;;) {
  6715  00ED5E  D005               	goto	l2547
  6716  00ED60                     l2543:
  6717                           
  6718                           ;doprnt.c: 580: flag |= 0x04;
  6719  00ED60  841B               	bsf	sprintf@flag,2,c
  6720                           
  6721                           ;doprnt.c: 581: f++;
  6722  00ED62  4A0F               	infsnz	sprintf@f,f,c
  6723  00ED64  2A10               	incf	sprintf@f+1,f,c
  6724                           
  6725                           ;doprnt.c: 582: continue;
  6726  00ED66  D001               	goto	l2547
  6727                           
  6728                           ;doprnt.c: 584: }
  6729  00ED68  D00B               	goto	l2549
  6730  00ED6A                     l2547:
  6731  00ED6A  C00F  FFF6         	movff	sprintf@f,tblptrl
  6732  00ED6E  C010  FFF7         	movff	sprintf@f+1,tblptrh
  6733  00ED72                     	if	0	;tblptru may be non-zero
  6734  00ED72                     	endif
  6735  00ED72                     	if	0	;tblptru may be non-zero
  6736  00ED72                     	endif
  6737  00ED72  0008               	tblrd		*
  6738  00ED74  50F5               	movf	tablat,w,c
  6739                           
  6740                           ; Switch size 1, requested type "space"
  6741                           ; Number of cases is 1, Range of values is 48 to 48
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte            4     3 (average)
  6745                           ;	Chosen strategy is simple_byte
  6746  00ED76  0A30               	xorlw	48	; case 48
  6747  00ED78  B4D8               	btfsc	status,2,c
  6748  00ED7A  D7F2               	goto	l2543
  6749                           
  6750                           ;doprnt.c: 585: break;
  6751  00ED7C  D001               	goto	l2549
  6752                           
  6753                           ;doprnt.c: 586: }
  6754  00ED7E  D7F5               	goto	l2547
  6755  00ED80                     l2549:
  6756                           
  6757                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6758  00ED80  C00F  FFF6         	movff	sprintf@f,tblptrl
  6759  00ED84  C010  FFF7         	movff	sprintf@f+1,tblptrh
  6760  00ED88                     	if	0	;tblptru may be non-zero
  6761  00ED88                     	endif
  6762  00ED88                     	if	0	;tblptru may be non-zero
  6763  00ED88                     	endif
  6764  00ED88  0008               	tblrd		*
  6765  00ED8A  50F5               	movf	tablat,w,c
  6766  00ED8C  EC4B  F06E         	call	_isdigit
  6767  00ED90  A0D8               	btfss	status,0,c
  6768  00ED92  D0A2               	goto	l2599
  6769                           
  6770                           ;doprnt.c: 598: width = 0;
  6771  00ED94  0E00               	movlw	0
  6772  00ED96  6E26               	movwf	sprintf@width+1,c
  6773  00ED98  0E00               	movlw	0
  6774  00ED9A  6E25               	movwf	sprintf@width,c
  6775  00ED9C  D000               	goto	l2553
  6776  00ED9E                     l2553:
  6777                           
  6778                           ;doprnt.c: 600: width *= 10;
  6779  00ED9E  C025  F001         	movff	sprintf@width,___wmul@multiplier
  6780  00EDA2  C026  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  6781  00EDA6  0E00               	movlw	0
  6782  00EDA8  6E04               	movwf	___wmul@multiplicand+1,c
  6783  00EDAA  0E0A               	movlw	10
  6784  00EDAC  6E03               	movwf	___wmul@multiplicand,c
  6785  00EDAE  EC5C  F06E         	call	___wmul	;wreg free
  6786  00EDB2  C001  F025         	movff	?___wmul,sprintf@width
  6787  00EDB6  C002  F026         	movff	?___wmul+1,sprintf@width+1
  6788                           
  6789                           ;doprnt.c: 601: width += *f++ - '0';
  6790  00EDBA  0ED0               	movlw	208
  6791  00EDBC  6E17               	movwf	??_sprintf& (0+255),c
  6792  00EDBE  0EFF               	movlw	255
  6793  00EDC0  6E18               	movwf	(??_sprintf+1)& (0+255),c
  6794  00EDC2  C00F  FFF6         	movff	sprintf@f,tblptrl
  6795  00EDC6  C010  FFF7         	movff	sprintf@f+1,tblptrh
  6796  00EDCA                     	if	0	;tblptru may be non-zero
  6797  00EDCA                     	endif
  6798  00EDCA                     	if	0	;tblptru may be non-zero
  6799  00EDCA                     	endif
  6800  00EDCA  0008               	tblrd		*
  6801  00EDCC  50F5               	movf	tablat,w,c
  6802  00EDCE  6E19               	movwf	(??_sprintf+2)& (0+255),c
  6803  00EDD0  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  6804  00EDD2  5017               	movf	??_sprintf,w,c
  6805  00EDD4  2619               	addwf	??_sprintf+2,f,c
  6806  00EDD6  5018               	movf	??_sprintf+1,w,c
  6807  00EDD8  221A               	addwfc	??_sprintf+3,f,c
  6808  00EDDA  5019               	movf	??_sprintf+2,w,c
  6809  00EDDC  2625               	addwf	sprintf@width,f,c
  6810  00EDDE  501A               	movf	??_sprintf+3,w,c
  6811  00EDE0  2226               	addwfc	sprintf@width+1,f,c
  6812  00EDE2  4A0F               	infsnz	sprintf@f,f,c
  6813  00EDE4  2A10               	incf	sprintf@f+1,f,c
  6814                           
  6815                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6816  00EDE6  C00F  FFF6         	movff	sprintf@f,tblptrl
  6817  00EDEA  C010  FFF7         	movff	sprintf@f+1,tblptrh
  6818  00EDEE                     	if	0	;tblptru may be non-zero
  6819  00EDEE                     	endif
  6820  00EDEE                     	if	0	;tblptru may be non-zero
  6821  00EDEE                     	endif
  6822  00EDEE  0008               	tblrd		*
  6823  00EDF0  50F5               	movf	tablat,w,c
  6824  00EDF2  EC4B  F06E         	call	_isdigit
  6825  00EDF6  A0D8               	btfss	status,0,c
  6826  00EDF8  D06F               	goto	l2599
  6827  00EDFA  D7D1               	goto	l2553
  6828                           
  6829                           ;doprnt.c: 608: }
  6830                           ;doprnt.c: 635: switch(c = *f++) {
  6831  00EDFC  D06D               	goto	l2599
  6832                           
  6833                           ;doprnt.c: 638: goto alldone;
  6834                           
  6835                           ;doprnt.c: 637: case 0:
  6836  00EDFE  D12C               	goto	l2653
  6837  00EE00                     l2561:
  6838                           
  6839                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6840  00EE00  C01F  FFD9         	movff	sprintf@ap,fsr2l
  6841  00EE04  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  6842  00EE08  CFDE F021          	movff	postinc2,sprintf@cp
  6843  00EE0C  CFDD F022          	movff	postdec2,sprintf@cp+1
  6844  00EE10  0E02               	movlw	2
  6845  00EE12  261F               	addwf	sprintf@ap,f,c
  6846  00EE14  0E00               	movlw	0
  6847  00EE16  2220               	addwfc	sprintf@ap+1,f,c
  6848                           
  6849                           ;doprnt.c: 740: if(!cp)
  6850  00EE18  5021               	movf	sprintf@cp,w,c
  6851  00EE1A  1022               	iorwf	sprintf@cp+1,w,c
  6852  00EE1C  A4D8               	btfss	status,2,c
  6853  00EE1E  D005               	goto	l2569
  6854                           
  6855                           ;doprnt.c: 741: cp = "(null)";
  6856  00EE20  0EE1               	movlw	low STR_88
  6857  00EE22  6E21               	movwf	sprintf@cp,c
  6858  00EE24  0EFF               	movlw	high STR_88
  6859  00EE26  6E22               	movwf	sprintf@cp+1,c
  6860  00EE28  D000               	goto	l2569
  6861  00EE2A                     l2569:
  6862                           
  6863                           ;doprnt.c: 745: len = 0;
  6864  00EE2A  0E00               	movlw	0
  6865  00EE2C  6E24               	movwf	sprintf@len+1,c
  6866  00EE2E  0E00               	movlw	0
  6867  00EE30  6E23               	movwf	sprintf@len,c
  6868                           
  6869                           ;doprnt.c: 746: while(cp[len])
  6870  00EE32  D003               	goto	l2573
  6871  00EE34                     l2571:
  6872                           
  6873                           ;doprnt.c: 747: len++;
  6874  00EE34  4A23               	infsnz	sprintf@len,f,c
  6875  00EE36  2A24               	incf	sprintf@len+1,f,c
  6876  00EE38  D000               	goto	l2573
  6877  00EE3A                     l2573:
  6878  00EE3A  5023               	movf	sprintf@len,w,c
  6879  00EE3C  2421               	addwf	sprintf@cp,w,c
  6880  00EE3E  6E17               	movwf	??_sprintf& (0+255),c
  6881  00EE40  5024               	movf	sprintf@len+1,w,c
  6882  00EE42  2022               	addwfc	sprintf@cp+1,w,c
  6883  00EE44  6E18               	movwf	(??_sprintf+1)& (0+255),c
  6884  00EE46  C017  FFF6         	movff	??_sprintf,tblptrl
  6885  00EE4A  C018  FFF7         	movff	??_sprintf+1,tblptrh
  6886  00EE4E                     	if	0	;tblptru may be non-zero
  6887  00EE4E                     	endif
  6888  00EE4E                     	if	0	;tblptru may be non-zero
  6889  00EE4E                     	endif
  6890  00EE4E  0008               	tblrd		*
  6891  00EE50  50F5               	movf	tablat,w,c
  6892  00EE52  0900               	iorlw	0
  6893  00EE54  A4D8               	btfss	status,2,c
  6894  00EE56  D7EE               	goto	l2571
  6895                           
  6896                           ;doprnt.c: 757: if(width > len)
  6897  00EE58  5025               	movf	sprintf@width,w,c
  6898  00EE5A  5C23               	subwf	sprintf@len,w,c
  6899  00EE5C  5026               	movf	sprintf@width+1,w,c
  6900  00EE5E  5824               	subwfb	sprintf@len+1,w,c
  6901  00EE60  B0D8               	btfsc	status,0,c
  6902  00EE62  D005               	goto	l2579
  6903                           
  6904                           ;doprnt.c: 758: width -= len;
  6905  00EE64  5023               	movf	sprintf@len,w,c
  6906  00EE66  5E25               	subwf	sprintf@width,f,c
  6907  00EE68  5024               	movf	sprintf@len+1,w,c
  6908  00EE6A  5A26               	subwfb	sprintf@width+1,f,c
  6909  00EE6C  D00E               	goto	l2585
  6910  00EE6E                     l2579:
  6911                           
  6912                           ;doprnt.c: 759: else
  6913                           ;doprnt.c: 760: width = 0;
  6914  00EE6E  0E00               	movlw	0
  6915  00EE70  6E26               	movwf	sprintf@width+1,c
  6916  00EE72  0E00               	movlw	0
  6917  00EE74  6E25               	movwf	sprintf@width,c
  6918                           
  6919                           ;doprnt.c: 764: while(width--)
  6920  00EE76  D009               	goto	l2585
  6921  00EE78                     l2581:
  6922                           
  6923                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6924  00EE78  C00D  FFD9         	movff	sprintf@sp,fsr2l
  6925  00EE7C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  6926  00EE80  0E20               	movlw	32
  6927  00EE82  6EDF               	movwf	indf2,c
  6928  00EE84  4A0D               	infsnz	sprintf@sp,f,c
  6929  00EE86  2A0E               	incf	sprintf@sp+1,f,c
  6930  00EE88  D000               	goto	l2585
  6931  00EE8A                     l2585:
  6932  00EE8A  0625               	decf	sprintf@width,f,c
  6933  00EE8C  A0D8               	btfss	status,0,c
  6934  00EE8E  0626               	decf	sprintf@width+1,f,c
  6935  00EE90  2825               	incf	sprintf@width,w,c
  6936  00EE92  E1F2               	bnz	l2581
  6937  00EE94  2826               	incf	sprintf@width+1,w,c
  6938  00EE96  B4D8               	btfsc	status,2,c
  6939  00EE98  D012               	goto	l2593
  6940  00EE9A  D7EE               	goto	l2581
  6941                           
  6942                           ;doprnt.c: 767: while(len--)
  6943  00EE9C  D010               	goto	l2593
  6944  00EE9E                     l2587:
  6945                           
  6946                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6947  00EE9E  C021  FFF6         	movff	sprintf@cp,tblptrl
  6948  00EEA2  C022  FFF7         	movff	sprintf@cp+1,tblptrh
  6949  00EEA6                     	if	0	;tblptru may be non-zero
  6950  00EEA6                     	endif
  6951  00EEA6                     	if	0	;tblptru may be non-zero
  6952  00EEA6                     	endif
  6953  00EEA6  C00D  FFD9         	movff	sprintf@sp,fsr2l
  6954  00EEAA  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  6955  00EEAE  0008               	tblrd		*
  6956  00EEB0  CFF5 FFDF          	movff	tablat,indf2
  6957  00EEB4  4A21               	infsnz	sprintf@cp,f,c
  6958  00EEB6  2A22               	incf	sprintf@cp+1,f,c
  6959  00EEB8  4A0D               	infsnz	sprintf@sp,f,c
  6960  00EEBA  2A0E               	incf	sprintf@sp+1,f,c
  6961  00EEBC  D000               	goto	l2593
  6962  00EEBE                     l2593:
  6963  00EEBE  0623               	decf	sprintf@len,f,c
  6964  00EEC0  A0D8               	btfss	status,0,c
  6965  00EEC2  0624               	decf	sprintf@len+1,f,c
  6966  00EEC4  2823               	incf	sprintf@len,w,c
  6967  00EEC6  E1EB               	bnz	l2587
  6968  00EEC8  2824               	incf	sprintf@len+1,w,c
  6969  00EECA  B4D8               	btfsc	status,2,c
  6970  00EECC  D0B7               	goto	l2651
  6971  00EECE  D7E7               	goto	l2587
  6972                           
  6973                           ;doprnt.c: 813: continue;
  6974                           
  6975                           ;doprnt.c: 802: default:
  6976                           
  6977                           ;doprnt.c: 774: continue;
  6978  00EED0  D0B5               	goto	l2651
  6979  00EED2                     l2595:
  6980                           
  6981                           ;doprnt.c: 818: flag |= 0xC0;
  6982  00EED2  0EC0               	movlw	192
  6983  00EED4  121B               	iorwf	sprintf@flag,f,c
  6984                           
  6985                           ;doprnt.c: 822: }
  6986                           
  6987                           ;doprnt.c: 819: break;
  6988  00EED6  D014               	goto	l2601
  6989  00EED8                     l2599:
  6990  00EED8  C00F  FFF6         	movff	sprintf@f,tblptrl
  6991  00EEDC  C010  FFF7         	movff	sprintf@f+1,tblptrh
  6992  00EEE0  4A0F               	infsnz	sprintf@f,f,c
  6993  00EEE2  2A10               	incf	sprintf@f+1,f,c
  6994  00EEE4                     	if	0	;tblptru may be non-zero
  6995  00EEE4                     	endif
  6996  00EEE4                     	if	0	;tblptru may be non-zero
  6997  00EEE4                     	endif
  6998  00EEE4  0008               	tblrd		*
  6999  00EEE6  CFF5 F027          	movff	tablat,sprintf@c
  7000  00EEEA  5027               	movf	sprintf@c,w,c
  7001                           
  7002                           ; Switch size 1, requested type "space"
  7003                           ; Number of cases is 3, Range of values is 0 to 117
  7004                           ; switch strategies available:
  7005                           ; Name         Instructions Cycles
  7006                           ; simple_byte           10     6 (average)
  7007                           ;	Chosen strategy is simple_byte
  7008  00EEEC  0A00               	xorlw	0	; case 0
  7009  00EEEE  B4D8               	btfsc	status,2,c
  7010  00EEF0  D0B3               	goto	l2653
  7011  00EEF2  0A73               	xorlw	115	; case 115
  7012  00EEF4  B4D8               	btfsc	status,2,c
  7013  00EEF6  D784               	goto	l2561
  7014  00EEF8  0A06               	xorlw	6	; case 117
  7015  00EEFA  B4D8               	btfsc	status,2,c
  7016  00EEFC  D7EA               	goto	l2595
  7017  00EEFE  D09E               	goto	l2651
  7018  00EF00                     l2601:
  7019                           
  7020                           ;doprnt.c: 1273: {
  7021                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7022  00EF00  C01F  FFD9         	movff	sprintf@ap,fsr2l
  7023  00EF04  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  7024  00EF08  CFDE F01C          	movff	postinc2,sprintf@val
  7025  00EF0C  CFDD F01D          	movff	postdec2,sprintf@val+1
  7026  00EF10  0E02               	movlw	2
  7027  00EF12  261F               	addwf	sprintf@ap,f,c
  7028  00EF14  0E00               	movlw	0
  7029  00EF16  2220               	addwfc	sprintf@ap+1,f,c
  7030                           
  7031                           ;doprnt.c: 1287: }
  7032                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7033  00EF18  0E01               	movlw	1
  7034  00EF1A  6E27               	movwf	sprintf@c,c
  7035  00EF1C                     l2607:
  7036  00EF1C  0E05               	movlw	5
  7037  00EF1E  1827               	xorwf	sprintf@c,w,c
  7038  00EF20  B4D8               	btfsc	status,2,c
  7039  00EF22  D016               	goto	l2619
  7040  00EF24  D001               	goto	l2611
  7041  00EF26  D014               	goto	l2619
  7042  00EF28                     l2611:
  7043                           
  7044                           ;doprnt.c: 1306: if(val < dpowers[c])
  7045  00EF28  5027               	movf	sprintf@c,w,c
  7046  00EF2A  0D02               	mullw	2
  7047  00EF2C  0E95               	movlw	low _dpowers
  7048  00EF2E  24F3               	addwf	prodl,w,c
  7049  00EF30  6EF6               	movwf	tblptrl,c
  7050  00EF32  0EFE               	movlw	high _dpowers
  7051  00EF34  20F4               	addwfc	prodh,w,c
  7052  00EF36  6EF7               	movwf	tblptrh,c
  7053  00EF38                     	if	0	;There are less than 3 active tblptr bytes
  7054  00EF38                     	endif
  7055  00EF38  0009               	tblrd		*+
  7056  00EF3A  50F5               	movf	tablat,w,c
  7057  00EF3C  5C1C               	subwf	sprintf@val,w,c
  7058  00EF3E  0009               	tblrd		*+
  7059  00EF40  50F5               	movf	tablat,w,c
  7060  00EF42  581D               	subwfb	sprintf@val+1,w,c
  7061  00EF44  A0D8               	btfss	status,0,c
  7062  00EF46  D004               	goto	l2619
  7063  00EF48  D001               	goto	l2615
  7064                           
  7065                           ;doprnt.c: 1307: break;
  7066  00EF4A  D002               	goto	l2619
  7067  00EF4C                     l2615:
  7068  00EF4C  2A27               	incf	sprintf@c,f,c
  7069  00EF4E  D7E6               	goto	l2607
  7070  00EF50                     l2619:
  7071                           
  7072                           ;doprnt.c: 1381: if(width > c)
  7073  00EF50  0E80               	movlw	128
  7074  00EF52  BE27               	btfsc	sprintf@c,7,c
  7075  00EF54  0E7F               	movlw	127
  7076  00EF56  6E17               	movwf	??_sprintf& (0+255),c
  7077  00EF58  5025               	movf	sprintf@width,w,c
  7078  00EF5A  5C27               	subwf	sprintf@c,w,c
  7079  00EF5C  5026               	movf	sprintf@width+1,w,c
  7080  00EF5E  0A80               	xorlw	128
  7081  00EF60  5817               	subwfb	??_sprintf& (0+255),w,c
  7082  00EF62  B0D8               	btfsc	status,0,c
  7083  00EF64  D007               	goto	l2623
  7084                           
  7085                           ;doprnt.c: 1382: width -= c;
  7086  00EF66  5027               	movf	sprintf@c,w,c
  7087  00EF68  5E25               	subwf	sprintf@width,f,c
  7088  00EF6A  0E00               	movlw	0
  7089  00EF6C  BE27               	btfsc	sprintf@c,7,c
  7090  00EF6E  0EFF               	movlw	255
  7091  00EF70  5A26               	subwfb	sprintf@width+1,f,c
  7092  00EF72  D005               	goto	l2625
  7093  00EF74                     l2623:
  7094                           
  7095                           ;doprnt.c: 1383: else
  7096                           ;doprnt.c: 1384: width = 0;
  7097  00EF74  0E00               	movlw	0
  7098  00EF76  6E26               	movwf	sprintf@width+1,c
  7099  00EF78  0E00               	movlw	0
  7100  00EF7A  6E25               	movwf	sprintf@width,c
  7101  00EF7C  D000               	goto	l2625
  7102  00EF7E                     l2625:
  7103                           
  7104                           ;doprnt.c: 1387: if(flag & 0x04) {
  7105  00EF7E  A41B               	btfss	sprintf@flag,2,c
  7106  00EF80  D015               	goto	l2635
  7107                           
  7108                           ;doprnt.c: 1415: if(width)
  7109  00EF82  5025               	movf	sprintf@width,w,c
  7110  00EF84  1026               	iorwf	sprintf@width+1,w,c
  7111  00EF86  B4D8               	btfsc	status,2,c
  7112  00EF88  D026               	goto	l411
  7113  00EF8A                     l2629:
  7114                           
  7115                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  7116  00EF8A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  7117  00EF8E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  7118  00EF92  0E30               	movlw	48
  7119  00EF94  6EDF               	movwf	indf2,c
  7120  00EF96  4A0D               	infsnz	sprintf@sp,f,c
  7121  00EF98  2A0E               	incf	sprintf@sp+1,f,c
  7122                           
  7123                           ;doprnt.c: 1418: while(--width);
  7124  00EF9A  0625               	decf	sprintf@width,f,c
  7125  00EF9C  A0D8               	btfss	status,0,c
  7126  00EF9E  0626               	decf	sprintf@width+1,f,c
  7127  00EFA0  5025               	movf	sprintf@width,w,c
  7128  00EFA2  1026               	iorwf	sprintf@width+1,w,c
  7129  00EFA4  B4D8               	btfsc	status,2,c
  7130  00EFA6  D017               	goto	l411
  7131  00EFA8  D7F0               	goto	l2629
  7132                           
  7133                           ;doprnt.c: 1420: } else
  7134  00EFAA  D015               	goto	l411
  7135  00EFAC                     l2635:
  7136                           
  7137                           ;doprnt.c: 1422: {
  7138                           ;doprnt.c: 1424: if(width
  7139                           ;doprnt.c: 1428: )
  7140  00EFAC  5025               	movf	sprintf@width,w,c
  7141  00EFAE  1026               	iorwf	sprintf@width+1,w,c
  7142  00EFB0  B4D8               	btfsc	status,2,c
  7143  00EFB2  D011               	goto	l411
  7144  00EFB4                     l2637:
  7145                           
  7146                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  7147  00EFB4  C00D  FFD9         	movff	sprintf@sp,fsr2l
  7148  00EFB8  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  7149  00EFBC  0E20               	movlw	32
  7150  00EFBE  6EDF               	movwf	indf2,c
  7151  00EFC0  4A0D               	infsnz	sprintf@sp,f,c
  7152  00EFC2  2A0E               	incf	sprintf@sp+1,f,c
  7153                           
  7154                           ;doprnt.c: 1431: while(--width);
  7155  00EFC4  0625               	decf	sprintf@width,f,c
  7156  00EFC6  A0D8               	btfss	status,0,c
  7157  00EFC8  0626               	decf	sprintf@width+1,f,c
  7158  00EFCA  5025               	movf	sprintf@width,w,c
  7159  00EFCC  1026               	iorwf	sprintf@width+1,w,c
  7160  00EFCE  B4D8               	btfsc	status,2,c
  7161  00EFD0  D002               	goto	l411
  7162  00EFD2  D7F0               	goto	l2637
  7163  00EFD4  D000               	goto	l411
  7164  00EFD6                     l411:
  7165                           
  7166                           ;doprnt.c: 1469: }
  7167                           ;doprnt.c: 1472: prec = c;
  7168  00EFD6  C027  F01E         	movff	sprintf@c,sprintf@prec
  7169                           
  7170                           ;doprnt.c: 1474: while(prec--) {
  7171  00EFDA  D02A               	goto	l2649
  7172  00EFDC                     l2643:
  7173                           
  7174                           ;doprnt.c: 1478: {
  7175                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7176  00EFDC  501E               	movf	sprintf@prec,w,c
  7177  00EFDE  0D02               	mullw	2
  7178  00EFE0  0E95               	movlw	low _dpowers
  7179  00EFE2  24F3               	addwf	prodl,w,c
  7180  00EFE4  6EF6               	movwf	tblptrl,c
  7181  00EFE6  0EFE               	movlw	high _dpowers
  7182  00EFE8  20F4               	addwfc	prodh,w,c
  7183  00EFEA  6EF7               	movwf	tblptrh,c
  7184  00EFEC                     	if	0	;There are less than 3 active tblptr bytes
  7185  00EFEC                     	endif
  7186  00EFEC  0009               	tblrd		*+
  7187  00EFEE  CFF5 F003          	movff	tablat,___lwdiv@divisor
  7188  00EFF2  000A               	tblrd		*-
  7189  00EFF4  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  7190  00EFF8  C01C  F001         	movff	sprintf@val,___lwdiv@dividend
  7191  00EFFC  C01D  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  7192  00F000  ECE4  F06E         	call	___lwdiv	;wreg free
  7193  00F004  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  7194  00F008  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  7195  00F00C  0E00               	movlw	0
  7196  00F00E  6E0B               	movwf	___lwmod@divisor+1,c
  7197  00F010  0E0A               	movlw	10
  7198  00F012  6E0A               	movwf	___lwmod@divisor,c
  7199  00F014  EC91  F06E         	call	___lwmod	;wreg free
  7200  00F018  5008               	movf	?___lwmod,w,c
  7201  00F01A  0F30               	addlw	48
  7202  00F01C  6E27               	movwf	sprintf@c,c
  7203                           
  7204                           ;doprnt.c: 1523: }
  7205                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7206  00F01E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  7207  00F022  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  7208  00F026  C027  FFDF         	movff	sprintf@c,indf2
  7209  00F02A  4A0D               	infsnz	sprintf@sp,f,c
  7210  00F02C  2A0E               	incf	sprintf@sp+1,f,c
  7211  00F02E  D000               	goto	l2649
  7212  00F030                     l2649:
  7213  00F030  061E               	decf	sprintf@prec,f,c
  7214  00F032  281E               	incf	sprintf@prec,w,c
  7215  00F034  B4D8               	btfsc	status,2,c
  7216  00F036  D002               	goto	l2651
  7217  00F038  D7D1               	goto	l2643
  7218  00F03A  D000               	goto	l2651
  7219  00F03C                     l2651:
  7220  00F03C  C00F  FFF6         	movff	sprintf@f,tblptrl
  7221  00F040  C010  FFF7         	movff	sprintf@f+1,tblptrh
  7222  00F044  4A0F               	infsnz	sprintf@f,f,c
  7223  00F046  2A10               	incf	sprintf@f+1,f,c
  7224  00F048                     	if	0	;tblptru may be non-zero
  7225  00F048                     	endif
  7226  00F048                     	if	0	;tblptru may be non-zero
  7227  00F048                     	endif
  7228  00F048  0008               	tblrd		*
  7229  00F04A  CFF5 F027          	movff	tablat,sprintf@c
  7230  00F04E  5027               	movf	sprintf@c,w,c
  7231  00F050  B4D8               	btfsc	status,2,c
  7232  00F052  D002               	goto	l2653
  7233  00F054  D671               	goto	l2535
  7234  00F056  D000               	goto	l2653
  7235  00F058                     l2653:
  7236                           
  7237                           ;doprnt.c: 1538: *sp = 0;
  7238  00F058  C00D  FFD9         	movff	sprintf@sp,fsr2l
  7239  00F05C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  7240  00F060  0E00               	movlw	0
  7241  00F062  6EDF               	movwf	indf2,c
  7242  00F064  0012               	return	
  7243                           
  7244                           ;doprnt.c: 1540: return 0;
  7245                           ;	Return value of _sprintf is never used
  7246  00F066  0012               	return		;funcret
  7247  00F068                     __end_of_sprintf:
  7248                           	opt stack 0
  7249                           tblptru	equ	0xFF8
  7250                           tblptrh	equ	0xFF7
  7251                           tblptrl	equ	0xFF6
  7252                           tablat	equ	0xFF5
  7253                           prodh	equ	0xFF4
  7254                           prodl	equ	0xFF3
  7255                           intcon	equ	0xFF2
  7256                           postinc0	equ	0xFEE
  7257                           wreg	equ	0xFE8
  7258                           postdec1	equ	0xFE5
  7259                           fsr1l	equ	0xFE1
  7260                           indf2	equ	0xFDF
  7261                           postinc2	equ	0xFDE
  7262                           postdec2	equ	0xFDD
  7263                           fsr2h	equ	0xFDA
  7264                           fsr2l	equ	0xFD9
  7265                           status	equ	0xFD8
  7266                           
  7267 ;; *************** function _isdigit *****************
  7268 ;; Defined at:
  7269 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  c               1    wreg     unsigned char 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  c               1    2[COMRAM] unsigned char 
  7274 ;; Return value:  Size  Location     Type
  7275 ;;		None               void
  7276 ;; Registers used:
  7277 ;;		wreg, status,2, status,0
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7285 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7286 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7287 ;;Total ram usage:        3 bytes
  7288 ;; Hardware stack levels used:    1
  7289 ;; This function calls:
  7290 ;;		Nothing
  7291 ;; This function is called by:
  7292 ;;		_sprintf
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           	psect	text19
  7297  00DC96                     __ptext19:
  7298                           	opt stack 0
  7299  00DC96                     _isdigit:
  7300                           	opt stack 29
  7301                           
  7302                           ;incstack = 0
  7303                           ;isdigit@c stored from wreg
  7304  00DC96  6E03               	movwf	isdigit@c,c
  7305  00DC98  0E00               	movlw	0
  7306  00DC9A  6E02               	movwf	_isdigit$2093,c
  7307  00DC9C  0E3A               	movlw	58
  7308  00DC9E  6003               	cpfslt	isdigit@c,c
  7309  00DCA0  D006               	goto	l2439
  7310  00DCA2  0E2F               	movlw	47
  7311  00DCA4  6403               	cpfsgt	isdigit@c,c
  7312  00DCA6  D003               	goto	l2439
  7313  00DCA8  0E01               	movlw	1
  7314  00DCAA  6E02               	movwf	_isdigit$2093,c
  7315  00DCAC  D000               	goto	l2439
  7316  00DCAE                     l2439:
  7317  00DCAE  C002  F001         	movff	_isdigit$2093,??_isdigit
  7318  00DCB2  3001               	rrcf	??_isdigit,w,c
  7319  00DCB4  0012               	return	
  7320  00DCB6  0012               	return		;funcret
  7321  00DCB8                     __end_of_isdigit:
  7322                           	opt stack 0
  7323                           tblptru	equ	0xFF8
  7324                           tblptrh	equ	0xFF7
  7325                           tblptrl	equ	0xFF6
  7326                           tablat	equ	0xFF5
  7327                           prodh	equ	0xFF4
  7328                           prodl	equ	0xFF3
  7329                           intcon	equ	0xFF2
  7330                           postinc0	equ	0xFEE
  7331                           wreg	equ	0xFE8
  7332                           postdec1	equ	0xFE5
  7333                           fsr1l	equ	0xFE1
  7334                           indf2	equ	0xFDF
  7335                           postinc2	equ	0xFDE
  7336                           postdec2	equ	0xFDD
  7337                           fsr2h	equ	0xFDA
  7338                           fsr2l	equ	0xFD9
  7339                           status	equ	0xFD8
  7340                           
  7341 ;; *************** function ___wmul *****************
  7342 ;; Defined at:
  7343 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  multiplier      2    0[COMRAM] unsigned int 
  7346 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;  product         2    4[COMRAM] unsigned int 
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  2    0[COMRAM] unsigned int 
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0, prodl, prodh
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7361 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7362 ;;Total ram usage:        6 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_sprintf
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text20
  7372  00DCB8                     __ptext20:
  7373                           	opt stack 0
  7374  00DCB8                     ___wmul:
  7375                           	opt stack 29
  7376                           
  7377                           ;incstack = 0
  7378  00DCB8  5001               	movf	___wmul@multiplier,w,c
  7379  00DCBA  0203               	mulwf	___wmul@multiplicand,c
  7380  00DCBC  CFF3 F005          	movff	prodl,___wmul@product
  7381  00DCC0  CFF4 F006          	movff	prodh,___wmul@product+1
  7382  00DCC4  5001               	movf	___wmul@multiplier,w,c
  7383  00DCC6  0204               	mulwf	___wmul@multiplicand+1,c
  7384  00DCC8  50F3               	movf	prodl,w,c
  7385  00DCCA  2606               	addwf	___wmul@product+1,f,c
  7386  00DCCC  5002               	movf	___wmul@multiplier+1,w,c
  7387  00DCCE  0203               	mulwf	___wmul@multiplicand,c
  7388  00DCD0  50F3               	movf	prodl,w,c
  7389  00DCD2  2606               	addwf	___wmul@product+1,f,c
  7390  00DCD4  C005  F001         	movff	___wmul@product,?___wmul
  7391  00DCD8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7392  00DCDC  0012               	return	
  7393  00DCDE  0012               	return		;funcret
  7394  00DCE0                     __end_of___wmul:
  7395                           	opt stack 0
  7396                           tblptru	equ	0xFF8
  7397                           tblptrh	equ	0xFF7
  7398                           tblptrl	equ	0xFF6
  7399                           tablat	equ	0xFF5
  7400                           prodh	equ	0xFF4
  7401                           prodl	equ	0xFF3
  7402                           intcon	equ	0xFF2
  7403                           postinc0	equ	0xFEE
  7404                           wreg	equ	0xFE8
  7405                           postdec1	equ	0xFE5
  7406                           fsr1l	equ	0xFE1
  7407                           indf2	equ	0xFDF
  7408                           postinc2	equ	0xFDE
  7409                           postdec2	equ	0xFDD
  7410                           fsr2h	equ	0xFDA
  7411                           fsr2l	equ	0xFD9
  7412                           status	equ	0xFD8
  7413                           
  7414 ;; *************** function ___lwmod *****************
  7415 ;; Defined at:
  7416 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  dividend        2    7[COMRAM] unsigned int 
  7419 ;;  divisor         2    9[COMRAM] unsigned int 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  counter         1   11[COMRAM] unsigned char 
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  2    7[COMRAM] unsigned int 
  7424 ;; Registers used:
  7425 ;;		wreg, status,2, status,0
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7431 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7434 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7435 ;;Total ram usage:        5 bytes
  7436 ;; Hardware stack levels used:    1
  7437 ;; This function calls:
  7438 ;;		Nothing
  7439 ;; This function is called by:
  7440 ;;		_sprintf
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text21
  7445  00DD22                     __ptext21:
  7446                           	opt stack 0
  7447  00DD22                     ___lwmod:
  7448                           	opt stack 29
  7449                           
  7450                           ;incstack = 0
  7451  00DD22  500A               	movf	___lwmod@divisor,w,c
  7452  00DD24  100B               	iorwf	___lwmod@divisor+1,w,c
  7453  00DD26  B4D8               	btfsc	status,2,c
  7454  00DD28  D01D               	goto	l1044
  7455  00DD2A  0E01               	movlw	1
  7456  00DD2C  6E0C               	movwf	___lwmod@counter,c
  7457  00DD2E  D005               	goto	l2477
  7458  00DD30                     l2475:
  7459  00DD30  90D8               	bcf	status,0,c
  7460  00DD32  360A               	rlcf	___lwmod@divisor,f,c
  7461  00DD34  360B               	rlcf	___lwmod@divisor+1,f,c
  7462  00DD36  2A0C               	incf	___lwmod@counter,f,c
  7463  00DD38  D000               	goto	l2477
  7464  00DD3A                     l2477:
  7465  00DD3A  BE0B               	btfsc	___lwmod@divisor+1,7,c
  7466  00DD3C  D002               	goto	l2479
  7467  00DD3E  D7F8               	goto	l2475
  7468  00DD40  D000               	goto	l2479
  7469  00DD42                     l2479:
  7470  00DD42  500A               	movf	___lwmod@divisor,w,c
  7471  00DD44  5C08               	subwf	___lwmod@dividend,w,c
  7472  00DD46  500B               	movf	___lwmod@divisor+1,w,c
  7473  00DD48  5809               	subwfb	___lwmod@dividend+1,w,c
  7474  00DD4A  A0D8               	btfss	status,0,c
  7475  00DD4C  D005               	goto	l2483
  7476  00DD4E  500A               	movf	___lwmod@divisor,w,c
  7477  00DD50  5E08               	subwf	___lwmod@dividend,f,c
  7478  00DD52  500B               	movf	___lwmod@divisor+1,w,c
  7479  00DD54  5A09               	subwfb	___lwmod@dividend+1,f,c
  7480  00DD56  D000               	goto	l2483
  7481  00DD58                     l2483:
  7482  00DD58  90D8               	bcf	status,0,c
  7483  00DD5A  320B               	rrcf	___lwmod@divisor+1,f,c
  7484  00DD5C  320A               	rrcf	___lwmod@divisor,f,c
  7485  00DD5E  2E0C               	decfsz	___lwmod@counter,f,c
  7486  00DD60  D7F0               	goto	l2479
  7487  00DD62  D000               	goto	l1044
  7488  00DD64                     l1044:
  7489  00DD64  C008  F008         	movff	___lwmod@dividend,?___lwmod
  7490  00DD68  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  7491  00DD6C  0012               	return		;funcret
  7492  00DD6E                     __end_of___lwmod:
  7493                           	opt stack 0
  7494                           tblptru	equ	0xFF8
  7495                           tblptrh	equ	0xFF7
  7496                           tblptrl	equ	0xFF6
  7497                           tablat	equ	0xFF5
  7498                           prodh	equ	0xFF4
  7499                           prodl	equ	0xFF3
  7500                           intcon	equ	0xFF2
  7501                           postinc0	equ	0xFEE
  7502                           wreg	equ	0xFE8
  7503                           postdec1	equ	0xFE5
  7504                           fsr1l	equ	0xFE1
  7505                           indf2	equ	0xFDF
  7506                           postinc2	equ	0xFDE
  7507                           postdec2	equ	0xFDD
  7508                           fsr2h	equ	0xFDA
  7509                           fsr2l	equ	0xFD9
  7510                           status	equ	0xFD8
  7511                           
  7512 ;; *************** function ___lwdiv *****************
  7513 ;; Defined at:
  7514 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  dividend        2    0[COMRAM] unsigned int 
  7517 ;;  divisor         2    2[COMRAM] unsigned int 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  quotient        2    4[COMRAM] unsigned int 
  7520 ;;  counter         1    6[COMRAM] unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  2    0[COMRAM] unsigned int 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7530 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7531 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7533 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7534 ;;Total ram usage:        7 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; This function calls:
  7537 ;;		Nothing
  7538 ;; This function is called by:
  7539 ;;		_sprintf
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           	psect	text22
  7544  00DDC8                     __ptext22:
  7545                           	opt stack 0
  7546  00DDC8                     ___lwdiv:
  7547                           	opt stack 29
  7548                           
  7549                           ;incstack = 0
  7550  00DDC8  0E00               	movlw	0
  7551  00DDCA  6E06               	movwf	___lwdiv@quotient+1,c
  7552  00DDCC  0E00               	movlw	0
  7553  00DDCE  6E05               	movwf	___lwdiv@quotient,c
  7554  00DDD0  5003               	movf	___lwdiv@divisor,w,c
  7555  00DDD2  1004               	iorwf	___lwdiv@divisor+1,w,c
  7556  00DDD4  B4D8               	btfsc	status,2,c
  7557  00DDD6  D021               	goto	l1034
  7558  00DDD8  0E01               	movlw	1
  7559  00DDDA  6E07               	movwf	___lwdiv@counter,c
  7560  00DDDC  D005               	goto	l2457
  7561  00DDDE                     l2455:
  7562  00DDDE  90D8               	bcf	status,0,c
  7563  00DDE0  3603               	rlcf	___lwdiv@divisor,f,c
  7564  00DDE2  3604               	rlcf	___lwdiv@divisor+1,f,c
  7565  00DDE4  2A07               	incf	___lwdiv@counter,f,c
  7566  00DDE6  D000               	goto	l2457
  7567  00DDE8                     l2457:
  7568  00DDE8  BE04               	btfsc	___lwdiv@divisor+1,7,c
  7569  00DDEA  D002               	goto	l2459
  7570  00DDEC  D7F8               	goto	l2455
  7571  00DDEE  D000               	goto	l2459
  7572  00DDF0                     l2459:
  7573  00DDF0  90D8               	bcf	status,0,c
  7574  00DDF2  3605               	rlcf	___lwdiv@quotient,f,c
  7575  00DDF4  3606               	rlcf	___lwdiv@quotient+1,f,c
  7576  00DDF6  5003               	movf	___lwdiv@divisor,w,c
  7577  00DDF8  5C01               	subwf	___lwdiv@dividend,w,c
  7578  00DDFA  5004               	movf	___lwdiv@divisor+1,w,c
  7579  00DDFC  5802               	subwfb	___lwdiv@dividend+1,w,c
  7580  00DDFE  A0D8               	btfss	status,0,c
  7581  00DE00  D006               	goto	l2467
  7582  00DE02  5003               	movf	___lwdiv@divisor,w,c
  7583  00DE04  5E01               	subwf	___lwdiv@dividend,f,c
  7584  00DE06  5004               	movf	___lwdiv@divisor+1,w,c
  7585  00DE08  5A02               	subwfb	___lwdiv@dividend+1,f,c
  7586  00DE0A  8005               	bsf	___lwdiv@quotient,0,c
  7587  00DE0C  D000               	goto	l2467
  7588  00DE0E                     l2467:
  7589  00DE0E  90D8               	bcf	status,0,c
  7590  00DE10  3204               	rrcf	___lwdiv@divisor+1,f,c
  7591  00DE12  3203               	rrcf	___lwdiv@divisor,f,c
  7592  00DE14  2E07               	decfsz	___lwdiv@counter,f,c
  7593  00DE16  D7EC               	goto	l2459
  7594  00DE18  D000               	goto	l1034
  7595  00DE1A                     l1034:
  7596  00DE1A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7597  00DE1E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7598  00DE22  0012               	return		;funcret
  7599  00DE24                     __end_of___lwdiv:
  7600                           	opt stack 0
  7601                           tblptru	equ	0xFF8
  7602                           tblptrh	equ	0xFF7
  7603                           tblptrl	equ	0xFF6
  7604                           tablat	equ	0xFF5
  7605                           prodh	equ	0xFF4
  7606                           prodl	equ	0xFF3
  7607                           intcon	equ	0xFF2
  7608                           postinc0	equ	0xFEE
  7609                           wreg	equ	0xFE8
  7610                           postdec1	equ	0xFE5
  7611                           fsr1l	equ	0xFE1
  7612                           indf2	equ	0xFDF
  7613                           postinc2	equ	0xFDE
  7614                           postdec2	equ	0xFDD
  7615                           fsr2h	equ	0xFDA
  7616                           fsr2l	equ	0xFD9
  7617                           status	equ	0xFD8
  7618                           
  7619 ;; *************** function _Lcd_Init *****************
  7620 ;; Defined at:
  7621 ;;		line 42 in file "../lcd.h"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;		None
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  data            1    4[COMRAM] unsigned char 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;		None               void
  7628 ;; Registers used:
  7629 ;;		wreg, status,2, status,0, cstack
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7639 ;;Total ram usage:        2 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:    1
  7642 ;; This function calls:
  7643 ;;		_Lcd_Cmd
  7644 ;; This function is called by:
  7645 ;;		_main
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           	psect	text23
  7650  00E2E2                     __ptext23:
  7651                           	opt stack 0
  7652  00E2E2                     _Lcd_Init:
  7653                           	opt stack 29
  7654                           
  7655                           ;lcd.h: 43: unsigned char data;
  7656                           ;lcd.h: 44: TRISBbits.TRISB0 = 0;
  7657                           
  7658                           ;incstack = 0
  7659  00E2E2  9093               	bcf	3987,0,c	;volatile
  7660                           
  7661                           ;lcd.h: 45: TRISBbits.TRISB1 = 0;
  7662  00E2E4  9293               	bcf	3987,1,c	;volatile
  7663                           
  7664                           ;lcd.h: 46: TRISBbits.TRISB2 = 0;
  7665  00E2E6  9493               	bcf	3987,2,c	;volatile
  7666                           
  7667                           ;lcd.h: 47: TRISBbits.TRISB3 = 0;
  7668  00E2E8  9693               	bcf	3987,3,c	;volatile
  7669                           
  7670                           ;lcd.h: 48: TRISBbits.TRISB4 = 0;
  7671  00E2EA  9893               	bcf	3987,4,c	;volatile
  7672                           
  7673                           ;lcd.h: 49: TRISBbits.TRISB5 = 0;
  7674  00E2EC  9A93               	bcf	3987,5,c	;volatile
  7675                           
  7676                           ;lcd.h: 50: LATBbits.LATB0 = 0;
  7677  00E2EE  908A               	bcf	3978,0,c	;volatile
  7678                           
  7679                           ;lcd.h: 51: LATBbits.LATB1 = 0;
  7680  00E2F0  928A               	bcf	3978,1,c	;volatile
  7681                           
  7682                           ;lcd.h: 52: LATBbits.LATB2 = 0;
  7683  00E2F2  948A               	bcf	3978,2,c	;volatile
  7684                           
  7685                           ;lcd.h: 53: LATBbits.LATB3 = 0;
  7686  00E2F4  968A               	bcf	3978,3,c	;volatile
  7687                           
  7688                           ;lcd.h: 54: LATBbits.LATB4 = 0;
  7689  00E2F6  988A               	bcf	3978,4,c	;volatile
  7690                           
  7691                           ;lcd.h: 55: LATBbits.LATB5 = 0;
  7692  00E2F8  9A8A               	bcf	3978,5,c	;volatile
  7693                           
  7694                           ;lcd.h: 56: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7695  00E2FA  0E0F               	movlw	15
  7696  00E2FC  6E04               	movwf	??_Lcd_Init& (0+255),c
  7697  00E2FE  0E48               	movlw	72
  7698  00E300                     u4027:
  7699  00E300  2EE8               	decfsz	wreg,f,c
  7700  00E302  D7FE               	goto	u4027
  7701  00E304  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7702  00E306  D7FC               	goto	u4027
  7703                           
  7704                           ;lcd.h: 57: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7705  00E308  0E0F               	movlw	15
  7706  00E30A  6E04               	movwf	??_Lcd_Init& (0+255),c
  7707  00E30C  0E48               	movlw	72
  7708  00E30E                     u4037:
  7709  00E30E  2EE8               	decfsz	wreg,f,c
  7710  00E310  D7FE               	goto	u4037
  7711  00E312  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7712  00E314  D7FC               	goto	u4037
  7713                           
  7714                           ;lcd.h: 58: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7715  00E316  0E0F               	movlw	15
  7716  00E318  6E04               	movwf	??_Lcd_Init& (0+255),c
  7717  00E31A  0E48               	movlw	72
  7718  00E31C                     u4047:
  7719  00E31C  2EE8               	decfsz	wreg,f,c
  7720  00E31E  D7FE               	goto	u4047
  7721  00E320  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7722  00E322  D7FC               	goto	u4047
  7723                           
  7724                           ;lcd.h: 59: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7725  00E324  0E0F               	movlw	15
  7726  00E326  6E04               	movwf	??_Lcd_Init& (0+255),c
  7727  00E328  0E48               	movlw	72
  7728  00E32A                     u4057:
  7729  00E32A  2EE8               	decfsz	wreg,f,c
  7730  00E32C  D7FE               	goto	u4057
  7731  00E32E  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7732  00E330  D7FC               	goto	u4057
  7733                           
  7734                           ;lcd.h: 60: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7735  00E332  0E0F               	movlw	15
  7736  00E334  6E04               	movwf	??_Lcd_Init& (0+255),c
  7737  00E336  0E48               	movlw	72
  7738  00E338                     u4067:
  7739  00E338  2EE8               	decfsz	wreg,f,c
  7740  00E33A  D7FE               	goto	u4067
  7741  00E33C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7742  00E33E  D7FC               	goto	u4067
  7743                           
  7744                           ;lcd.h: 61: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7745  00E340  0E0F               	movlw	15
  7746  00E342  6E04               	movwf	??_Lcd_Init& (0+255),c
  7747  00E344  0E48               	movlw	72
  7748  00E346                     u4077:
  7749  00E346  2EE8               	decfsz	wreg,f,c
  7750  00E348  D7FE               	goto	u4077
  7751  00E34A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7752  00E34C  D7FC               	goto	u4077
  7753                           
  7754                           ;lcd.h: 62: for(data = 1; data < 4; data ++)
  7755  00E34E  0E01               	movlw	1
  7756  00E350  6E05               	movwf	Lcd_Init@data,c
  7757  00E352  D01F               	goto	L6
  7758  00E354  D021               	goto	l76
  7759  00E356                     l75:
  7760                           
  7761                           ;lcd.h: 63: {
  7762                           ;lcd.h: 64: LATBbits.LATB0 = 0; LATBbits.LATB1 = 0; LATBbits.LATB2 = 1; LATBbits.LATB3 =
      +                           1; LATBbits.LATB4 = 0;
  7763  00E356  908A               	bcf	3978,0,c	;volatile
  7764  00E358  928A               	bcf	3978,1,c	;volatile
  7765  00E35A  848A               	bsf	3978,2,c	;volatile
  7766  00E35C  868A               	bsf	3978,3,c	;volatile
  7767  00E35E  988A               	bcf	3978,4,c	;volatile
  7768                           
  7769                           ;lcd.h: 65: LATBbits.LATB5 = 0; LATBbits.LATB0 = 0; LATBbits.LATB1 = 0; LATBbits.LATB2 =
      +                           1; LATBbits.LATB3 = 1;
  7770  00E360  9A8A               	bcf	3978,5,c	;volatile
  7771  00E362  908A               	bcf	3978,0,c	;volatile
  7772  00E364  928A               	bcf	3978,1,c	;volatile
  7773  00E366  848A               	bsf	3978,2,c	;volatile
  7774  00E368  868A               	bsf	3978,3,c	;volatile
  7775                           
  7776                           ;lcd.h: 66: LATBbits.LATB4 = 1; LATBbits.LATB5 = 0;
  7777  00E36A  888A               	bsf	3978,4,c	;volatile
  7778  00E36C  9A8A               	bcf	3978,5,c	;volatile
  7779                           
  7780                           ;lcd.h: 67: _delay((unsigned long)((5)*(8000000/4000000.0)));
  7781  00E36E  0E03               	movlw	3
  7782  00E370                     u4087:
  7783  00E370  2EE8               	decfsz	wreg,f,c
  7784  00E372  D7FE               	goto	u4087
  7785  00E374  F000               	nop	
  7786                           
  7787                           ;lcd.h: 68: LATBbits.LATB0 = 0; LATBbits.LATB1 = 0; LATBbits.LATB2 = 1; LATBbits.LATB3 =
      +                           1; LATBbits.LATB4 = 0;
  7788  00E376  908A               	bcf	3978,0,c	;volatile
  7789  00E378  928A               	bcf	3978,1,c	;volatile
  7790  00E37A  848A               	bsf	3978,2,c	;volatile
  7791  00E37C  868A               	bsf	3978,3,c	;volatile
  7792  00E37E  988A               	bcf	3978,4,c	;volatile
  7793                           
  7794                           ;lcd.h: 69: LATBbits.LATB5 = 0;
  7795  00E380  9A8A               	bcf	3978,5,c	;volatile
  7796                           
  7797                           ;lcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7798  00E382  0E0F               	movlw	15
  7799  00E384  6E04               	movwf	??_Lcd_Init& (0+255),c
  7800  00E386  0E48               	movlw	72
  7801  00E388                     u4097:
  7802  00E388  2EE8               	decfsz	wreg,f,c
  7803  00E38A  D7FE               	goto	u4097
  7804  00E38C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7805  00E38E  D7FC               	goto	u4097
  7806  00E390  2A05               	incf	Lcd_Init@data,f,c
  7807  00E392                     L6:
  7808  00E392  0E03               	movlw	3
  7809  00E394  6405               	cpfsgt	Lcd_Init@data,c
  7810  00E396  D7DF               	goto	l75
  7811  00E398                     l76:
  7812                           
  7813                           ;lcd.h: 71: }
  7814                           ;lcd.h: 72: LATBbits.LATB0 = 0; LATBbits.LATB1 = 0; LATBbits.LATB2 = 1; LATBbits.LATB3 =
      +                           0; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  7815  00E398  908A               	bcf	3978,0,c	;volatile
  7816  00E39A  928A               	bcf	3978,1,c	;volatile
  7817  00E39C  848A               	bsf	3978,2,c	;volatile
  7818  00E39E  968A               	bcf	3978,3,c	;volatile
  7819  00E3A0  988A               	bcf	3978,4,c	;volatile
  7820  00E3A2  9A8A               	bcf	3978,5,c	;volatile
  7821                           
  7822                           ;lcd.h: 73: LATBbits.LATB0 = 0; LATBbits.LATB1 = 0; LATBbits.LATB2 = 1; LATBbits.LATB3 =
      +                           0; LATBbits.LATB4 = 1; LATBbits.LATB5 = 0;
  7823  00E3A4  908A               	bcf	3978,0,c	;volatile
  7824  00E3A6  928A               	bcf	3978,1,c	;volatile
  7825  00E3A8  848A               	bsf	3978,2,c	;volatile
  7826  00E3AA  968A               	bcf	3978,3,c	;volatile
  7827  00E3AC  888A               	bsf	3978,4,c	;volatile
  7828  00E3AE  9A8A               	bcf	3978,5,c	;volatile
  7829                           
  7830                           ;lcd.h: 74: _delay((unsigned long)((5)*(8000000/4000000.0)));
  7831  00E3B0  0E03               	movlw	3
  7832  00E3B2                     u4107:
  7833  00E3B2  2EE8               	decfsz	wreg,f,c
  7834  00E3B4  D7FE               	goto	u4107
  7835  00E3B6  F000               	nop	
  7836                           
  7837                           ;lcd.h: 75: LATBbits.LATB0 = 0; LATBbits.LATB1 = 0; LATBbits.LATB2 = 1; LATBbits.LATB3 =
      +                           0; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  7838  00E3B8  908A               	bcf	3978,0,c	;volatile
  7839  00E3BA  928A               	bcf	3978,1,c	;volatile
  7840  00E3BC  848A               	bsf	3978,2,c	;volatile
  7841  00E3BE  968A               	bcf	3978,3,c	;volatile
  7842  00E3C0  988A               	bcf	3978,4,c	;volatile
  7843  00E3C2  9A8A               	bcf	3978,5,c	;volatile
  7844                           
  7845                           ;lcd.h: 76: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7846  00E3C4  0E0F               	movlw	15
  7847  00E3C6  6E04               	movwf	??_Lcd_Init& (0+255),c
  7848  00E3C8  0E48               	movlw	72
  7849  00E3CA                     u4117:
  7850  00E3CA  2EE8               	decfsz	wreg,f,c
  7851  00E3CC  D7FE               	goto	u4117
  7852  00E3CE  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7853  00E3D0  D7FC               	goto	u4117
  7854                           
  7855                           ;lcd.h: 77: data = 40; Lcd_Cmd(data);
  7856  00E3D2  0E28               	movlw	40
  7857  00E3D4  6E05               	movwf	Lcd_Init@data,c
  7858  00E3D6  5005               	movf	Lcd_Init@data,w,c
  7859  00E3D8  EC8D  F072         	call	_Lcd_Cmd
  7860                           
  7861                           ;lcd.h: 78: data = 16; Lcd_Cmd(data);
  7862  00E3DC  0E10               	movlw	16
  7863  00E3DE  6E05               	movwf	Lcd_Init@data,c
  7864  00E3E0  5005               	movf	Lcd_Init@data,w,c
  7865  00E3E2  EC8D  F072         	call	_Lcd_Cmd
  7866                           
  7867                           ;lcd.h: 79: data = 1; Lcd_Cmd(data);
  7868  00E3E6  0E01               	movlw	1
  7869  00E3E8  6E05               	movwf	Lcd_Init@data,c
  7870  00E3EA  5005               	movf	Lcd_Init@data,w,c
  7871  00E3EC  EC8D  F072         	call	_Lcd_Cmd
  7872                           
  7873                           ;lcd.h: 80: data = 15; Lcd_Cmd(data);
  7874  00E3F0  0E0F               	movlw	15
  7875  00E3F2  6E05               	movwf	Lcd_Init@data,c
  7876  00E3F4  5005               	movf	Lcd_Init@data,w,c
  7877  00E3F6  EC8D  F072         	call	_Lcd_Cmd
  7878  00E3FA  0012               	return		;funcret
  7879  00E3FC                     __end_of_Lcd_Init:
  7880                           	opt stack 0
  7881                           tblptru	equ	0xFF8
  7882                           tblptrh	equ	0xFF7
  7883                           tblptrl	equ	0xFF6
  7884                           tablat	equ	0xFF5
  7885                           prodh	equ	0xFF4
  7886                           prodl	equ	0xFF3
  7887                           intcon	equ	0xFF2
  7888                           postinc0	equ	0xFEE
  7889                           wreg	equ	0xFE8
  7890                           postdec1	equ	0xFE5
  7891                           fsr1l	equ	0xFE1
  7892                           indf2	equ	0xFDF
  7893                           postinc2	equ	0xFDE
  7894                           postdec2	equ	0xFDD
  7895                           fsr2h	equ	0xFDA
  7896                           fsr2l	equ	0xFD9
  7897                           status	equ	0xFD8
  7898                           
  7899 ;; *************** function _Lcd_Cmd *****************
  7900 ;; Defined at:
  7901 ;;		line 140 in file "../lcd.h"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  data            1    wreg     unsigned char 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  data            1    2[COMRAM] unsigned char 
  7906 ;; Return value:  Size  Location     Type
  7907 ;;		None               void
  7908 ;; Registers used:
  7909 ;;		wreg, status,2, status,0
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7919 ;;Total ram usage:        3 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_Lcd_Init
  7925 ;;		_Lcd_Out
  7926 ;;		_main
  7927 ;;		_V_ProgReloj
  7928 ;;		_V_ProgRiegoIlum
  7929 ;;		_Lcd_Out2
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text24
  7934  00E51A                     __ptext24:
  7935                           	opt stack 0
  7936  00E51A                     _Lcd_Cmd:
  7937                           	opt stack 28
  7938                           
  7939                           ;incstack = 0
  7940                           ;Lcd_Cmd@data stored from wreg
  7941  00E51A  6E03               	movwf	Lcd_Cmd@data,c
  7942                           
  7943                           ;lcd.h: 141: LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  7944  00E51C  988A               	bcf	3978,4,c	;volatile
  7945  00E51E  9A8A               	bcf	3978,5,c	;volatile
  7946                           
  7947                           ;lcd.h: 142: LATBbits.LATB0 = (data & 0b10000000)>>7; LATBbits.LATB1 = (data & 0b0100000
      +                          0)>>6;
  7948  00E520  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  7949  00E522  AE03               	btfss	Lcd_Cmd@data,7,c
  7950  00E524  D001               	bra	u2015
  7951  00E526  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  7952  00E528                     u2015:
  7953  00E528  0E01               	movlw	1
  7954  00E52A  1601               	andwf	??_Lcd_Cmd,f,c
  7955  00E52C  508A               	movf	3978,w,c	;volatile
  7956  00E52E  1801               	xorwf	??_Lcd_Cmd,w,c
  7957  00E530  0BFE               	andlw	-2
  7958  00E532  1801               	xorwf	??_Lcd_Cmd,w,c
  7959  00E534  6E8A               	movwf	3978,c	;volatile
  7960  00E536  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7961  00E53A  0E06               	movlw	6
  7962  00E53C  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7963  00E53E                     u2025:
  7964  00E53E  90D8               	bcf	status,0,c
  7965  00E540  3201               	rrcf	??_Lcd_Cmd,f,c
  7966  00E542  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7967  00E544  D7FC               	goto	u2025
  7968  00E546  0E01               	movlw	1
  7969  00E548  1601               	andwf	??_Lcd_Cmd,f,c
  7970  00E54A  4601               	rlncf	??_Lcd_Cmd,f,c
  7971  00E54C  508A               	movf	3978,w,c	;volatile
  7972  00E54E  1801               	xorwf	??_Lcd_Cmd,w,c
  7973  00E550  0BFD               	andlw	-3
  7974  00E552  1801               	xorwf	??_Lcd_Cmd,w,c
  7975  00E554  6E8A               	movwf	3978,c	;volatile
  7976                           
  7977                           ;lcd.h: 143: LATBbits.LATB2 = (data & 0b00100000)>>5; LATBbits.LATB3 = (data & 0b0001000
      +                          0)>>4;
  7978  00E556  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7979  00E55A  0E05               	movlw	5
  7980  00E55C  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  7981  00E55E                     u2035:
  7982  00E55E  90D8               	bcf	status,0,c
  7983  00E560  3201               	rrcf	??_Lcd_Cmd,f,c
  7984  00E562  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  7985  00E564  D7FC               	goto	u2035
  7986  00E566  0E01               	movlw	1
  7987  00E568  1601               	andwf	??_Lcd_Cmd,f,c
  7988  00E56A  4601               	rlncf	??_Lcd_Cmd,f,c
  7989  00E56C  4601               	rlncf	??_Lcd_Cmd,f,c
  7990  00E56E  508A               	movf	3978,w,c	;volatile
  7991  00E570  1801               	xorwf	??_Lcd_Cmd,w,c
  7992  00E572  0BFB               	andlw	-5
  7993  00E574  1801               	xorwf	??_Lcd_Cmd,w,c
  7994  00E576  6E8A               	movwf	3978,c	;volatile
  7995  00E578  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7996  00E57C  3A01               	swapf	??_Lcd_Cmd,f,c
  7997  00E57E  0E0F               	movlw	15
  7998  00E580  1601               	andwf	??_Lcd_Cmd,f,c
  7999  00E582  0E01               	movlw	1
  8000  00E584  1601               	andwf	??_Lcd_Cmd,f,c
  8001  00E586  4601               	rlncf	??_Lcd_Cmd,f,c
  8002  00E588  4601               	rlncf	??_Lcd_Cmd,f,c
  8003  00E58A  4601               	rlncf	??_Lcd_Cmd,f,c
  8004  00E58C  508A               	movf	3978,w,c	;volatile
  8005  00E58E  1801               	xorwf	??_Lcd_Cmd,w,c
  8006  00E590  0BF7               	andlw	-9
  8007  00E592  1801               	xorwf	??_Lcd_Cmd,w,c
  8008  00E594  6E8A               	movwf	3978,c	;volatile
  8009                           
  8010                           ;lcd.h: 144: _delay(10);
  8011  00E596  0E03               	movlw	3
  8012  00E598                     u4127:
  8013  00E598  2EE8               	decfsz	wreg,f,c
  8014  00E59A  D7FE               	goto	u4127
  8015  00E59C  F000               	nop	
  8016                           
  8017                           ;lcd.h: 145: LATBbits.LATB4 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); LATBb
      +                          its.LATB4 = 0;
  8018  00E59E  888A               	bsf	3978,4,c	;volatile
  8019  00E5A0  0E03               	movlw	3
  8020  00E5A2                     u4137:
  8021  00E5A2  2EE8               	decfsz	wreg,f,c
  8022  00E5A4  D7FE               	goto	u4137
  8023  00E5A6  F000               	nop	
  8024  00E5A8  988A               	bcf	3978,4,c	;volatile
  8025                           
  8026                           ;lcd.h: 146: LATBbits.LATB0 = (data & 0b00001000)>>3; LATBbits.LATB1 = (data & 0b0000010
      +                          0)>>2;
  8027  00E5AA  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8028  00E5AE  90D8               	bcf	status,0,c
  8029  00E5B0  3201               	rrcf	??_Lcd_Cmd,f,c
  8030  00E5B2  90D8               	bcf	status,0,c
  8031  00E5B4  3201               	rrcf	??_Lcd_Cmd,f,c
  8032  00E5B6  90D8               	bcf	status,0,c
  8033  00E5B8  3201               	rrcf	??_Lcd_Cmd,f,c
  8034  00E5BA  0E01               	movlw	1
  8035  00E5BC  1601               	andwf	??_Lcd_Cmd,f,c
  8036  00E5BE  508A               	movf	3978,w,c	;volatile
  8037  00E5C0  1801               	xorwf	??_Lcd_Cmd,w,c
  8038  00E5C2  0BFE               	andlw	-2
  8039  00E5C4  1801               	xorwf	??_Lcd_Cmd,w,c
  8040  00E5C6  6E8A               	movwf	3978,c	;volatile
  8041  00E5C8  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8042  00E5CC  90D8               	bcf	status,0,c
  8043  00E5CE  3201               	rrcf	??_Lcd_Cmd,f,c
  8044  00E5D0  90D8               	bcf	status,0,c
  8045  00E5D2  3201               	rrcf	??_Lcd_Cmd,f,c
  8046  00E5D4  0E01               	movlw	1
  8047  00E5D6  1601               	andwf	??_Lcd_Cmd,f,c
  8048  00E5D8  4601               	rlncf	??_Lcd_Cmd,f,c
  8049  00E5DA  508A               	movf	3978,w,c	;volatile
  8050  00E5DC  1801               	xorwf	??_Lcd_Cmd,w,c
  8051  00E5DE  0BFD               	andlw	-3
  8052  00E5E0  1801               	xorwf	??_Lcd_Cmd,w,c
  8053  00E5E2  6E8A               	movwf	3978,c	;volatile
  8054                           
  8055                           ;lcd.h: 147: LATBbits.LATB2 = (data & 0b00000010)>>1; LATBbits.LATB3 = (data & 0b0000000
      +                          1);
  8056  00E5E4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8057  00E5E8  90D8               	bcf	status,0,c
  8058  00E5EA  3201               	rrcf	??_Lcd_Cmd,f,c
  8059  00E5EC  0E01               	movlw	1
  8060  00E5EE  1601               	andwf	??_Lcd_Cmd,f,c
  8061  00E5F0  4601               	rlncf	??_Lcd_Cmd,f,c
  8062  00E5F2  4601               	rlncf	??_Lcd_Cmd,f,c
  8063  00E5F4  508A               	movf	3978,w,c	;volatile
  8064  00E5F6  1801               	xorwf	??_Lcd_Cmd,w,c
  8065  00E5F8  0BFB               	andlw	-5
  8066  00E5FA  1801               	xorwf	??_Lcd_Cmd,w,c
  8067  00E5FC  6E8A               	movwf	3978,c	;volatile
  8068  00E5FE  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8069  00E602  0E01               	movlw	1
  8070  00E604  1601               	andwf	??_Lcd_Cmd,f,c
  8071  00E606  4601               	rlncf	??_Lcd_Cmd,f,c
  8072  00E608  4601               	rlncf	??_Lcd_Cmd,f,c
  8073  00E60A  4601               	rlncf	??_Lcd_Cmd,f,c
  8074  00E60C  508A               	movf	3978,w,c	;volatile
  8075  00E60E  1801               	xorwf	??_Lcd_Cmd,w,c
  8076  00E610  0BF7               	andlw	-9
  8077  00E612  1801               	xorwf	??_Lcd_Cmd,w,c
  8078  00E614  6E8A               	movwf	3978,c	;volatile
  8079                           
  8080                           ;lcd.h: 148: _delay(10);
  8081  00E616  0E03               	movlw	3
  8082  00E618                     u4147:
  8083  00E618  2EE8               	decfsz	wreg,f,c
  8084  00E61A  D7FE               	goto	u4147
  8085  00E61C  F000               	nop	
  8086                           
  8087                           ;lcd.h: 149: LATBbits.LATB4 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); LATBb
      +                          its.LATB4 = 0;
  8088  00E61E  888A               	bsf	3978,4,c	;volatile
  8089  00E620  0E03               	movlw	3
  8090  00E622                     u4157:
  8091  00E622  2EE8               	decfsz	wreg,f,c
  8092  00E624  D7FE               	goto	u4157
  8093  00E626  F000               	nop	
  8094  00E628  988A               	bcf	3978,4,c	;volatile
  8095                           
  8096                           ;lcd.h: 150: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  8097  00E62A  0E0F               	movlw	15
  8098  00E62C  6E01               	movwf	??_Lcd_Cmd& (0+255),c
  8099  00E62E  0E48               	movlw	72
  8100  00E630                     u4167:
  8101  00E630  2EE8               	decfsz	wreg,f,c
  8102  00E632  D7FE               	goto	u4167
  8103  00E634  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
  8104  00E636  D7FC               	goto	u4167
  8105  00E638  0012               	return		;funcret
  8106  00E63A                     __end_of_Lcd_Cmd:
  8107                           	opt stack 0
  8108                           tblptru	equ	0xFF8
  8109                           tblptrh	equ	0xFF7
  8110                           tblptrl	equ	0xFF6
  8111                           tablat	equ	0xFF5
  8112                           prodh	equ	0xFF4
  8113                           prodl	equ	0xFF3
  8114                           intcon	equ	0xFF2
  8115                           postinc0	equ	0xFEE
  8116                           wreg	equ	0xFE8
  8117                           postdec1	equ	0xFE5
  8118                           fsr1l	equ	0xFE1
  8119                           indf2	equ	0xFDF
  8120                           postinc2	equ	0xFDE
  8121                           postdec2	equ	0xFDD
  8122                           fsr2h	equ	0xFDA
  8123                           fsr2l	equ	0xFD9
  8124                           status	equ	0xFD8
  8125                           tblptru	equ	0xFF8
  8126                           tblptrh	equ	0xFF7
  8127                           tblptrl	equ	0xFF6
  8128                           tablat	equ	0xFF5
  8129                           prodh	equ	0xFF4
  8130                           prodl	equ	0xFF3
  8131                           intcon	equ	0xFF2
  8132                           postinc0	equ	0xFEE
  8133                           wreg	equ	0xFE8
  8134                           postdec1	equ	0xFE5
  8135                           fsr1l	equ	0xFE1
  8136                           indf2	equ	0xFDF
  8137                           postinc2	equ	0xFDE
  8138                           postdec2	equ	0xFDD
  8139                           fsr2h	equ	0xFDA
  8140                           fsr2l	equ	0xFD9
  8141                           status	equ	0xFD8
  8142                           
  8143                           	psect	rparam
  8144  0000                     tblptru	equ	0xFF8
  8145                           tblptrh	equ	0xFF7
  8146                           tblptrl	equ	0xFF6
  8147                           tablat	equ	0xFF5
  8148                           prodh	equ	0xFF4
  8149                           prodl	equ	0xFF3
  8150                           intcon	equ	0xFF2
  8151                           postinc0	equ	0xFEE
  8152                           wreg	equ	0xFE8
  8153                           postdec1	equ	0xFE5
  8154                           fsr1l	equ	0xFE1
  8155                           indf2	equ	0xFDF
  8156                           postinc2	equ	0xFDE
  8157                           postdec2	equ	0xFDD
  8158                           fsr2h	equ	0xFDA
  8159                           fsr2l	equ	0xFD9
  8160                           status	equ	0xFD8


Data Sizes:
    Strings     343
    Constant    10
    Data        76
    BSS         75
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     81      95
    BANK0           160      0     150
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(BANK0[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(BANK0[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(BANK0[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(BANK0[4]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_88(CODE[7]), STR_87(CODE[21]), STR_85(CODE[21]), STR_83(CODE[21]), 
		 -> STR_81(CODE[21]), STR_79(CODE[21]), STR_77(CODE[21]), STR_75(CODE[21]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_86(CODE[3]), STR_84(CODE[3]), STR_82(CODE[3]), STR_80(CODE[3]), 
		 -> STR_78(CODE[3]), STR_76(CODE[3]), STR_74(CODE[3]), STR_72(CODE[5]), 
		 -> STR_70(CODE[5]), STR_68(CODE[5]), STR_66(CODE[5]), STR_64(CODE[5]), 
		 -> STR_62(CODE[5]), STR_60(CODE[5]), STR_58(CODE[5]), STR_54(CODE[5]), 
		 -> STR_52(CODE[5]), STR_50(CODE[5]), STR_48(CODE[5]), STR_46(CODE[5]), 
		 -> STR_44(CODE[5]), STR_42(CODE[5]), STR_40(CODE[5]), STR_38(CODE[14]), 
		 -> STR_37(CODE[15]), STR_35(CODE[14]), STR_34(CODE[15]), STR_31(CODE[5]), 
		 -> STR_29(CODE[5]), STR_27(CODE[5]), STR_25(CODE[5]), STR_23(CODE[5]), 
		 -> STR_18(CODE[5]), STR_16(CODE[5]), STR_14(CODE[5]), STR_12(CODE[5]), 
		 -> STR_10(CODE[5]), STR_6(CODE[28]), STR_5(CODE[28]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> Convert_diasem@buffer_dia(COMRAM[20]), buffer1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__Convert_diasem	PTR unsigned char  size(2) Largest target is 20
		 -> Convert_diasem@buffer_dia(COMRAM[20]), 

    V_Principal@cte	PTR unsigned char  size(2) Largest target is 20
		 -> Convert_diasem@buffer_dia(COMRAM[20]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> Convert_diasem@buffer_dia(COMRAM[20]), STR_73(CODE[1]), STR_71(CODE[1]), STR_69(CODE[1]), 
		 -> STR_67(CODE[1]), STR_65(CODE[1]), STR_63(CODE[1]), STR_61(CODE[1]), 
		 -> STR_59(CODE[1]), STR_57(CODE[1]), STR_56(CODE[1]), STR_55(CODE[1]), 
		 -> STR_53(CODE[1]), STR_51(CODE[1]), STR_49(CODE[1]), STR_47(CODE[1]), 
		 -> STR_45(CODE[1]), STR_43(CODE[1]), STR_41(CODE[1]), STR_39(CODE[1]), 
		 -> STR_36(CODE[12]), STR_33(CODE[6]), STR_32(CODE[1]), STR_30(CODE[1]), 
		 -> STR_28(CODE[1]), STR_26(CODE[1]), STR_24(CODE[1]), STR_22(CODE[1]), 
		 -> STR_21(CODE[1]), STR_20(CODE[1]), STR_19(CODE[1]), STR_17(CODE[1]), 
		 -> STR_15(CODE[1]), STR_13(CODE[1]), STR_11(CODE[1]), STR_9(CODE[1]), 
		 -> STR_8(CODE[1]), STR_7(CODE[18]), STR_4(CODE[21]), STR_3(CODE[20]), 
		 -> STR_2(CODE[19]), buffer1(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_V_ProgRiegoIlum
    _V_ProgRiegoIlum->_Lcd_Out
    _V_ProgReloj->_Lcd_Out
    _Write_RTC->_RtccWriteDate
    _V_Principal->_Lcd_Out
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime
    _Lcd_Out->_Convert_diasem
    _Convert_diasem->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   95312
                                             80 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                        _V_Principal
                        _V_ProgReloj
                    _V_ProgRiegoIlum
                          _Write_RTC
           _control_leds_iluminacion
                 _control_leds_riego
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _control_leds_riego                                   2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _control_leds_iluminacion                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _V_ProgRiegoIlum                                     12    12      0   21159
                                             68 COMRAM    12    12      0
                            _Lcd_Cmd
                            _Lcd_Out
                          _Write_RTC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _V_ProgReloj                                         10    10      0   28305
                                             68 COMRAM    10    10      0
                     _Convert_diasem
                            _Lcd_Cmd
                            _Lcd_Out
                          _Write_RTC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (2) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _V_Principal                                          2     2      0   25766
                                             68 COMRAM     2     2      0
                     _Convert_diasem
                            _Lcd_Out
                           _Read_RTC
                    _lee_temperatura
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lee_temperatura                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (3) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (3) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              5     2      3   10261
                                             63 COMRAM     5     2      3
                     _Convert_diasem (ARG)
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Convert_diasem                                      24    22      2    7460
                                             39 COMRAM    24    22      2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    7054
                                             12 COMRAM    27    17     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Convert_diasem (ARG)
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _Lcd_Chr_CP (ARG)
     _Lcd_Cmd (ARG)
   _V_Principal
     _Convert_diasem
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _Lcd_Out
       _Convert_diasem (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _Lcd_Chr_CP (ARG)
       _Lcd_Cmd (ARG)
     _Read_RTC
       _RtccReadDate
       _RtccReadTime
     _lee_temperatura
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _V_ProgReloj
     _Convert_diasem
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _Lcd_Cmd
     _Lcd_Out
       _Convert_diasem (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _Lcd_Chr_CP (ARG)
       _Lcd_Cmd (ARG)
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _V_ProgRiegoIlum
     _Lcd_Cmd
     _Lcd_Out
       _Convert_diasem (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _Lcd_Chr_CP (ARG)
       _Lcd_Cmd (ARG)
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _Write_RTC
     _RtccWrOn
     _RtccWriteDate
       _RtccWrOn
     _RtccWriteTime
       _RtccWrOn
     ___awdiv
   _control_leds_iluminacion
   _control_leds_riego
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      96       5       93.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     51      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F5       6        0.0%
DATA                 0      0      F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Nov 27 13:46:33 2020

                   V_Principal@cte 0045                                  _i 007E  
                               l75 E356                                 l76 E398  
             V_ProgReloj@minuto_tr 004C                       ___awdiv@sign 0006  
              ___wmul@multiplicand 0003                V_ProgReloj@posicion 004D  
                     __CFG_CP0$OFF 000000                                l411 EFD6  
                              l334 DC7C                                l360 DF5E  
                              l354 DDC6                                _dia 00E5  
                              _mes 00E7                                wreg 000FE8  
                  RtccReadDate@pDt 0001           __size_of_V_ProgRiegoIlum 083A  
                             l1034 DE1A                               l1044 DD64  
                             l3021 E41C                               l3031 E4B2  
                             l3023 E43A                               l3025 E458  
                             l3027 E476                               l3019 E3FE  
                             l3035 E4D0                               l3211 F1F0  
                             l3029 E494                               l3037 E50E  
                             l3205 F1B0                               l3125 DD9A  
                             l3311 F50E                               l3223 F244  
                             l2601 EF00                               l3305 F4FA  
                             l3241 F2AC                               l3217 F204  
                             l2611 EF28                               l3323 F562  
                             l3251 F312                               l3235 F298  
                             l3171 F0D6                               l3139 DF32  
                             l2541 ED52                               l3317 F54E  
                             l3341 F5F6                               l3253 F31C  
                             l3229 F258                               l3501 FA9E  
                             l3413 F82C                               l2455 DDDE  
                             l2439 DCAE                               l2623 EF74  
                             l2615 EF4C                               l2607 EF1C  
                             l2543 ED60                               l2535 ED38  
                             l3335 F5B6                               l3263 F39E  
                             l3183 F118                               l3247 F2EC  
                             l3351 F652                               l3503 FAA8  
                             l3431 F894                               l3407 F7EC  
                             l2457 DDE8                               l2625 EF7E  
                             l2561 EE00                               l2553 ED9E  
                             l2713 E2CA                               l3329 F5A2  
                             l3281 F452                               l3257 F36E  
                             l3193 F15C                               l3513 FB2A  
                             l3425 F880                               l2467 DE0E  
                             l2459 DDF0                               l2483 DD58  
                             l2475 DD30                               l2643 EFDC  
                             l2635 EFAC                               l2619 EF50  
                             l2571 EE34                               l2547 ED6A  
                             l2651 F03C                               l3347 F63C  
                             l3267 F3F0                               l3187 F148  
                             l3611 FDFA                               l3507 FAFA  
                             l3443 F8E8                               l3419 F840  
                             l2477 DD3A                               l2637 EFB4  
                             l2629 EF8A                               l2581 EE78  
                             l2573 EE3A                               l2653 F058  
                             l2549 ED80                               l2901 DFFE  
                             l2733 E8FE                               l2717 E2D6  
                             l2709 E2BE                               l3293 F4A6  
                             l3277 F422                               l3605 FDE6  
                             l3533 FBEE                               l3517 FB7C  
                             l3461 F97C                               l3437 F8D4  
                             l3701 ECB4                               l2479 DD42  
                             l2911 E030                               l2903 E004  
                             l2743 E94C                               l2671 E23E  
                             l3287 F466                               l3199 F19C  
                             l3623 FE76                               l3551 FC56  
                             l3527 FBAE                               l3455 F93C  
                             l2649 F030                               l2593 EEBE  
                             l2585 EE8A                               l2569 EE2A  
                             l2681 E26E                               l2665 E214  
                             l3545 FC42                               l3617 FE3A  
                             l3473 F9D0                               l3449 F928  
                             l3705 ECDE                               l2595 EED2  
                             l2587 EE9E                               l2579 EE6E  
                             l2915 E05A                               l2907 E00C  
                             l2819 DF60                               l2739 E938  
                             l2675 E252                               l3299 F4BA  
                             l3563 FCAA                               l3539 FC02  
                             l3491 FA38                               l3467 F990  
                             l3627 FE8C                               l3395 F7AA  
                             l2909 E028                               l2781 E9BE  
                             l2749 E968                               l3581 FD3E  
                             l3557 FC96                               l3485 FA24  
                             l3709 ECFA                               l2599 EED8  
                             l2871 E0C0                               l3575 FCFE  
                             l3479 F9E4                               l2793 DE82  
                             l2785 E9CA                               l2873 E0CA  
                             l2865 E0AA                               l3593 FD92  
                             l3569 FCEA                               l3497 FA78  
                             l2891 E10C                               l2883 E0F0  
                             l2875 E0D2                               l2859 E098  
                             l3587 FD52                               l2789 E9D6  
                             l3685 EC48                               l2887 E0FC  
                             l3599 FDA6                               l3695 EC70  
                             l2897 DFF2                               l2899 DFF8  
                             STR_1 FFEE                               STR_2 FF93  
                             STR_3 FF7F                               STR_4 FED7  
                             STR_5 FE9F                               STR_6 FEBB  
                             STR_7 FFA6                               STR_8 FEEB  
                             STR_9 FEEB                               u2015 E528  
                             u3000 F3FA                               u2025 E53E  
                             u2035 E55E                               u2045 E648  
                             u2055 E65E                               u3200 F7C4  
                             u2065 E67E                               u3140 F5FE  
                             u3150 F600                               u4007 E74C  
                             u4017 E758                               u4107 E3B2  
                             u4027 E300                               u3420 FB02  
                             u3180 F7A8                               u2700 DF20  
                             u4117 E3CA                               u4037 E30E  
                             u3430 FB04                               u3190 F7C2  
                             u2710 DF22                               u4127 E598  
                             u4047 E31C                               u4137 E5A2  
                             u4057 E32A                               u3450 FB20  
                             u4147 E618                               u4067 E338  
                             u2580 E050                               u3460 FB84  
                             u3380 FA80                               u3700 EC5C  
                             u4157 E622                               u4077 E346  
                             u2590 E07A                               u2910 F2F4  
                             u2750 F0D4                               u3470 FB86  
                             u3390 FA82                               u3710 EC5E  
                             u4167 E630                               u4087 E370  
                             u2920 F2F6                               u2760 F0EE  
                             u3800 ECE8                               u4097 E388  
                             u2770 F0F0                               u3650 FE42  
                             u3730 EC78                               u2587 E046  
                             u3660 FE44                               u3820 ED02  
                             u3740 EC7A                               u2597 E070  
                             u2950 F376                               u3830 ED04  
                             u2960 F378                               u3760 ECBC  
                             u3770 ECBE                               u3907 EC16  
                             u2980 F394                               u3917 EC26  
                             u2990 F3F8                               u3790 ECE6  
                             u3927 EC36                               u3937 F7B0  
                             u3857 EBC6                               u3947 F0DC  
                             u3867 EBD6                               u3957 DC86  
                             u3877 EBE6                               u3967 E6B8  
                             u3887 EBF6                               u3977 E6C2  
                             u3897 EC06                               u3987 E738  
                             u3997 E742     V_ProgRiegoIlum@i_hora_riego_tr 004B  
                             _anio 0052                               _main EB78  
                             _hora 0054                               fsr2h 000FDA  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                      __CFG_T1DIG$ON 000000  
                             prodh 000FF4                               prodl 000FF3  
                             start 0000                      __CFG_IESO$OFF 000000  
                 RtccReadDate@rTD0 000B                   RtccReadDate@rTD1 0003  
                  __end_of_Lcd_Cmd E63A                    __end_of_Lcd_Out E082  
                     ___param_bank 000010                    RtccReadTime@pTm 0001  
                       _Lcd_Chr_CP E63A                      ??_V_ProgReloj 0045  
                    ??_V_Principal 0045                      __CFG_PLLDIV$1 000000  
                            ?_main 0001                    __end_of___awdiv E118  
                            STR_10 FFC2                              STR_11 FEEB  
                            STR_20 FEEB                              STR_12 FFC2  
                            STR_21 FEEB                              STR_13 FEEB  
                            STR_30 FEEB                              STR_22 FEEB  
                            STR_14 FFC2                              STR_15 FEEB  
                            STR_31 FFC2                              STR_23 FFC2  
                            STR_32 FEEB                              STR_24 FEEB  
                            STR_40 FFC2                              STR_16 FFC2  
                            STR_41 FEEB                              STR_17 FEEB  
                            STR_25 FFC2                              STR_33 FFE8  
                            STR_26 FEEB                              STR_50 FFC2  
                            STR_42 FFC2                              STR_18 FFC2  
                            STR_34 FFB8                              STR_51 FEEB  
                            STR_43 FEEB                              STR_19 FEEB  
                            STR_27 FFC2                              STR_35 FFC7  
                            STR_28 FEEB                              STR_60 FFC2  
                            STR_52 FFC2                              STR_44 FFC2  
                            STR_36 FFD5                              STR_61 FEEB  
                            STR_53 FEEB                              STR_45 FEEB  
                            STR_29 FFC2                              STR_37 FFB8  
                            STR_70 FFC2                              STR_62 FFC2  
                            STR_54 FFC2                              STR_46 FFC2  
                            STR_38 FFC7                              STR_71 FEEB  
                            STR_63 FEEB                              STR_55 FEEB  
                            STR_47 FEEB                              STR_39 FEEB  
                            STR_56 FEEB                              STR_80 FFF3  
                            STR_72 FFC2                              STR_64 FFC2  
                            STR_48 FFC2                              STR_73 FEEB  
                            STR_65 FEEB                              STR_57 FEEB  
                            STR_49 FEEB                              STR_81 FF6A  
                            STR_82 FFF3                              STR_66 FFC2  
                            STR_58 FFC2                              STR_74 FFF3  
                            STR_67 FEEB                              STR_59 FEEB  
                            STR_75 FF40                              STR_83 FF2B  
                            STR_84 FFF3                              STR_76 FFF3  
                            STR_68 FFC2                              STR_69 FEEB  
                            STR_85 FF55                              STR_77 FEEC  
                            STR_86 FFF3                              STR_78 FFF3  
                            STR_79 FF16                              STR_87 FF01  
                            STR_88 FFE1                    ___awdiv@divisor 0003  
                  __end_of___lwdiv DE24                    __end_of___lwmod DD6E  
                  ___awdiv@counter 0005                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                   __CFG_FCMEN$OFF 000000                              _Sw_Up 0089  
                  __end_of_dpowers FE9F                              _mes_d 00F0  
                            _mes_u 00F1                    __end_of_isdigit DCB8  
                            tablat 000FF5                         _CuentamSeg 0082  
                            status 000FD8                    __end_of_sprintf F068  
                 __end_of_Lcd_Init E3FC            __CFG_DSWDTOSC$INTOSCREF 000000  
                  __initialization DE24                       __end_of_main ED2E  
                 RtccReadTime@rTD0 000B                   RtccReadTime@rTD1 0003  
                 __end_of_Read_RTC E89C         __end_of_control_leds_riego DF60  
                           ??_main 0051                      __activetblptr 000002  
              __end_of_V_ProgReloj F65A                __end_of_V_Principal E1D6  
                 __end_of_RtccWrOn DC76                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADRESH 000FC4  
                           _EECON2 000FA7                             _ANCON0 000F48  
                           _ANCON1 000F49                   ___awdiv@dividend 0001  
                   __CFG_WDTEN$OFF 000000                    _lee_temperatura DC76  
                        ??_Lcd_Cmd 0001                  ??_V_ProgRiegoIlum 0045  
                 RtccWriteDate@pDt 0001                             _RTCCFG 000F3F  
                        ??_Lcd_Out 0043                     __CFG_WPCFG$OFF 000000  
                           _Flag_1 0083                     __CFG_WPDIS$OFF 000000  
                           _Grados 00DF                     __CFG_XINST$OFF 000000  
                      ?_Lcd_Chr_CP 0001                             ___wmul DCB8  
                        ??___awdiv 0005                     __CFG_STVREN$ON 000000  
                           _diasem 007C                             _anio_d 00E9  
                           _anio_u 00EA                   ??_Convert_diasem 002A  
                        ??___lwdiv 0005                          ??___lwmod 000C  
                           _hora_d 00EE                             _hora_u 00EF  
                           clear_0 DE2A                   ___awdiv@quotient 0007  
                           _minuto 0056              __end_of_RtccWriteDate E9E2  
            __end_of_RtccWriteTime E2E2                   RtccWriteTime@pTm 0001  
    V_ProgRiegoIlum@i_hora_ilum_tr 0047                       __pdataCOMRAM 0052  
                        ??_isdigit 0001                       __mediumconst FE94  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                          ??_sprintf 0017  
         _control_leds_iluminacion DD6E                         __accesstop 0060  
          __end_of__initialization DE78                 __size_of_Write_RTC 0196  
                    ___rparam_used 000001                     __pcstackCOMRAM 0001  
                     __pidataBANK0 DCE0                        _V_ProgReloj F068  
                      _V_Principal E118                    __CFG_DSWDTPS$G2 000000  
    V_ProgRiegoIlum@i_min_riego_tr 004C                    __CFG_OSC$INTOSC 000000  
          __end_of_lee_temperatura DC96       V_ProgRiegoIlum@d_min_ilum_tr 004A  
                _inicio_hora_riego 0059                          ?_Lcd_Init 0001  
                     sprintf@width 0025                __size_of_Lcd_Chr_CP 0128  
                       __pbssBANK0 0060                          ?_Read_RTC 0001  
                       _dia_semana 00EB          RtccWriteTime@tempHourWDay 000A  
                        ?_RtccWrOn 0001                            ?___wmul 0001  
                    ?_RtccReadDate 0001                      ?_RtccReadTime 0001  
                __end_of_Write_RTC EB78                         ??_Lcd_Init 0004  
                          _RTCVALH 000F99                            _RTCVALL 000F98  
                       ??_Read_RTC 0013                            _Lcd_Cmd E51A  
                          _Lcd_Out DFEE                            _Humedad 0084  
                          __Hparam 0000                            __Lparam 0000  
                          _Sw_Left 0087                            _Sw_Down 0086  
                       ??_RtccWrOn 0001                     ??_RtccReadDate 0003  
                   ??_RtccReadTime 0003                            ___awdiv E082  
                  __size_of___wmul 0028                            ___lwdiv DDC8  
                          ___lwmod DD22                        _RtccTimeVal 0078  
                          __pcinit DE24                            _fecha_d 00EC  
                          _fecha_u 00ED                            __ramtop 0F00  
                          __ptext0 EB78                            __ptext1 DEF0  
                          __ptext2 DD6E                            __ptext3 F65A  
                          __ptext4 F068                            __ptext5 E9E2  
                          __ptext6 E082                            __ptext7 E1D6  
                          __ptext8 E89C                            __ptext9 DC64  
                          _buffer1 008B                          _T1CONbits 000FCD  
                          _lectura 008A                            _dpowers FE95  
                          _isdigit DC96                    _V_ProgRiegoIlum F65A  
                          _segundo 0080                   ?_lee_temperatura 0001  
                          _sprintf ED2E                 _control_leds_riego DEF0  
             end_of_initialization DE78                       _fin_min_ilum 005E  
                    __Lmediumconst FE94                ?_control_leds_riego 0001  
                     ??_Lcd_Chr_CP 0001                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE                          _PORTAbits 000F80  
                        _PORTCbits 000F82                   __CFG_DSBOREN$OFF 000000  
               V_ProgReloj@anio_tr 004A               ??_control_leds_riego 0001  
       ??_control_leds_iluminacion 0001                   __CFG_CPUDIV$OSC1 000000  
               V_ProgReloj@hora_tr 004B                          _TRISBbits 000F93  
               __end_of_Lcd_Chr_CP E762                   __CFG_IOL1WAY$OFF 000000  
        RtccWriteDate@tempDayMonth 000A                __CFG_MSSP7B_EN$MSK7 000000  
                     ?_V_ProgReloj 0001                       ?_V_Principal 0001  
          __end_of_V_ProgRiegoIlum FE94                     __end_of___wmul DCE0  
    V_ProgRiegoIlum@d_hora_ilum_tr 0049                      __pidataCOMRAM DC5A  
        RtccWriteDate@tempHourWDay 000C                   __CFG_DSWDTEN$OFF 000000  
              start_initialization DE24               __end_of_RtccReadDate DFEE  
                    Lcd_Out@buffer 0041               __end_of_RtccReadTime DEF0  
                __size_of_Lcd_Init 011A               RtccWriteTime@wasAlrm 0006  
             RtccWriteTime@wasWrEn 0007             __size_of_RtccWriteDate 0146  
                  RtccWriteDate@di 0003             __size_of_RtccWriteTime 010C  
                __size_of_Read_RTC 013A                          _Sw_Center 0085  
                        _Temp_prog 00E2                           ??___wmul 0005  
    V_ProgRiegoIlum@d_min_riego_tr 004E                        __pdataBANK0 00A7  
                __size_of_RtccWrOn 0012                    RtccWriteTime@di 0003  
                 __CFG_LPT1OSC$OFF 000000                  Convert_diasem@dia 0028  
                      _ALRMCFGbits 000F91                        __pbssCOMRAM 005C  
          __size_of_Convert_diasem 011E                          _Write_RTC E9E2  
     V_ProgRiegoIlum@i_min_ilum_tr 0048                       _isdigit$2093 0002  
                 _inicio_hora_ilum 0058                           ?_Lcd_Cmd 0001  
                      sprintf@flag 001B                           ?_Lcd_Out 0040  
                      sprintf@prec 001E                   _inicio_min_riego 005B  
                        __pnvBANK0 00E9                   ___lwdiv@dividend 0001  
                    __pmediumconst FE94                           ?___awdiv 0001  
                         ?___lwdiv 0001                           ?___lwmod 0008  
                 ?_V_ProgRiegoIlum 0001            RtccWriteTime@tempMinSec 0008  
 __end_of_control_leds_iluminacion DDC8                      _RtccWriteDate E89C  
                    _RtccWriteTime E1D6     V_ProgRiegoIlum@d_hora_riego_tr 004D  
                         ?_isdigit 0001            V_ProgRiegoIlum@posicion 004F  
             __CFG_RTCOSC$T1OSCREF 000000           Convert_diasem@buffer_dia 002C  
                       ?_Write_RTC 0001                   ___lwdiv@quotient 0005  
                         ?_sprintf 000D                   _RtccAlrmTimeDate 0060  
                   ___wmul@product 0005                           _LATBbits 000F8A  
                         _PIE3bits 000FA3                          _segundo_d 00F4  
                        _segundo_u 00F5                           Lcd_Out@x 0040  
                 __CFG_WDTPS$32768 000000                           Lcd_Out@y 0043  
               RtccWriteDate@wasOn 0005                  V_ProgReloj@dia_tr 0048  
                V_ProgReloj@mes_tr 0049                 _Rtcc_read_TimeDate 0070  
                     Lcd_Init@data 0005                     ?_RtccWriteDate 0001  
             __size_of_V_ProgReloj 05F2                         _ADCON0bits 000FC2  
                ___wmul@multiplier 0001               __size_of_V_Principal 00BE  
                   ?_RtccWriteTime 0001              __size_of_RtccReadDate 008E  
            __size_of_RtccReadTime 006E                           _Lcd_Init E2E2  
                        copy_data0 DE4C                          copy_data1 DE6C  
                         _Read_RTC E762                     _fin_hora_riego 005D  
         __size_of_lee_temperatura 0020                   __size_of_Lcd_Cmd 0120  
                 __size_of_Lcd_Out 0094                           __Hrparam 0000  
                         _RtccDate 009F                           __Lrparam 0000  
                         _RtccTime 00A3                           _RtccWrOn DC64  
                         _Sw_Right 0088                       _RtccReadDate DF60  
                 __size_of___awdiv 0096                       _RtccReadTime DE82  
                 __size_of___lwdiv 005C                   __size_of___lwmod 004C  
                   _posicionesLeft 00C7                       _RtccTimeDate 0068  
      __size_of_control_leds_riego 0070                         sprintf@len 0023  
                       sprintf@val 001C                    _inicio_min_ilum 005A  
                   _Convert_diasem E3FC                   __size_of_isdigit 0022  
                   Lcd_Chr_CP@data 0003                    ___lwdiv@divisor 0003  
                      ??_Write_RTC 000E                    ___lwdiv@counter 0007  
                         __ptext10 E118                           __ptext11 DC76  
                         __ptext20 DCB8                           __ptext12 E762  
                         __ptext21 DD22                           __ptext13 DE82  
                         __ptext22 DDC8                           __ptext14 DF60  
                         __ptext23 E2E2                           __ptext15 DFEE  
                         __ptext24 E51A                           __ptext16 E63A  
                         __ptext17 E3FC                           __ptext18 ED2E  
                         __ptext19 DC96                   __size_of_sprintf 033A  
                      Lcd_Cmd@data 0003                      __size_of_main 01B6  
__size_of_control_leds_iluminacion 005A          ?_control_leds_iluminacion 0001  
                         _minuto_d 00F2                           _minuto_u 00F3  
                  ??_RtccWriteDate 0004                    ??_RtccWriteTime 0004  
           __end_of_Convert_diasem E51A                      _fin_hora_ilum 005C  
                      Lcd_Out@data 0044                        _OSCTUNEbits 000F9B  
                       _INTCONbits 000FF2                 RtccWriteTime@wasOn 0005  
                    _fin_min_riego 005F                           isdigit@c 0003  
                        sprintf@ap 001F                          sprintf@cp 0021  
                        sprintf@sp 000D                   ___lwmod@dividend 0008  
                       _OSCCONbits 000FD3              RtccWriteDate@tempYear 0007  
                ??_lee_temperatura 0001                         _RTCCFGbits 000F3F  
             V_ProgReloj@diasem_tr 0047                           sprintf@c 0027  
                         sprintf@f 000F                       _posicionesUp 00A7  
                  ?_Convert_diasem 0028                    ___lwmod@divisor 000A  
                  ___lwmod@counter 000C               RtccWriteDate@wasAlrm 0006  
             RtccWriteDate@wasWrEn 0009  
